<?xml version="1.0" encoding="utf-8"?>
<root>
	<language id="english">english</language>
	<data name="Line.Object">
		<label>Line</label>
		<info>The properties of the line</info>
	</data>
	<data name="Line.StartPoint">
		<label>Starting point</label>
		<info>Edit field for the starting point, separate x, y an z components by spaces.</info>
	</data>
	<data name="Line.EndPoint">
		<label>Ending point</label>
		<info>Edit field for the ending point, separate x, y an z components by spaces.</info>
	</data>
	<data name="GeoPoint.XValue">
		<label>X-value</label>
		<info>The x-value of the point</info>
	</data>
	<data name="GeoPoint.YValue">
		<label>Y-value</label>
		<info>The y-value of the point</info>
	</data>
	<data name="GeoPoint.ZValue">
		<label>Z-value</label>
		<info>The z-value of the point</info>
	</data>
	<data name="GeoVector.XValue">
		<label>X-value</label>
		<info>The x-value of the direction</info>
	</data>
	<data name="GeoVector.YValue">
		<label>Y-value</label>
		<info>The y-value of the direction</info>
	</data>
	<data name="GeoVector.ZValue">
		<label>Z-value</label>
		<info>The z-value of the direction</info>
	</data>
	<data name="GeoVector.Longitude">
		<label>Angle (in the X/Y plane)</label>
		<info>Angle in the X/Y plane, corresponds to the longitude in the polar coordinate system</info>
	</data>
	<data name="GeoVector.Latitude">
		<label>Angle (in the X/Y plane)</label>
		<info>Angle in the X/Y plane, corresponds to the latitude in the polar coordinate system</info>
	</data>
	<data name="GeoVector.Length">
		<label>Length</label>
		<info>Length of the vector</info>
	</data>
	<data name="MenuId.File">
		<label>File</label>
		<info>The file menu</info>
	</data>
	<data name="MenuId.File.New">
		<label>New</label>
		<info>Create a new project</info>
	</data>
	<data name="MenuId.File.Open">
		<label>Open...</label>
		<info>Open an existing project...</info>
	</data>
	<data name="MenuId.File.Close">
		<label>Close</label>
		<info>Close the current project</info>
	</data>
	<data name="MenuId.File.Save">
		<label>Save</label>
		<info>Save the current project to a file</info>
	</data>
	<data name="MenuId.File.Save.As">
		<label>Save as ...</label>
		<info>Save the current project to a new file</info>
	</data>
	<data name="MenuId.File.Print">
		<label>Print ...</label>
		<info>Print a layout of the project</info>
	</data>
	<data name="MenuId.File.Print.Setup">
		<label>Print Setup</label>
		<info>Modify the printer setup</info>
	</data>
	<data name="MenuId.File.Print.SelectPrinter">
		<label>Select Printer</label>
		<info>Select on which printer to print</info>
	</data>
	<data name="MenuId.File.Mru.File1">
		<label>Most recently used projects</label>
		<info>Most recently used projects, last used project</info>
	</data>
	<data name="MenuId.File.Mru.File2">
		<label>2. last used project</label>
		<info>Most recently used projects, 2. last used project</info>
	</data>
	<data name="MenuId.File.Mru.File3">
		<label>3. last used project</label>
		<info>Most recently used projects, 3. last used project</info>
	</data>
	<data name="MenuId.File.Mru.File4">
		<label>4. last used project</label>
		<info>Most recently used projects, 4. last used project</info>
	</data>
	<data name="MenuId.App.Exit">
		<label>Exit</label>
		<info>Exit program</info>
	</data>
	<data name="MenuId.Edit">
		<label>Edit</label>
		<info>Edit menu: work with selected objects</info>
	</data>
	<data name="MenuId.Edit.Undo">
		<label>Undo</label>
		<info>Undo the last modification</info>
	</data>
	<data name="MenuId.Edit.Redo">
		<label>Redo</label>
		<info>Redo the last modification</info>
	</data>
	<data name="MenuId.Edit.Cut">
		<label>Cut</label>
		<info>Cut selected objects and copy to the clipboard</info>
	</data>
	<data name="MenuId.Edit.Copy">
		<label>Copy</label>
		<info>Copy selected objects to the clipboard</info>
	</data>
	<data name="MenuId.Edit.Paste">
		<label>Paste</label>
		<info>Paste (insert) from the clipboard</info>
	</data>
	<data name="MenuId.Object.Delete">
		<label>Delete</label>
		<info>Delete selected objects</info>
	</data>
	<data name="MenuId.Object.Modify">
		<label>Modify</label>
		<info>Modify selected objects</info>
	</data>
	<data name="MenuId.Align.Left">
		<label>Align left</label>
		<info>The selected objects are left aligned to the left side of the last selected object</info>
	</data>
	<data name="MenuId.Align.Hcenter">
		<label>Align horizontal center</label>
		<info>The selected objects are aligned horizontal at the center of the last selected object</info>
	</data>
	<data name="MenuId.Align.Right">
		<label>Align right</label>
		<info>The selected objects are right aligned to the right side of the last selected object</info>
	</data>
	<data name="MenuId.Align.Top">
		<label>Align top</label>
		<info>The selected objects are top aligned to the top side of the last selected object</info>
	</data>
	<data name="MenuId.Align.Vcenter">
		<label>Align vertical center</label>
		<info>The selected objects are aligned vertically at the center of the last selected object</info>
	</data>
	<data name="MenuId.Align.Center">
		<label>Center</label>
		<info>Center both horizontally and vertically to the center of the last selected object</info>
	</data>
	<data name="MenuId.Align.Bottom">
		<label>Align bottom</label>
		<info>The selected objects are bottom aligned to the bottom side of the last selected object</info>
	</data>
	<data name="MenuId.Space.Down">
		<label>Space down</label>
		<info> The selected objects receive vertically the same distance from each other (gaps are identical)      </info>
	</data>
	<data name="MenuId.Space.Across">
		<label>Space across</label>
		<info>The selected objects receive horizontal the same distance from each other (gaps are identical)      </info>
	</data>
	<data name="MenuId.Same.Width">
		<label>Same width</label>
		<info>All selected objects are scaled to the width of the last selected object</info>
	</data>
	<data name="MenuId.Same.Height">
		<label>Same Height</label>
		<info>All selected objects are scaled to the height of the last selected object</info>
	</data>
	<data name="MenuId.Object.Move">
		<label>Move</label>
		<info>Move the selected objects from a source point to a destination point</info>
	</data>
	<data name="MenuId.Object.Rotate">
		<label>Rotate</label>
		<info>Rotate the selected objects about an axis</info>
	</data>
	<data name="MenuId.Object.Scale">
		<label>Scale</label>
		<info>Scale the selected objects</info>
	</data>
	<data name="MenuId.Object.Reflect">
		<label>Reflect</label>
		<info>Reflect the selected objects at a given axis or plane</info>
	</data>
	<data name="MenuId.Object.Snap">
		<label>Snap</label>
		<info>Snap the selected objects by up to 3 pairs of points</info>
	</data>
	<data name="MenuId.Object.Hatch">
		<label>Hatch</label>
		<info>Fill the inside of the selected objects with a predefined style</info>
	</data>
	<data name="MenuId.Copy.Matrix">
		<label>Copy matrix</label>
		<info>Arrange multiple copies of the selected objects in a grid</info>
	</data>
	<data name="MenuId.Copy.Circular">
		<label>Copy circular</label>
		<info>Arrange multiple copies of the selected objects on a circle</info>
	</data>
	<data name="MenuId.Save.Symbol">
		<label>Make symbol</label>
		<info>Combine the selected objects to a block and save it to the symbol library</info>
	</data>
	<data name="MenuId.Import">
		<label>Import</label>
		<info>Import different kind of 3d data files</info>
	</data>
	<data name="MenuId.Import.Edges">
		<label>Import Edges</label>
		<info>Import edges from different CAD formats</info>
	</data>
	<data name="MenuId.View">
		<label>View</label>
		<info>Various functions concerning visualization</info>
	</data>
	<data name="MenuId.View.Split">
		<label>Split window</label>
		<info>Split window into up to four views</info>
	</data>
	<data name="MenuId.Split.Single">
		<label>Single view</label>
		<info>View in a single window</info>
	</data>
	<data name="MenuId.Split.DoubleHor">
		<label>Two views (horizontal)</label>
		<info>Two views split window horizontally</info>
	</data>
	<data name="MenuId.Split.DoubleVer">
		<label>Two views (vertical)</label>
		<info>Two views split window vertically</info>
	</data>
	<data name="MenuId.Split.TripleHor">
		<label>Three views (horizontal)</label>
		<info>Three views split window horizontally</info>
	</data>
	<data name="MenuId.Split.TripleVer">
		<label>Three views (vertical)</label>
		<info>Three views split window vertically</info>
	</data>
	<data name="MenuId.Split.Quadruple">
		<label>Four views</label>
		<info>Split window in four views</info>
	</data>
	<data name="MenuId.Show.Ruler">
		<label>Ruler</label>
		<info>Show a ruler on the left and top edges of the window</info>
	</data>
	<data name="MenuId.Zoom.Total">
		<label>Zoom total</label>
		<info>Fit all objects into the window</info>
	</data>
	<data name="MenuId.Zoom.Detail">
		<label>Zoom detail</label>
		<info>Select a rectangular section for display</info>
	</data>
	<data name="MenuId.Zoom.DetailPlus">
		<label>Zoom in</label>
		<info>Select a smaller section for display</info>
	</data>
	<data name="MenuId.Zoom.DetailMinus">
		<label>Zoom out</label>
		<info>Select a wider section for display</info>
	</data>
	<data name="MenuId.Repaint">
		<label>Repaint</label>
		<info>Repaint the active window</info>
	</data>
	<data name="MenuId.Thinlinesonly">
		<label>Only thin lines</label>
		<info>Display only thin lines, disregard line width</info>
	</data>
	<data name="MenuId.Construct">
		<label>Construct</label>
		<info>Various methods to construct (draw) objects</info>
	</data>
	<data name="MenuId.Constr.Line">
		<label>Line</label>
		<info>Various methods to construct (draw) a line</info>
	</data>
	<data name="MenuId.Constr.Line.TwoPoints">
		<label>Two points</label>
		<info>Line: specify starting and ending points</info>
	</data>
	<data name="MenuId.Constr.Line.PointLengthAngle">
		<label>Point, length, direction</label>
		<info>Line: specify starting point, length and direction</info>
	</data>
	<data name="MenuId.Constr.Line.PointTangent">
		<label>Tangent from a point</label>
		<info>Line: specify a starting point and an tangential object</info>
	</data>
	<data name="MenuId.Constr.Line.TwoTangents">
		<label>Tangent to two curves</label>
		<info>Line: specify two tangential objects</info>
	</data>
	<data name="MenuId.Constr.Line.TangentAngle">
		<label>Tangent with direction</label>
		<info>Line: specify a direction and an tangential object</info>
	</data>
	<data name="MenuId.Constr.Line.MiddlePerp">
		<label>Perpendicular bisector</label>
		<info>Line: perpendicular bisector of an object</info>
	</data>
	<data name="MenuId.Constr.Line.BisectAngle">
		<label>Bisector</label>
		<info>Line: bisector of an angle</info>
	</data>
	<data name="MenuId.Constr.Line.ParallelDist">
		<label>Parallel</label>
		<info>Line: parallel to a given line with a distance</info>
	</data>
	<data name="MenuId.Constr.Line.ParallelPoint">
		<label>Parallel through point</label>
		<info>Line: parallel to a given line through a point</info>
	</data>
	<data name="MenuId.Constr.Line.PointPerp">
		<label>Perpendicular</label>
		<info>Line: Perpendicular to another object</info>
	</data>
	<data name="MenuId.Constr.Rect">
		<label>Rectangle</label>
		<info>Various methods to construct (draw) a rectangle</info>
	</data>
	<data name="MenuId.Constr.Rect.PointWidthHeightAngle">
		<label>Point, width, height, direction</label>
		<info>Rectangle: specify a point, a width, a height and a direction</info>
	</data>
	<data name="MenuId.Constr.Rect.2PointsHeight">
		<label>Base points, height</label>
		<info>Rectangle: specify two points and the height</info>
	</data>
	<data name="MenuId.Constr.Rect.2DiagonalPoints">
		<label>Diagonal points</label>
		<info>Rectangle: two diagonal points, horizontal</info>
	</data>
	<data name="MenuId.Constr.Rect.Parallelogram">
		<label>Parallelogram</label>
		<info>Parallelogram: specify three points</info>
	</data>
	<data name="MenuId.Constr.Circle">
		<label>Circle</label>
		<info>Various methods to construct (draw) a circle</info>
	</data>
	<data name="MenuId.Constr.Circle.ThreeTangents">
		<label>Tangential to 3 objects</label>
		<info>Circle: Tangential to 3 objects</info>
	</data>
	<data name="MenuId.Constr.Circle.TwoTangentsRadius">
		<label>Tangential to 2 objects, radius</label>
		<info>Circle: Tangential to 2 objects with a given radius</info>
	</data>
	<data name="MenuId.Constr.Circle.TwoTangentsPoint">
		<label>Tangential to 2 objects, point</label>
		<info>Circle: Tangential to 2 objects with a given circlepoint</info>
	</data>
	<data name="MenuId.Constr.Circle.TangentPointRadius">
		<label>Tangential to one object, point and radius</label>
		<info>Circle: Tangential to an object with a given circle point and radius</info>
	</data>
	<data name="MenuId.Constr.Arc">
		<label>Arc</label>
		<info>Various methods to construct (draw) a circular arc</info>
	</data>
	<data name="MenuId.Constr.Arc.CenterRadius">
		<label>Center and radius</label>
		<info>Circular arc: Center and radius, starting and ending angle</info>
	</data>
	<data name="MenuId.Constr.Arc.2PointsRadius">
		<label>2 points and radius</label>
		<info>Circular arc: 2 points and radius</info>
	</data>
	<data name="MenuId.Constr.Arc.CenterStartEnd">
		<label>Center, starting and ending point</label>
		<info>Circular arc: Center, starting and ending point</info>
	</data>
	<data name="MenuId.Constr.Arc.3Points">
		<label>Through 3 points</label>
		<info>Circular arc: starting point, midpoint, ending point</info>
	</data>
	<data name="MenuId.Constr.Arc.ThreeTangents">
		<label>Tangential to 3 objects</label>
		<info>Circular arc: Tangential to 3 objects, starting at the first object, ending at the last</info>
	</data>
	<data name="MenuId.Constr.Arc.TwoTangentsRadius">
		<label>Tangential to 2 objects, radius</label>
		<info>Circular arc: Tangential to 2 objects, radius, starting at the first object, ending at the last</info>
	</data>
	<data name="MenuId.Constr.Arc.TwoTangentsPoint">
		<label>Tangential to 2 objects, point</label>
		<info>Circular arc: Tangential to 2 objects, circlepoint, starting at the first object, ending at the last</info>
	</data>
	<data name="MenuId.Constr.Arc.TangentPointRadius">
		<label>Tangential to an object, point and radius</label>
		<info>Circular arc: Tangential to an object with a given circle point and radius</info>
	</data>
	<data name="MenuId.Constr.Polyline">
		<label>Polyline</label>
		<info>Construction of the polyline by any number of points</info>
	</data>
	<data name="MenuId.Constr.Ellipse">
		<label>Ellipse</label>
		<info>Various methods to construct (draw) an ellipse</info>
	</data>
	<data name="MenuId.Constr.Ellipse.CenterRadius">
		<label>Center, radii</label>
		<info>Ellipse: Center and radii</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius">
		<label>Ellipse: Center and radii</label>
		<info>Construct an ellipse specifying center, major and minor radius.</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.Center">
		<label>Center</label>
		<info>The center of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.MajorRadius">
		<label>1st Radius</label>
		<info>Major radius of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.MinorRadius">
		<label>2nd Radius</label>
		<info>Minor radius of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.Point">
		<label>1. vertex</label>
		<info>Please define the major axis vertex of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.Point2">
		<label>2. vertex</label>
		<info>Please define the minor axis vertex of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.CenterRadius.Angle">
		<label>Ellipse angle</label>
		<info>Specify the angle of the major axis</info>
	</data>
	<data name="MenuId.Constr.Ellipse.CenterTwoTangents">
		<label>Center, 2 tangents</label>
		<info>Ellipse: Center, 2 tangential objects</info>
	</data>
	<data name="MenuId.Constr.Ellipse.FivePoints">
		<label>5 points</label>
		<info>Ellipse: 5 points on the arc of the ellipse</info>
	</data>
	<data name="MenuId.Constr.Ellipsearc">
		<label>Elliptical arc</label>
		<info>Various methods to construct (draw) an elliptical arc</info>
	</data>
	<data name="MenuId.Constr.Ellipsearc.CenterRadius">
		<label>Center, radii</label>
		<info>Construct an elliptical arc by center and both radii</info>
	</data>
	<data name="MenuId.Constr.Ellipsearc.CenterTwoTangents">
		<label>Center, 2 tangents</label>
		<info>Elliptical arc: Center and two tangential objects</info>
	</data>
	<data name="MenuId.Constr.Ellipsearc.FivePoints">
		<label>By 5 points</label>
		<info>elliptical arc: 5 points on the arc</info>
	</data>
	<data name="MenuId.Constr.Text">
		<label>Text</label>
		<info>Various methods to draw text</info>
	</data>
	<data name="MenuId.Constr.Text.1Point">
		<label>Reference point</label>
		<info>Text: set reference point</info>
	</data>
	<data name="MenuId.Constr.Text.2Points">
		<label>Two points</label>
		<info>Text: starting and ending point</info>
	</data>
	<data name="MenuId.Constr.Picture">
		<label>Bitmap</label>
		<info>Add and position a bitmap</info>
	</data>
	<data name="MenuId.Constr.Picture.RefPoint2Directions">
		<label>Fixpoint, 2 directions</label>
		<info>Construct a bitmap by fixpoint, width direction, height direction</info>
	</data>
	<data name="MenuId.Constr.Picture.RefPointWidthHeight">
		<label>Fixpoint, width, height</label>
		<info>Construct a bitmap by fixpoint, width, height</info>
	</data>
	<data name="MenuId.Constr.Dimension">
		<label>Dimension</label>
		<info>Various methods to construct (draw) dimensions</info>
	</data>
	<data name="MenuId.Constr.Horizontal.Dimension">
		<label>Horizontal</label>
		<info>Horizontal linear dimension</info>
	</data>
	<data name="MenuId.Constr.Vertical.Dimension">
		<label>Vertical</label>
		<info>Vertical linear dimension</info>
	</data>
	<data name="MenuId.Constr.Sloping.Dimension">
		<label>Inclined</label>
		<info>Inclined linear dimension</info>
	</data>
	<data name="MenuId.Constr.Distance.Dimension">
		<label>Distance</label>
		<info>Dimension of the distance between two objects</info>
	</data>
	<data name="MenuId.Constr.Radius.Dimension">
		<label>Radius</label>
		<info>Radial dimension</info>
	</data>
	<data name="MenuId.Constr.Diameter.Dimension">
		<label>Diameter</label>
		<info>Diameter dimension</info>
	</data>
	<data name="MenuId.Constr.Angle.Dimension.3p">
		<label>Angle (3 points)</label>
		<info>Angular dimension (3 points)</info>
	</data>
	<data name="MenuId.Constr.Angle.Dimension.Objects">
		<label>Angle (objects)</label>
		<info>Angular dimension of objects (line/circular arcs)</info>
	</data>
	<data name="MenuId.Constr.Angle.Dimension.4p">
		<label>Angle (4 points)</label>
		<info>Angular dimension (4 points)</info>
	</data>
	<data name="MenuId.Constr.Point.Dimension">
		<label>Point</label>
		<info>Point or coordinate dimension</info>
	</data>
	<data name="MenuId.Constr.Labeling.Dimension">
		<label>Label</label>
		<info>Point dimension with free text</info>
	</data>
	<data name="MenuId.Constr.Hatch">
		<label>Hatch</label>
		<info>Various methods to hatch or fill boundaries</info>
	</data>
	<data name="MenuId.Constr.Hatch.Inside">
		<label>Inner point</label>
		<info>Inner point of the boundary</info>
	</data>
	<data name="MenuId.Constr.Hatch.WithHoles">
		<label>With holes</label>
		<info>Boundary with holes</info>
	</data>
	<data name="MenuId.Constr.Hatch.Hull">
		<label>Hull</label>
		<info>Maximum hull containing the inner point</info>
	</data>
	<data name="MenuId.Constr.Symbol">
		<label>Symbol</label>
		<info>Place a selected symbol</info>
	</data>
	<data name="MenuId.Constr.Point">
		<label>Point</label>
		<info>Construct a simple point</info>
	</data>
	<data name="MenuId.Tools">
		<label>Tools</label>
		<info>Various tools to modify objects</info>
	</data>
	<data name="MenuId.Trim">
		<label>Trim</label>
		<info>Trim objects at intersection points</info>
	</data>
	<data name="MenuId.Trim.Split">
		<label>Split</label>
		<info>Split objects at intersection points</info>
	</data>
	<data name="MenuId.Expand">
		<label>Expand</label>
		<info>Expand or extend objects</info>
	</data>
	<data name="MenuId.Connect">
		<label>Connect</label>
		<info>Connect two objects</info>
	</data>
	<data name="MenuId.Cut.Off">
		<label>Chamfer</label>
		<info>Chamfer objects at a common vertex</info>
	</data>
	<data name="MenuId.Round.Off">
		<label>Round</label>
		<info>Round objects at a common vertex</info>
	</data>
	<data name="MenuId.RoundMultiple">
		<label>Round multiple</label>
		<info>Round objects at all common vertices</info>
	</data>
	<data name="MenuId.CutOffMultiple">
		<label>Chamfer multiple</label>
		<info>Chamfer objects at all common vertices</info>
	</data>
	<data name="MenuId.Round.In">
		<label>Channel</label>
		<info>Channel objects at a common vertex</info>
	</data>
	<data name="MenuId.Aequidist">
		<label>Equidistant</label>
		<info>Equidistant curve</info>
	</data>
	<data name="MenuId.Measure">
		<label>Measure</label>
		<info>Measure positions, lengths, angles</info>
	</data>
	<data name="MenuId.Extras">
		<label>Customize</label>
		<info>Options and special functions</info>
	</data>
	<data name="MenuId.Layer">
		<label>Layers</label>
		<info>Define or modify layers</info>
	</data>
	<data name="MenuId.LineWidth">
		<label>Line width</label>
		<info>Modify the line width table</info>
	</data>
	<data name="MenuId.LinePattern">
		<label>Line pattern</label>
		<info>Modify the line pattern table</info>
	</data>
	<data name="MenuId.Hatchstyle">
		<label>Hatch styles</label>
		<info>Modify the hatch style table</info>
	</data>
	<data name="MenuId.Dimstyle">
		<label>Dimension styles</label>
		<info>Modify the dimension style table</info>
	</data>
	<data name="MenuId.Style">
		<label>Style</label>
		<info>Modify the style table</info>
	</data>
	<data name="MenuId.Colors">
		<label>Colors</label>
		<info>Modify the color table</info>
	</data>
	<data name="MenuId.SetGrid">
		<label>Grid</label>
		<info>Define the Grid setting</info>
	</data>
	<data name="MenuId.Activate.Grid">
		<label>Activate grid</label>
		<info>Activate/Inactivate the grid</info>
	</data>
	<data name="MenuId.Activate.Ortho">
		<label>Orthogonal</label>
		<info>Activate/Inactivate the orthogonal drawing mode</info>
	</data>
	<data name="MenuId.Activate.Snap">
		<label>Snap</label>
		<info>Various snapping modes</info>
	</data>
	<data name="MenuId.Help">
		<label>?</label>
		<info>Help functions and copyright</info>
	</data>
	<data name="MenuId.Help.Index">
		<label>Index</label>
		<info>Index of the help system</info>
	</data>
	<data name="MenuId.App.About">
		<label>About CADability dotNET</label>
		<info>Copyright and license information</info>
	</data>
	<data name="MenuId.Object.MakePath">
		<label>Make path</label>
		<info>Connect the selected objects to build a path</info>
	</data>
	<data name="LinePatternSelection">
		<label>Line pattern</label>
		<info>Line pattern of the object</info>
	</data>
	<data name="SelectedObjects.Title">
		<label>Selected objects</label>
		<info>Properties of the selected objects</info>
	</data>
	<data name="GlobalSettings">
		<label>Global settings</label>
		<info>Global settings and defaults for new projects</info>
	</data>
	<data name="ProjectSettings">
		<label>Project settings</label>
		<info>Settings for the current project</info>
	</data>
	<data name="ColorList">
		<label>Colors</label>
		<info>Manage the color table</info>
	</data>
	<data name="ColorList.DontRemoveLastItem">
		<label>The last color cannot be removed</label>
	</data>
	<data name="ColorList.ItemIsUsed">
		<label>The color is in use, remove anyway?</label>
	</data>
	<data name="ColorList.NewColorName">
		<label>Color</label>
	</data>
	<data name="ColorName">
		<label>Color</label>
		<info>Name of the color</info>
	</data>
	<data name="GlobalSettings.SaveModified">
		<label>Save the modified global settings?</label>
	</data>
	<data name="Circle.Object">
		<label>Circle</label>
		<info>Properties of the circle</info>
	</data>
	<data name="Ellipse.Object">
		<label>Ellipse</label>
		<info>Properties of the ellipse</info>
	</data>
	<data name="MenuId.Select">
		<label>Select</label>
		<info>Switch to selection mode</info>
	</data>
	<data name="Color.fromParent">
		<label>Of the block</label>
	</data>
	<data name="LayerList">
		<label>Layer table</label>
		<info>Modify the layer table</info>
	</data>
	<data name="LayerList.DontRemoveLastItem">
		<label>The last item cannot be removed</label>
	</data>
	<data name="LayerList.ItemIsUsed">
		<label>The item is being used, remove anyway?</label>
	</data>
	<data name="LayerList.InfoText">
		<label>List of the items</label>
	</data>
	<data name="LayerList.Default">
		<label>|Standard|Background|2D|3D|Text|Dimension</label>
	</data>
	<data name="StyleList.Default">
		<label>|2D:2D,red,thin,continous|3D:3D,blue,thin,continous|Text:Text,blue,-,-|Dimension:Dimension,blue,-,-</label>
	</data>
	<data name="LayerName">
		<label>Layer</label>
		<info>Define a layer</info>
	</data>
	<data name="ColorList.Default">
		<label>|Red(255,0,0)|Green(0,255,0)|Blue(0,0,255)</label>
	</data>
	<data name="LayerList.NewLayerName">
		<label>Layer</label>
	</data>
	<data name="Select.SelectAbove">
		<label>Display</label>
		<info>Where to display selected objects</info>
	</data>
	<data name="Select.SelectAbove.Values">
		<label>|Foreground|Original position</label>
	</data>
	<data name="Select.UseFrame">
		<label>Selection frame</label>
		<info>Bounding rectangle for selected objects</info>
	</data>
	<data name="Select.UseFrame.Values">
		<label>|Use|Do not use</label>
	</data>
	<data name="Select.UseFixPoint">
		<label>Fixpoint</label>
		<info>Use fixpoint when modifying selected objects?</info>
	</data>
	<data name="Select.UseFixPoint.Values">
		<label>|Use|Do not use</label>
	</data>
	<data name="Select.HandleSize">
		<label>Handle size</label>
		<info>Size of the handles (hotspots)</info>
	</data>
	<data name="ActionTabPage">
		<info>Properties and input fields for the active action</info>
	</data>
	<data name="ProjectTabPage">
		<info>Properties or settings for this project</info>
	</data>
	<data name="GlobalTabPage">
		<info>Global properties and settings</info>
	</data>
	<data name="ViewTabPage">
		<info>Properties or settings for the different views of this project</info>
	</data>
	<data name="SymbolTabPage">
		<info>Symbols available for use in the project</info>
	</data>
	<data name="Line.Length">
		<label>Length</label>
		<info>Length of the line</info>
	</data>
	<data name="Line.Angle">
		<label>Angle</label>
		<info>Angle of the line</info>
	</data>
	<data name="Line.Direction">
		<label>Direction</label>
		<info>Direction of the line</info>
	</data>
	<data name="MenuId.Snap">
		<label>Snap mode</label>
		<info>Snap mode for mouse input</info>
	</data>
	<data name="MenuId.Snap.ObjectSnapPoint">
		<label>Snap point</label>
		<info>Snap on primary points of the object</info>
	</data>
	<data name="MenuId.Snap.Intersections">
		<label>Intersection points</label>
		<info>Snap on intersection points of objects</info>
	</data>
	<data name="MenuId.Snap.ObjectPoint">
		<label>Object point</label>
		<info>Snap on arbitrary points of the object</info>
	</data>
	<data name="MenuId.Snap.DropPoint">
		<label>Drop point</label>
		<info>Snap on perpendicular base point on the objects</info>
	</data>
	<data name="MenuId.Snap.ObjectCenter">
		<label>Center</label>
		<info>Snap on center of object</info>
	</data>
	<data name="MenuId.Snap.TangentPoint">
		<label>Tangential point</label>
		<info>Snap on tangential point of object</info>
	</data>
	<data name="MenuId.Snap.Surface">
		<label>Surface</label>
		<info>Snap on point on a surface</info>
	</data>
	<data name="DxfDwg.ReadingFile">
		<label>Reading dxf/dwg file</label>
	</data>
	<data name="ModelView">
		<label>Model view "{0}"</label>
		<info>Named model view</info>
	</data>
	<data name="DrawingPlane">
		<label>Drawing plane</label>
		<info>The drawing plane for this model view</info>
	</data>
	<data name="DrawingPlane.Location">
		<label>Origin</label>
		<info>Origin of the drawing plane</info>
	</data>
	<data name="DrawingPlane.Normal">
		<label>Normal direction</label>
		<info>Direction of the normal vector of the drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardXY">
		<label>X/Y plane</label>
		<info>Set X/Y plane as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardXY.Offset">
		<label>X/Y plane with offset</label>
		<info>Set X/Y plane with offset as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardXZ">
		<label>X/Z plane</label>
		<info>Set X/Z plane as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardXZ.Offset">
		<label>X/Z plane with offset</label>
		<info>Set X/Z plane with offset as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardYZ">
		<label>Y/Z plane</label>
		<info>Set Y/Z plane as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.StandardYZ.Offset">
		<label>Y/Z plane with offset</label>
		<info>Set Y/Z plane with offset as current drawing plane</info>
	</data>
	<data name="MenuId.DrawingPlane.Three.Points">
		<label>Three points</label>
		<info>Define the drawing plane through three points</info>
	</data>
	<data name="MenuId.DrawingPlane.Point.Direction">
		<label>Point and normal</label>
		<info>Define the drawing plane through a points and with a normal vector</info>
	</data>
	<data name="Block.Object">
		<label>Block</label>
		<info>A block, a collection of several objects</info>
	</data>
	<data name="Block.Name">
		<label>Name</label>
		<info>Name of the block</info>
	</data>
	<data name="Block.RefPoint">
		<label>Reference point</label>
		<info>Reference point of the block</info>
	</data>
	<data name="Block.Children">
		<label>Subobjects</label>
		<info>Objects contained in this block</info>
	</data>
	<data name="Face.Object">
		<label>Face</label>
		<info>Properties of a face</info>
	</data>
	<data name="Solid.Object">
		<label>Solid</label>
		<info>Properties of a solid</info>
	</data>
	<data name="Solid.Name">
		<label>Name</label>
		<info>Name of the solid object</info>
	</data>
	<data name="Face.Name">
		<label>Name</label>
		<info>Name of the face</info>
	</data>
	<data name="Constr.Point">
		<label>Construct a point</label>
		<info>Construct a single point</info>
	</data>
	<data name="Point">
		<label>Point</label>
		<info>Point construction</info>
	</data>
	<data name="MenuId.Constr.Circle.CenterPoint">
		<label>Center and point</label>
		<info>Circle: center and point on arc</info>
	</data>
	<data name="Constr.Circle.CenterPoint">
		<label>Circle: center and point on arc</label>
		<info>Circle: center and point on arc</info>
	</data>
	<data name="Constr.Circle.CenterPoint.Point">
		<label>Point on arc</label>
		<info>Point on the arc (circumference) of the circle</info>
	</data>
	<data name="MenuId.Constr.Circle.2Points">
		<label>Two points of circle</label>
		<info>Circle: two diametric points of circle</info>
	</data>
	<data name="Constr.Circle.2Points">
		<label>Circle: two points</label>
		<info>Circle: two diametric points of circle</info>
	</data>
	<data name="MenuId.Constr.Circle.TwoPointsRadius">
		<label>Two points of circle and radius</label>
		<info>Circle: two points of circle and radius</info>
	</data>
	<data name="Constr.Circle.TwoPointsRadius">
		<label>Circle: two points and radius</label>
		<info>Circle: two points on the circle and a certain radius</info>
	</data>
	<data name="MenuId.Constr.Circle.3Points">
		<label>Three points</label>
		<info>Circle: three points on the circumference of circle</info>
	</data>
	<data name="Constr.Circle.3Points">
		<label>Circle: three points</label>
		<info>Circle: three points on the circumference of circle</info>
	</data>
	<data name="Constr.Circle.Point">
		<label>Point of circle</label>
		<info>Point on the circumference of circle</info>
	</data>
	<data name="Constr.Circle.Point1">
		<label>1st Point of circle</label>
		<info>1st Point on the circumference of circle</info>
	</data>
	<data name="Constr.Circle.Point2">
		<label>2nd Point of circle</label>
		<info>2nd Point on the circumference of circle</info>
	</data>
	<data name="Constr.Circle.3Points.Point3">
		<label>3rd Point of circle</label>
		<info>3rd Point on the circumference of circle</info>
	</data>
	<data name="MenuId.Constr.Circle.CenterRadius">
		<label>Center and radius</label>
		<info>Circle: Center and radius</info>
	</data>
	<data name="Constr.Circle.CenterRadius">
		<label>Circle: Center/radius</label>
		<info>Circle: Center and radius</info>
	</data>
	<data name="Constr.Circle.Center">
		<label>Center</label>
		<info>Center of the circle</info>
	</data>
	<data name="Constr.Circle.Radius">
		<label>Radius</label>
		<info>Radius of the circle</info>
	</data>
	<data name="Constr.Circle.Diameter">
		<label>Diameter</label>
		<info>Diameter of the circle</info>
	</data>
	<data name="Constr.Arc.CenterRadius">
		<label>Circular arc: Center/radius</label>
		<info>Circular arc: Center, radius, starting and ending angle</info>
	</data>
	<data name="Constr.Arc.Center">
		<label>Center</label>
		<info>Center of the circular arc</info>
	</data>
	<data name="Constr.Arc.ThreeTangents">
		<label>Circular arc: 3 tangents</label>
		<info>Circular arc: tangential to three objects</info>
	</data>
	<data name="Constr.Arc.TwoTangentsRadius">
		<label>Circular arc: At 2 tangents and radius</label>
		<info>Circular arc: tangential to two objects and radius</info>
	</data>
	<data name="Constr.Arc.TwoTangentsPoint">
		<label>Circular arc: At 2 tangents and point</label>
		<info>Circular arc: tangential to two objects and circlepoint</info>
	</data>
	<data name="Constr.Arc.TangentPointRadius">
		<label>Circular arc: At a tangent, point and radius</label>
		<info>Circular arc: Tangential to an object, circle point and radius</info>
	</data>
	<data name="Constr.Circle.ThreeTangents">
		<label>Circle: 3 tangents</label>
		<info>Circle: tangential to three objects</info>
	</data>
	<data name="Constr.Circle.TwoTangentsRadius">
		<label>Circle: 2 tangents and radius</label>
		<info>Circle: tangential to two objects and radius</info>
	</data>
	<data name="Constr.Circle.TwoTangentsPoint">
		<label>Circle: 2 tangents and point</label>
		<info>Circle: tangential to two objects and circlepoint</info>
	</data>
	<data name="Constr.Circle.TangentPointRadius">
		<label>Circle: At a tangent, point and radius</label>
		<info>Circle: Tangential to an object, circle point and radius</info>
	</data>
	<data name="Constr.Arc.Radius">
		<label>Radius</label>
		<info>Radius of the circular arc</info>
	</data>
	<data name="Constr.Arc.Diameter">
		<label>Diameter</label>
		<info>Diameter of the circular arc</info>
	</data>
	<data name="Constr.Arc.Direction">
		<label>Direction</label>
		<info>Direction of the circular arc</info>
	</data>
	<data name="Constr.Arc.Direction.Values">
		<label>|Counter-clockwise|Clockwise</label>
	</data>
	<data name="Constr.Arc.CenterRadius.StartAngle">
		<label>Starting angle</label>
		<info>Starting angle of the circular arc</info>
	</data>
	<data name="Constr.Arc.CenterRadius.EndAngle">
		<label>Ending angle</label>
		<info>Ending angle of the circular arc</info>
	</data>
	<data name="Constr.Arc.2PointsRadius">
		<label>Circular arc: 2 points, radius</label>
		<info>Circular arc: two points on the circumference and radius</info>
	</data>
	<data name="Constr.Arc.3Points">
		<label>Circular arc: 3 points </label>
		<info>Circular arc: three points on the circumference of the circle</info>
	</data>
	<data name="Constr.Arc.Point">
		<label>Point on circle</label>
		<info>Circumference point of circle</info>
	</data>
	<data name="Constr.Arc.Point1">
		<label>1st Point on circle</label>
		<info>1st circumference point of circle</info>
	</data>
	<data name="Constr.Arc.Point2">
		<label>2nd Point on circle</label>
		<info>2nd circumference point of circle</info>
	</data>
	<data name="Constr.Arc.3Points.Point3">
		<label>3rd Point on circle</label>
		<info>3rd circumference point of circle</info>
	</data>
	<data name="Constr.Arc.CenterStartEnd">
		<label>Circular arc: center, starting and ending point</label>
		<info>Circular arc: center, starting and ending point</info>
	</data>
	<data name="Constr.Arc.StartPoint">
		<label>Starting point</label>
		<info>Starting point of the circular arc</info>
	</data>
	<data name="Constr.Arc.EndPoint">
		<label>Ending point</label>
		<info>Ending point of the circular arc</info>
	</data>
	<data name="Constr.Line.ParallelDist">
		<label>Line: parallel at a distance</label>
		<info>Line: parallel to another line at a distance</info>
	</data>
	<data name="Constr.Line.Parallel.Object">
		<label>Base line</label>
		<info>Base line for the parallel line</info>
	</data>
	<data name="Constr.Line.Parallel.Dist">
		<label>Distance</label>
		<info>Distance of the parallel line</info>
	</data>
	<data name="Constr.Line.ParallelPoint">
		<label>Line: parallel through a point</label>
		<info>Line: parallel to another line through a point</info>
	</data>
	<data name="Constr.Line.Parallel.Point">
		<label>Point</label>
		<info>Point for the parallel</info>
	</data>
	<data name="Constr.Line.TwoTangents">
		<label>Line: double tangent</label>
		<info>Line: tangential to two objects</info>
	</data>
	<data name="Constr.Line.TangentAngle">
		<label>Line: inclined tangent</label>
		<info>Line: tangential to an object with a direction</info>
	</data>
	<data name="Constr.Line.PointTangent">
		<label>Line: tangent from a point</label>
		<info>Line: tangential to an object from a point</info>
	</data>
	<data name="Constr.Line.Tangent.Object">
		<label>Tangential object</label>
		<info>Tangential object for the line</info>
	</data>
	<data name="Constr.Line.Tangent.Object2">
		<label>2nd Tangential object</label>
		<info>2nd Tangential object for the line</info>
	</data>
	<data name="Constr.Arc.Tangent.Object">
		<label>1st Tangential object</label>
		<info>1st tangential object for the arc or circle</info>
	</data>
	<data name="Constr.Arc.Tangent.Object2">
		<label>2nd Tangential object</label>
		<info>2nd Tangential object for the arc or circle</info>
	</data>
	<data name="Constr.Arc.Tangent.Object3">
		<label>3rd Tangential object</label>
		<info>3rd Tangential object for the arc or circle</info>
	</data>
	<data name="Constr.Line.PointPerp">
		<label>Line: perpendicular to an object</label>
		<info>Line: perpendicular from a point to an object</info>
	</data>
	<data name="Constr.Line.Perp.Object">
		<label>Base object</label>
		<info>Base object for the perpendicular line</info>
	</data>
	<data name="Constr.Line.MiddlePerp">
		<label>Line: perpendicular bisector</label>
		<info>Line: perpendicular bisector of an object</info>
	</data>
	<data name="Constr.Line.MiddlePerp.Object">
		<label>Base object</label>
		<info>Base object for the perpendicular bisector</info>
	</data>
	<data name="Constr.Line.BisectAngle">
		<label>Line: bisector of an angle</label>
		<info>Line: bisector of an angle</info>
	</data>
	<data name="Constr.Line.PointLengthAngle">
		<label>Line: point, length, direction</label>
		<info>Line: point, length, direction</info>
	</data>
	<data name="Constr.Line.TwoPoints">
		<label>Line: two points</label>
		<info>Line: starting and ending point</info>
	</data>
	<data name="Constr.Line.Bisect.Object">
		<label>Bisector: Object</label>
		<info>Object for angular bisection</info>
	</data>
	<data name="Constr.Line.MultiSelection">
		<label>|To the right|Opposite|To the left</label>
	</data>
	<data name="Constr.EllipseArc.CenterRadius">
		<label>Elliptical arc: Center/radii</label>
		<info>Elliptical arc: center, major and minor radius</info>
	</data>
	<data name="Constr.EllipseArc.StartAngle">
		<label>Starting angle</label>
		<info>Starting angle of the elliptical arc</info>
	</data>
	<data name="Constr.EllipseArc.EndAngle">
		<label>Ending angle</label>
		<info>Ending angle of the elliptical arc</info>
	</data>
	<data name="Constr.Rect.PointWidthHeightAngle">
		<label>Rectangle: Point/width/height/direction</label>
		<info>Rectangle: point, width, height and direction of the base line</info>
	</data>
	<data name="Constr.Rect.Rect2PointsHeight">
		<label>Rectangle: 2 points/height</label>
		<info>Rectangle: two points of the base line and height</info>
	</data>
	<data name="Constr.Rect.Rect2DiagonalPoints">
		<label>Rectangle: 2 diagonal points</label>
		<info>Rectangle: 2 diagonal points (always horizontal)</info>
	</data>
	<data name="Constr.Rect.Parallelogram">
		<label>Parallelogram: Punkt/2 directions</label>
		<info>Parallelogram: fixpoint and two directions</info>
	</data>
	<data name="Rect.StartPoint">
		<label>Starting point</label>
		<info>Starting point of the rectangle</info>
	</data>
	<data name="Rect.SecondPoint">
		<label>2nd Point</label>
		<info>2nd point of the rectangle baseline</info>
	</data>
	<data name="Rect.DiagonalPoint">
		<label>Diagonal point</label>
		<info>Diagonal point of the rectangle</info>
	</data>
	<data name="Rect.Height">
		<label>Height</label>
		<info>Height of the rectangle</info>
	</data>
	<data name="Rect.Width">
		<label>Width</label>
		<info>Width of the rectangle</info>
	</data>
	<data name="Rect.Angle">
		<label>Direction</label>
		<info>Direction of the rectangle base line</info>
	</data>
	<data name="Constr.Rect.Parallelogram.StartPoint">
		<label>Starting point</label>
		<info>Starting point of the parallelogram</info>
	</data>
	<data name="Constr.Rect.Parallelogram.X-Direction">
		<label>Main direction</label>
		<info>Main direction of the parallelogram</info>
	</data>
	<data name="Constr.Rect.Parallelogram.Y-Direction">
		<label>Secondary direction</label>
		<info>Secondary direction of the parallelogram</info>
	</data>
	<data name="Constr.Text.1Point">
		<label>Text: position</label>
		<info>Text: first point</info>
	</data>
	<data name="Constr.Text.2Points">
		<label>Text: 2 point</label>
		<info>Text: second point</info>
	</data>
	<data name="Text.StartPoint">
		<label>Reference point</label>
		<info>Reference point of the text</info>
	</data>
	<data name="Text.SecondPoint">
		<label>2nd Point</label>
		<info>2nd Point of the text base line</info>
	</data>
	<data name="Constr.Dimension.Horizontal">
		<label>Horizontal linear dimension</label>
		<info>Horizontal linear dimension</info>
	</data>
	<data name="Constr.Dimension.Vertical">
		<label>Vertical linear dimension</label>
		<info>Vertical linear dimension</info>
	</data>
	<data name="Constr.Dimension.Sloping">
		<label>Inclined linear dimension</label>
		<info>Inclined linear dimension</info>
	</data>
	<data name="Constr.Dimension.Point">
		<label>Coordinate dimension</label>
		<info>Coordinate dimension</info>
	</data>
	<data name="Constr.Dimension.Point.Point">
		<label>Point</label>
		<info>Point to dimension</info>
	</data>
	<data name="Constr.Dimension.Location">
		<label>Dimension line position</label>
		<info>Position of dimension line</info>
	</data>
	<data name="Constr.Dimension.Direction">
		<label>Direction</label>
		<info>Direction of the inclined dimension</info>
	</data>
	<data name="Constr.Dimension.Points.Method">
		<label>Mode</label>
		<info>Mode of linear dimension</info>
	</data>
	<data name="Constr.Dimension.Points.Method.Values">
		<label>|Simple|Continue|Series</label>
	</data>
	<data name="Constr.Dimension.Distance">
		<label>Dimension: Distance</label>
		<info>Dimension the distance between two objects</info>
	</data>
	<data name="Constr.Dimension.Distance.Object1">
		<label>1st Object</label>
		<info>1st Object for distance dimension</info>
	</data>
	<data name="Constr.Dimension.Distance.Object2">
		<label>2nd Object</label>
		<info>2nd Object for distance dimension</info>
	</data>
	<data name="Constr.Dimension.Direction.3Points">
		<label>Angular dimension (3 points)</label>
		<info>Angular dimension between three points</info>
	</data>
	<data name="Constr.Dimension.Direction.3Points.Point1">
		<label>Center</label>
		<info>Center of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.3Points.Point2">
		<label>1st angle point</label>
		<info>Point to specify the first side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.3Points.Point3">
		<label>2nd angle point</label>
		<info>Point to specify the second side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.4Points">
		<label>Angular dimension (4 points)</label>
		<info>Angle dimension of an angle given by four points</info>
	</data>
	<data name="Constr.Dimension.Direction.4Points.Point1">
		<label>1st point </label>
		<info>1st point on first side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.4Points.Point2">
		<label>2nd point</label>
		<info>2nd point on first side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.4Points.Point3">
		<label>3rd point</label>
		<info>1st point on second side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.4Points.Point4">
		<label>4th point</label>
		<info>2nd point on second side of the angle</info>
	</data>
	<data name="Constr.Dimension.Direction.Objects">
		<label>Angular dimension (objects)</label>
		<info>Angular dimension between two objects</info>
	</data>
	<data name="Constr.Dimension.Direction.Object1">
		<label>Arc or line</label>
		<info>Circular arc to be dimensioned or line as the first object</info>
	</data>
	<data name="Constr.Dimension.Direction.Object2">
		<label>Line</label>
		<info>Line as the second object</info>
	</data>
	<data name="Constr.Dimension.Arc.Radius">
		<label>Radius Dimension</label>
		<info>Radius dimension of circles or circular arcs</info>
	</data>
	<data name="Constr.Dimension.Arc.Diameter">
		<label>Diameter dimension</label>
		<info>Diameter dimension of circles or circular arcs</info>
	</data>
	<data name="Constr.Dimension.Arc.Object">
		<label>Circle or arc</label>
		<info>Circle or arc to be dimensioned</info>
	</data>
	<data name="Constr.Dimension.Point.Object">
		<label>Object</label>
		<info>Object to be labeled or annotated</info>
	</data>
	<data name="Constr.Dimension.Labeling">
		<label>Annotation</label>
		<info>Annotation or label for a point</info>
	</data>
	<data name="Constr.Dimension.Labeling.Point">
		<label>Position</label>
		<info>Position of the arrow</info>
	</data>
	<data name="Constr.Dimension.Labeling.Object">
		<label>Object</label>
		<info>Object to be annotated or labeled</info>
	</data>
	<data name="Constr.Dimension.Labeling.Point.Text">
		<label>Text</label>
		<info>Annotation text</info>
	</data>
	<data name="Constr.Dimension.Labeling.Location">
		<label>Label position</label>
		<info>Position of the label</info>
	</data>
	<data name="Constr.Dimension.Point.Method">
		<label>Mode</label>
		<info>Point mode of annotation</info>
	</data>
	<data name="Constr.Dimension.Point.Method.Values">
		<label>|Perpendicular|Snap point</label>
	</data>
	<data name="Constr.Hatch.InnerPoint">
		<label>Hatching: Inner point</label>
		<info>Find hatch boundary from an inner point</info>
	</data>
	<data name="Constr.Hatch.ExcludeHoles">
		<label>Hatching: With holes</label>
		<info>Find hatch boundary with holes from an inner point</info>
	</data>
	<data name="Constr.Hatch.Hull">
		<label>Hatching: Hull</label>
		<info>Find hatch boundary  as outer hull from an inner point</info>
	</data>
	<data name="Constr.Hatch.InnerPoint.Point">
		<label>Inner point</label>
		<info>Inner point of the boundary</info>
	</data>
	<data name="LayerSelection">
		<label>Layer</label>
		<info>The layer of the object/objects</info>
	</data>
	<data name="ColorSelection">
		<label>Color</label>
		<info>The color of the object/objects</info>
	</data>
	<data name="ColorDef.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="Layer.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="ColorDef.fromParent">
		<label>Of the block</label>
	</data>
	<data name="ColorDef.fromStyle">
		<label>Of the style</label>
	</data>
	<data name="MenuId.Angle.ModifyWithMouse">
		<label>With the mouse</label>
		<info>Modify the angle with the mouse</info>
	</data>
	<data name="MenuId.Angle.NameVariable">
		<label>Name variable</label>
		<info>Define a variable with this value</info>
	</data>
	<data name="MenuId.Angle.Plus30">
		<label>30° to the left</label>
		<info>30° to the left from current angle</info>
	</data>
	<data name="MenuId.Angle.Plus45">
		<label>45° to the left</label>
		<info>45° to the left from current angle</info>
	</data>
	<data name="MenuId.Angle.Plus90">
		<label>90° to the left</label>
		<info>90° to the left from current angle</info>
	</data>
	<data name="MenuId.Angle.Minus30">
		<label>30° to the right</label>
		<info>30° to the right from current angle</info>
	</data>
	<data name="MenuId.Angle.Minus45">
		<label>45° to the right</label>
		<info>45° to the right from current angle</info>
	</data>
	<data name="MenuId.Angle.Minus90">
		<label>90° to the right</label>
		<info>90° to the right from current angle</info>
	</data>
	<data name="MenuId.Angle.Opposite">
		<label>Opposite direction</label>
		<info>Opposite direction of the current angle</info>
	</data>
	<data name="MenuId.ColorListEntry.Current">
		<label>Default color</label>
		<info>This color becomes the default color for new objects</info>
	</data>
	<data name="MenuId.ColorListEntry.ChangeColor">
		<label>Change color</label>
		<info>Change this color</info>
	</data>
	<data name="MenuId.ColorListEntry.Edit">
		<label>Rename</label>
		<info>Rename this color</info>
	</data>
	<data name="MenuId.ColorListEntry.Delete">
		<label>Remove</label>
		<info>Remove this color from the color table</info>
	</data>
	<data name="MenuId.LayerListEntry.Delete">
		<label>Remove</label>
		<info>Remove this layer from the layer table</info>
	</data>
	<data name="MenuId.LayerListEntry.Current">
		<label>Default layer</label>
		<info>This color becomes the default layer for new objects</info>
	</data>
	<data name="MenuId.LayerListEntry.Edit">
		<label>Rename</label>
		<info>Rename this layer</info>
	</data>
	<data name="MenuId.HatchStyleList.NewSolid">
		<label>New solid hatch style</label>
		<info>Define a new solid hatch style</info>
	</data>
	<data name="MenuId.HatchStyleList.NewLines">
		<label>New lines hatch style</label>
		<info>Define a new lines hatch style</info>
	</data>
	<data name="MenuId.HatchStyleList.NewContour">
		<label>New equidistant hatch style</label>
		<info>Define a new equidistant hatch style</info>
	</data>
	<data name="MenuId.HatchStyleList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused hatchstyles from the table</info>
	</data>
	<data name="MenuId.HatchStyleList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the hatch style table from all hatch styles used in the project</info>
	</data>
	<data name="MenuId.HatchStyleList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the hatch style table from all hatch styles define in the global settings</info>
	</data>
	<data name="MenuId.HatchStyleList.MakeGlobal">
		<label>Make global</label>
		<info>Use this hatch style table as the global hatch style table</info>
	</data>
	<data name="Constr.BSpline">
		<label>Spline: Through points</label>
		<info>Spline: Passing through these points</info>
	</data>
	<data name="Constr.BSpline.Points">
		<label>Points</label>
		<info>Points passed by the spline</info>
	</data>
	<data name="Constr.BSpline.Points.Point">
		<label>Point</label>
		<info>Point passed by the spline</info>
	</data>
	<data name="MenuID.Constr.BSpline.Points">
		<label>Spline through points</label>
		<info>Spline: Passing through a set of points</info>
	</data>
	<data name="Line.Description">
		<label>Line</label>
	</data>
	<data name="Circle.Description">
		<label>Circle</label>
	</data>
	<data name="Arc.Description">
		<label>Circular arc</label>
	</data>
	<data name="Ellipse.Description">
		<label>Ellipse</label>
	</data>
	<data name="EllipseArc.Description">
		<label>Elliptical arc</label>
	</data>
	<data name="GeneralCurve.Description">
		<label>Curve</label>
	</data>
	<data name="Block.Description">
		<label>Block</label>
	</data>
	<data name="BlockRef.Description">
		<label>Block Reference</label>
	</data>
	<data name="Path.Description">
		<label>Path</label>
	</data>
	<data name="Polyline.Description">
		<label>Polyline</label>
	</data>
	<data name="MenuId.SelectedObjects.ComposeAll">
		<label>Combine</label>
		<info>Combine the selected objects to a block</info>
	</data>
	<data name="MenuId.SelectedObjects.Decompose">
		<label>Explode</label>
		<info>Disintegrate the block into single objects</info>
	</data>
	<data name="FileName.NewFile">
		<label>New file</label>
	</data>
	<data name="Constr.BSpline.Mode">
		<label>Mode</label>
		<info>Open or closed spline</info>
	</data>
	<data name="Constr.BSpline.Mode.Values">
		<label>|Closed|Open</label>
	</data>
	<data name="BSpline.Object">
		<label>Spline</label>
		<info>Properties of the spline</info>
	</data>
	<data name="BSpline.Poles">
		<label>Poles</label>
		<info>Control points of the spline</info>
	</data>
	<data name="BSpline.Poles.Point">
		<label>Pole {0}</label>
		<info>Control point of the spline</info>
	</data>
	<data name="BSpline.ThroughPoints">
		<label>Through points</label>
		<info>The spline is passing through these points</info>
	</data>
	<data name="BSpline.ThroughPoints.Point">
		<label>Point {0}</label>
		<info>The spline is passing through these point</info>
	</data>
	<data name="GeoObject.Attributes">
		<label>Attributes</label>
		<info>Attributes of the selected objects</info>
	</data>
	<data name="Polyline.Vertex">
		<label>Vertices</label>
		<info>Vertices of the polyline</info>
	</data>
	<data name="Polyline.Vertex.Point">
		<label>Vertex {0}</label>
		<info>A vertex of the polyline</info>
	</data>
	<data name="Polyline.Object">
		<label>Polyline</label>
		<info>The properties of the polyline</info>
	</data>
	<data name="Constr.Polyline">
		<label>Polyline</label>
		<info>Construct a polyline by specifying the vertices</info>
	</data>
	<data name="Constr.Polyline.Points">
		<label>Polyline</label>
		<info>Construct a polyline by specifying the vertices</info>
	</data>
	<data name="Constr.Polyline.Points.Point">
		<label>Vertex</label>
		<info>A vertex of the polyline</info>
	</data>
	<data name="MoveObjects">
		<label>Move objects</label>
		<info>Move selected objects</info>
	</data>
	<data name="MoveObjects.Vector">
		<label>Offset</label>
		<info>Translation offset</info>
	</data>
	<data name="Objects.RefPoint">
		<label>Reference point</label>
		<info>Specify the reference point of the object</info>
	</data>
	<data name="Objects.StartPoint">
		<label>Starting point</label>
		<info>Starting point for the modification</info>
	</data>
	<data name="Objects.EndPoint">
		<label>Ending point</label>
		<info>Ending point for the modification</info>
	</data>
	<data name="RotateObjects">
		<label>Rotate objects</label>
		<info>Rotate selected objects about a point or an axis</info>
	</data>
	<data name="RotateObjects.Angle">
		<label>Angle</label>
		<info>Rotation angle</info>
	</data>
	<data name="RotateObjects.Vector">
		<label>Axis</label>
		<info>Axis of rotation</info>
	</data>
	<data name="ScaleObjects">
		<label>Scale objects</label>
		<info>Scale the selected objects</info>
	</data>
	<data name="Objects.FixPoint">
		<label>Fixpoint</label>
		<info>Fixpoint for the modification</info>
	</data>
	<data name="Objects.CalcPoint">
		<label>Reference point</label>
		<info>Reference point for the modification</info>
	</data>
	<data name="Modify.CopyObjects">
		<label>Copy objects</label>
		<info>Make a copy of the selected objects</info>
	</data>
	<data name="ScaleObjects.Factor">
		<label>Factor</label>
		<info>Scaling factor</info>
	</data>
	<data name="ScaleObjects.FactorX">
		<label>X-factor</label>
		<info>Factor in X-direction</info>
	</data>
	<data name="ScaleObjects.FactorY">
		<label>Y-factor</label>
		<info>Factor in Y-direction</info>
	</data>
	<data name="ScaleObjects.FactorZ">
		<label>Z-factor</label>
		<info>Factor in Z-direction</info>
	</data>
	<data name="ScaleObjects.Distort">
		<label>Distortion</label>
		<info>Select distortion mode</info>
	</data>
	<data name="ScaleObjects.Distort.Values">
		<label>|Distort|Keep aspect ratio</label>
	</data>
	<data name="ReflectObjects">
		<label>Reflect objects</label>
		<info>Reflect selected objects at a point, line or plane</info>
	</data>
	<data name="ReflectObjects.Point">
		<label>Point</label>
		<info>Specify reflection point</info>
	</data>
	<data name="ReflectObjects.Line">
		<label>Line</label>
		<info>Reflection line</info>
	</data>
	<data name="ReflectObjects.Plane">
		<label>Plane</label>
		<info>Reflection plane</info>
	</data>
	<data name="SnapObjects">
		<label>Transform</label>
		<info>Transform objects</info>
	</data>
	<data name="SnapObjects.Source1">
		<label>1st source point</label>
		<info>First source point to meet first destination point</info>
	</data>
	<data name="SnapObjects.Destination1">
		<label>1st destination point</label>
		<info>Destination point for first source point</info>
	</data>
	<data name="SnapObjects.Source2">
		<label>2nd source point</label>
		<info>Second source point to meet second destination point</info>
	</data>
	<data name="SnapObjects.Destination2">
		<label>2nd destination point</label>
		<info>Destination point for second source point</info>
	</data>
	<data name="SnapObjects.Source3">
		<label>3rd source point</label>
		<info>Third source point to meet third destination point</info>
	</data>
	<data name="SnapObjects.Destination3">
		<label>3rd destination point</label>
		<info>Destination point for third source point</info>
	</data>
	<data name="ToolsTrim">
		<label>Trim object</label>
		<info>Trim object at the closest intersection point(s)</info>
	</data>
	<data name="ToolsTrimSplit">
		<label>Split object</label>
		<info>Split object at the closest intersection point</info>
	</data>
	<data name="ToolsTrim.Object">
		<label>Trim</label>
		<info>Select object and position to trim</info>
	</data>
	<data name="ToolsTrimSplit.Object">
		<label>Split</label>
		<info>Select object and position to split</info>
	</data>
	<data name="ToolsTrim.SourceObject">
		<label>Trim destination</label>
		<info>Select object at which the following objects will be trimmed. Select none to trim immediately</info>
	</data>
	<data name="ToolsExpand">
		<label>Expand object</label>
		<info>Expand the object until it hits another object</info>
	</data>
	<data name="ToolsExpand.Object">
		<label>Object to expand</label>
		<info>Select object to expand</info>
	</data>
	<data name="ToolsExpand.SourceObject">
		<label>Expand to</label>
		<info>Select object up to which the object is to be expanded</info>
	</data>
	<data name="ToolsConnect">
		<label>Connect objects</label>
		<info>Connect two objects at their common intersection point</info>
	</data>
	<data name="ToolsExpand2Curves.Object1">
		<label>1st object</label>
		<info>1st object to be connected</info>
	</data>
	<data name="ToolsExpand2Curves.Object2">
		<label>2nd object</label>
		<info>2nd object to be connected</info>
	</data>
	<data name="ToolsRoundOff">
		<label>Round</label>
		<info>Round objects at a common vertex</info>
	</data>
	<data name="ToolsRoundMultiple">
		<label>Round multiple</label>
		<info>Round objects at all common vertices</info>
	</data>
	<data name="ToolsRound.Object">
		<label>Position</label>
		<info>Position where objects are rounded (if possible, approach from inside)</info>
	</data>
	<data name="ToolsRound.Object2">
		<label>2nd object</label>
		<info>2nd object for rounding</info>
	</data>
	<data name="ToolsRound.Radius">
		<label>Radius</label>
		<info>Radius for rounding</info>
	</data>
	<data name="ToolsRoundIn">
		<label>Channel</label>
		<info>Channel objects at a common vertex</info>
	</data>
	<data name="ToolsRoundIn.Object">
		<label>Position</label>
		<info>Position for the channeling</info>
	</data>
	<data name="ToolsRoundIn.Object2">
		<label>2nd object</label>
		<info>2nd object to be channeled</info>
	</data>
	<data name="ToolsRoundIn.Radius">
		<label>Radius</label>
		<info>Radius for channeling</info>
	</data>
	<data name="ToolsCutOff">
		<label>Chamfer objects</label>
		<info>Chamfer objects at a common vertex</info>
	</data>
	<data name="ToolsCutOffMultiple">
		<label>Chamfer multiple</label>
		<info>Chamfer objects at all common vertices</info>
	</data>
	<data name="ToolsCutOff.Object">
		<label>Position for chamfering</label>
		<info>Position for chamfering</info>
	</data>
	<data name="ToolsCutOff.Object2">
		<label>2nd object</label>
		<info>2nd object to chamfer</info>
	</data>
	<data name="ToolsCutOff.Length">
		<label>Length</label>
		<info>Length of the chamfering</info>
	</data>
	<data name="ToolsCutOff.Angle">
		<label>Angle</label>
		<info>Angle of the chamfering</info>
	</data>
	<data name="ToolsCutOff.Method">
		<label>Mode</label>
		<info>Chamfering mode, meaning of the length</info>
	</data>
	<data name="ToolsCutOff.Method.Values">
		<label>|On object|Chamfer length|Center line</label>
	</data>
	<data name="CopyMatrixObjects">
		<label>Copy matrix</label>
		<info>Make multiple copies in a rectangular grid</info>
	</data>
	<data name="CopyMatrixObjects.HorCountRight">
		<label>Copies to the right</label>
		<info>Number of copies to the right</info>
	</data>
	<data name="CopyMatrixObjects.HorCountLeft">
		<label>Copies to the left</label>
		<info>Number of copies to the left</info>
	</data>
	<data name="CopyMatrixObjects.VerCountUp">
		<label>Copies upward</label>
		<info>Number of copies upward</info>
	</data>
	<data name="CopyMatrixObjects.VerCountDown">
		<label>Copies downward</label>
		<info>Number of copies downward</info>
	</data>
	<data name="CopyMatrixObjects.HorDist">
		<label>Horizontal distance</label>
		<info>Horizontal distance of the copies</info>
	</data>
	<data name="CopyMatrixObjects.VerDist">
		<label>Vertical distance</label>
		<info>Vertical distance of the copies</info>
	</data>
	<data name="CopyMatrixObjects.Direction">
		<label>Angle</label>
		<info>Angles of the grid</info>
	</data>
	<data name="CopyCircularObjects">
		<label>Copy circular</label>
		<info>Make multiple copies on the circumference of a circle</info>
	</data>
	<data name="CopyCircularObjects.RotationPoint">
		<label>Center</label>
		<info>Center of the circle</info>
	</data>
	<data name="CopyCircularObjects.CopiesCount">
		<label>Number</label>
		<info>Number of copies</info>
	</data>
	<data name="CopyCircularObjects.FullCircle">
		<label>Arrangement</label>
		<info>Arrangement of the copies</info>
	</data>
	<data name="CopyCircularObjects.FullCircle.Values">
		<label>|Full circle|Angle steps</label>
	</data>
	<data name="CopyCircularObjects.CopiesAngle">
		<label>Angle</label>
		<info>Angle distance of the copies</info>
	</data>
	<data name="CopyCircularObjects.ObjectsRotation">
		<label>Orientation mode</label>
		<info>Orientation mode for the copies</info>
	</data>
	<data name="CopyCircularObjects.ObjectsRotation.Values">
		<label>|Invariable|Rotated</label>
	</data>
	<data name="Hatch.Object">
		<label>Hatching</label>
		<info>Properties of the hatching object</info>
	</data>
	<data name="Hatch.HatchStyle">
		<label>Hatch style</label>
		<info>Hatch style</info>
	</data>
	<data name="HatchStyleList">
		<label>Hatch style table</label>
		<info>Manage the hatch style table</info>
	</data>
	<data name="HatchStyle.Selection">
		<label>Hatch style</label>
		<info>Selected hatch style</info>
	</data>
	<data name="HatchStyleList.DontRemoveLastItem">
		<label>The last hatch style cannot be removed.</label>
	</data>
	<data name="HatchStyleList.ItemIsUsed">
		<label>The hatch style "{0}" is used in this project. Remove it anyway?</label>
	</data>
	<data name="HatchStyleName">
		<label>Hatch style</label>
		<info>Hatch style</info>
	</data>
	<data name="HatchStyleNameSolid">
		<label>Solid</label>
		<info>Solid colored hatch style</info>
	</data>
	<data name="HatchStyleNameLines">
		<label>Lines</label>
		<info>Lines define the hatch style</info>
	</data>
	<data name="HatchStyleNameContour">
		<label>Equidistant</label>
		<info>Different equidistant lines define the hatch style</info>
	</data>
	<data name="HatchStyleList.DefaultSolid">
		<label>Solid</label>
	</data>
	<data name="HatchStyleList.DefaultLines">
		<label>Lines</label>
	</data>
	<data name="HatchStyleList.NewHatchStyleName">
		<label>Hatch Style</label>
	</data>
	<data name="HatchStyleList.NameAlreadyExists">
		<label>The name "{0}" already exists in the table of hatch styles</label>
	</data>
	<data name="HatchStyleLines.Angle">
		<label>Angle</label>
		<info>Angle of the hatching lines</info>
	</data>
	<data name="HatchStyleLines.Distance">
		<label>Distance</label>
		<info>Distance of the hatching lines</info>
	</data>
	<data name="HatchStyleLines.LineWidth">
		<label>Line width</label>
		<info>Line width of the hatching lines</info>
	</data>
	<data name="HatchStyleLines.LinePattern">
		<label>Line pattern</label>
		<info>Line pattern of the hatching lines</info>
	</data>
	<data name="HatchStyleLines.Color">
		<label>Line color</label>
		<info>Color of the hatching lines</info>
	</data>
	<data name="MenuId.HatchStyleListEntry.Delete">
		<label>Remove</label>
		<info>Remove hatch style</info>
	</data>
	<data name="MenuId.HatchStyleListEntry.Current">
		<label>Default hatch style</label>
		<info>Select as default hatch style</info>
	</data>
	<data name="MenuId.HatchStyleListEntry.Edit">
		<label>Rename</label>
		<info>Rename hatch style</info>
	</data>
	<data name="Point.Object">
		<label>Point</label>
		<info>Properties of the point</info>
	</data>
	<data name="Point.Location">
		<label>Position</label>
		<info>The position of the point</info>
	</data>
	<data name="Point.PointSymbol">
		<label>Point symbol</label>
		<info>Choose the representation symbol for the point</info>
	</data>
	<data name="MenuId.PointSymbol.Empty">
		<label>Empty</label>
		<info>The point will be invisible</info>
	</data>
	<data name="MenuId.PointSymbol.Dot">
		<label>Point (pixel)</label>
		<info>The point is represented as tiny colored point with a pixel</info>
	</data>
	<data name="MenuId.PointSymbol.Plus">
		<label>Cross (+)</label>
		<info>The point is represented as horizontal cross (+)</info>
	</data>
	<data name="MenuId.PointSymbol.Cross">
		<label>Cross (X)</label>
		<info>The point is represented as diagonal cross (X)</info>
	</data>
	<data name="MenuId.PointSymbol.Line">
		<label>Line</label>
		<info>The point is represented as small line</info>
	</data>
	<data name="MenuId.PointSymbol.Square">
		<label>Square</label>
		<info>The point is represented as small square with the point at its center</info>
	</data>
	<data name="MenuId.PointSymbol.Circle">
		<label>Circle</label>
		<info>The point is represented as small circle with the point at its center</info>
	</data>
	<data name="Text.Bold">
		<label>Bold</label>
		<info>Bold typeface</info>
	</data>
	<data name="Text.Bold.Values">
		<label>|Fat|Normal</label>
	</data>
	<data name="Text.Italic">
		<label>Italic</label>
		<info>Italic typeface</info>
	</data>
	<data name="Text.Italic.Values">
		<label>|Italic|Normal</label>
	</data>
	<data name="Text.Underline">
		<label>Underlined</label>
		<info>Underlined characters</info>
	</data>
	<data name="Text.Underline.Values">
		<label>|Underlined|Not underlined</label>
	</data>
	<data name="Text.Strikeout">
		<label>Crossed out</label>
		<info>Crossed out characters</info>
	</data>
	<data name="Text.Strikeout.Values">
		<label>|Crossed out|Not crossed out</label>
	</data>
	<data name="Text">
		<label>Text</label>
		<info>Text properties</info>
	</data>
	<data name="Text.TextString">
		<label>Contents</label>
		<info>Text contents</info>
	</data>
	<data name="Text.Location">
		<label>Location</label>
		<info>Location of the text</info>
	</data>
	<data name="Text.TextSize">
		<label>Character size</label>
		<info>Character size</info>
	</data>
	<data name="Text.Font">
		<label>Text font</label>
		<info>Text font</info>
	</data>
	<data name="Text.Font.Format">
		<label>Text format</label>
		<info>Text format</info>
	</data>
	<data name="MenuId.Point.ModifyWithMouse">
		<label>Modify with mouse</label>
		<info>Modify the coordinate with the mouse</info>
	</data>
	<data name="MenuId.Point.NameVariable">
		<label>Name point</label>
		<info>Define a variable with the current point as its coordinate value</info>
	</data>
	<data name="MenuId.Point.IntersectionTwoCurves">
		<label>Intersection</label>
		<info>Point at the intersection of two curves</info>
	</data>
	<data name="MenuId.Measure.Point.IntersectionTwoCurves">
		<label>Intersection</label>
		<info>Point at the intersection of two curves</info>
	</data>
	<data name="MenuId.Point.IntermediatePoint">
		<label>Intermediate point</label>
		<info>Point on the line connecting two other points</info>
	</data>
	<data name="MenuId.Measure.Point.IntermediatePoint">
		<label>Intermediate point</label>
		<info>Point on the line connecting two other points</info>
	</data>
	<data name="MenuId.Point.ObjectPoint">
		<label>Point on curve</label>
		<info>Point at given position on a curve. Position 0.0 is the starting point, 1.0 the ending point</info>
	</data>
	<data name="MenuId.Measure.Point.ObjectPoint">
		<label>Point on curve</label>
		<info>Point at given position on a curve. Position 0.0 is the starting point, 1.0 the ending point</info>
	</data>
	<data name="MenuId.Point.OffsetByVector">
		<label>Offset</label>
		<info>Offset to the current point determined by a vector</info>
	</data>
	<data name="MenuId.Measure.Point.OffsetByVector">
		<label>Offset</label>
		<info>Offset to the current point determined by a vector</info>
	</data>
	<data name="MenuId.Point.Polar">
		<label>Polar</label>
		<info>Define the point by polar coordinates</info>
	</data>
	<data name="MenuId.Measure.Point.Polar">
		<label>Polar</label>
		<info>Define the point by polar coordinates</info>
	</data>
	<data name="Constr.AngleTwoPoints">
		<label>Angle: 2 points</label>
		<info>Define an angle  by two points relative to the x-axis of the drawing plane</info>
	</data>
	<data name="Constr.AngleTwoPoints.FirstPoint">
		<label>1st point</label>
		<info>1st point for the angle</info>
	</data>
	<data name="Constr.AngleTwoPoints.SecondPoint">
		<label>2nd point</label>
		<info>2nd point for the angle</info>
	</data>
	<data name="Construct.MidPoint">
		<label>Intermediate point</label>
		<info>Point as an intermediate point on an arbitrary position between two points</info>
	</data>
	<data name="Construct.MidPoint.FirstPoint">
		<label>1st point</label>
		<info>1st Point for the intermediate point</info>
	</data>
	<data name="Construct.MidPoint.SecondPoint">
		<label>2nd point</label>
		<info>2nd point for the intermediate point</info>
	</data>
	<data name="Construct.MidPoint.Ratio">
		<label>Ratio</label>
		<info>Position of the intermediate point (0.0 is the at first point, 0.5 is in the center, 1.0 at the second point)</info>
	</data>
	<data name="Construct.IntersectPoint">
		<label>Intersection point</label>
		<info>Intersection point of two objects</info>
	</data>
	<data name="Construct.IntersectPoint.FirstCurve">
		<label>1st Object</label>
		<info>1st Object for intersection</info>
	</data>
	<data name="Construct.IntersectPoint.SecondCurve">
		<label>2nd Object</label>
		<info>2nd Object for intersection</info>
	</data>
	<data name="Construct.ObjectPoint">
		<label>Point on object</label>
		<info>Point on an object in an arbitrary position between 0 and 1</info>
	</data>
	<data name="Construct.ObjectPoint.Curve">
		<label>Object</label>
		<info>The object, on which the point is to be</info>
	</data>
	<data name="Construct.ObjectPoint.Ratio">
		<label>Ratio</label>
		<info>Position of the point on the object (0.5 is in the center)</info>
	</data>
	<data name="Construct.ObjectPoint.RatioLength">
		<label>Distance</label>
		<info>Distance of the point from the starting/ending point of the object</info>
	</data>
	<data name="Construct.DistanceTwoPoints">
		<label>Distance of two points</label>
		<info>Define the length as the distance between two points</info>
	</data>
	<data name="Construct.DistanceTwoPoints.FirstPoint">
		<label>1st Point</label>
		<info>1st Point for distance</info>
	</data>
	<data name="Construct.DistanceTwoPoints.SecondPoint">
		<label>2nd Point</label>
		<info>2nd Point for distance</info>
	</data>
	<data name="Construct.DistancePointCurve">
		<label>Distance point to curve</label>
		<info>Define the length as the minimum distance of a point to a curve</info>
	</data>
	<data name="Construct.DistancePointCurve.Point">
		<label>Point</label>
		<info>From this point</info>
	</data>
	<data name="Construct.DistancePointCurve.Object">
		<label>Object</label>
		<info>To this curve</info>
	</data>
	<data name="Construct.DistanceTwoCurves">
		<label>Distance of two curves</label>
		<info>Define the length as the minimum distance of two curves</info>
	</data>
	<data name="Construct.DistanceTwoCurves.Object1">
		<label>1st curve</label>
		<info>1st curve for distance</info>
	</data>
	<data name="Construct.DistanceTwoCurves.Object2">
		<label>2nd curve</label>
		<info>2nd curve for distance</info>
	</data>
	<data name="Construct.DistanceOfCurve">
		<label>Length of curve</label>
		<info>Define the length as the length of a curve</info>
	</data>
	<data name="Construct.DistanceOfCurve.Object">
		<label>Curve</label>
		<info>The length of this curve will be used</info>
	</data>
	<data name="Construct.DirectionOfCurve">
		<label>Direction of a curve</label>
		<info>Direction of a curve at a given position</info>
	</data>
	<data name="Curve.Object">
		<label>Curve</label>
		<info>Properties of the curve</info>
	</data>
	<data name="Construct.DirectionOfCurve.Object">
		<label>Curve</label>
		<info>the direction of this curve will be used</info>
	</data>
	<data name="Construct.DirectionOfCurve.DirPoint">
		<label>Position</label>
		<info>Position on the curve where the direction is measured</info>
	</data>
	<data name="Construct.DirectionOfCurve.DirPoint.Values">
		<label>|Starting point|Automatically|Ending point|Center|Interactive</label>
	</data>
	<data name="Construct.DirectionOfCurve.DirOffset">
		<label>Offset</label>
		<info>Additional offset to the direction</info>
	</data>
	<data name="Construct.DirectionOfCurve.DirOffset.Values">
		<label>|Original|To right|Opposite|To left</label>
	</data>
	<data name="Construct.DirectionTwoPoints">
		<label>Direction of 2 points</label>
		<info>The direction from the starting point to the ending point</info>
	</data>
	<data name="Construct.DirectionTwoPoints.Vector">
		<label>Direction</label>
		<info>Direction vector</info>
	</data>
	<data name="Construct.DirectionTwoPoints.StartPoint">
		<label>1st point</label>
		<info>1st point of the direction vector</info>
	</data>
	<data name="Construct.DirectionTwoPoints.EndPoint">
		<label>2nd point</label>
		<info>2nd point of the direction vector</info>
	</data>
	<data name="Construct.VectorPoint">
		<label>Offset</label>
		<info>Offset vector</info>
	</data>
	<data name="Construct.VectorPoint.Vector">
		<label>Offset vector</label>
		<info>Offset vector</info>
	</data>
	<data name="Construct.VectorPoint.StartPoint">
		<label>1st point</label>
		<info>1st point for the offset</info>
	</data>
	<data name="Construct.VectorPoint.EndPoint">
		<label>2nd point</label>
		<info>2nd point for the offset</info>
	</data>
	<data name="Construct.PolarPoint">
		<label>Polar</label>
		<info>Polar coordinates for the point</info>
	</data>
	<data name="Construct.PolarPoint.StartPoint">
		<label>Starting point</label>
		<info>Polar coordinates: center point</info>
	</data>
	<data name="Construct.PolarPoint.Angle">
		<label>Angle</label>
		<info>Polar coordinates: angle to the x-axis of the drawing plane</info>
	</data>
	<data name="Construct.PolarPoint.Length">
		<label>Length</label>
		<info>Polar coordinates: distance from the center</info>
	</data>
	<data name="MenuId.Navigate.Back">
		<label>Back</label>
		<info>Go back to the last help topic</info>
	</data>
	<data name="MenuId.Navigate.Forward">
		<label>Forward</label>
		<info>Go forward to the next help topic</info>
	</data>
	<data name="MenuId.Length.ModifyWithMouse">
		<label>Modify with mouse</label>
		<info>Modify the length with the mouse. The length is the distance to the base point</info>
	</data>
	<data name="MenuId.Length.DistanceOfCurve">
		<label>Length of an object</label>
		<info>The length of the selected object</info>
	</data>
	<data name="MenuId.Measure.Length.DistanceOfCurve">
		<label>Length of an object</label>
		<info>The length of the selected object</info>
	</data>
	<data name="MenuId.Length.DistanceTwoPoints">
		<label>Distance two points</label>
		<info>The resulting length is the distance between two points</info>
	</data>
	<data name="MenuId.Measure.Length.DistanceTwoPoints">
		<label>Distance two points</label>
		<info>The resulting length is the distance between two points</info>
	</data>
	<data name="MenuId.Length.DistancePointCurve">
		<label>Distance point to curve</label>
		<info>The length results from the minimum distance of one point to an object</info>
	</data>
	<data name="MenuId.Measure.Length.DistancePointCurve">
		<label>Distance point to curve</label>
		<info>The length results from the minimum distance of one point to an object</info>
	</data>
	<data name="MenuId.Length.DistanceTwoCurves">
		<label>Distance of two curves</label>
		<info>The resulting length is the distance from a point to a curve</info>
	</data>
	<data name="MenuId.Measure.Length.DistanceTwoCurves">
		<label>Distance of two curves</label>
		<info>The resulting length is the distance from a point to a curve</info>
	</data>
	<data name="MenuId.Length.DoubleValue">
		<label>Double</label>
		<info>Double the current length</info>
	</data>
	<data name="MenuId.Length.HalfValue">
		<label>Bisect</label>
		<info>Halve the current length</info>
	</data>
	<data name="MenuId.Length.NameVariable">
		<label>Name length</label>
		<info>Define a variable with the current length or distance as its value</info>
	</data>
	<data name="Setting.Formatting">
		<label>Formatting (display)</label>
		<info>Specify the number formatting for the display</info>
	</data>
	<data name="Setting.Formatting.Dimension">
		<label>2D/3D-Display</label>
		<info>2D/3D-Display for coordinates</info>
	</data>
	<data name="Setting.Formatting.Dimension.Values">
		<label>|Always 2D|Preferably 2D|Always 3D</label>
	</data>
	<data name="Setting.Formatting.Decimal">
		<label>Decimal separator</label>
		<info>Decimal separator for fractional numbers</info>
	</data>
	<data name="Setting.Formatting.Decimal.Values">
		<label>|System default|Point|Comma</label>
	</data>
	<data name="Setting.Formatting.System">
		<label>Coordinate system</label>
		<info>Select the coordinate system</info>
	</data>
	<data name="Setting.Formatting.System.Values">
		<label>|Local|Absolute|Both</label>
	</data>
	<data name="Setting.Formatting.Coordinate">
		<label>Coordinates</label>
		<info>How to format the display of coordinates</info>
	</data>
	<data name="Setting.Formatting.Coordinate.ZValue">
		<label>Z-values</label>
		<info>Display the Z-values of the coordinates</info>
	</data>
	<data name="Setting.Formatting.Coordinate.ZValue.Values">
		<label>|Display|Don't display</label>
	</data>
	<data name="Setting.Formatting.Coordinate.Digits">
		<label>Precision (composite)</label>
		<info>Number of decimal digits in the composite display of coordinates</info>
	</data>
	<data name="Setting.Formatting.Coordinate.ComponentsDigits">
		<label>Precision (components)</label>
		<info>Number of decimal digits in the individual display of each component</info>
	</data>
	<data name="Setting.Formatting.Length">
		<label>Lengths</label>
		<info>How to format length or distance values</info>
	</data>
	<data name="Setting.Formatting.Length.Digits">
		<label>Precision</label>
		<info>Number of decimal digits for length or distance values</info>
	</data>
	<data name="Setting.Formatting.GeneralDouble">
		<label>Precision (general)</label>
		<info>General precision for floating point numbers</info>
	</data>
	<data name="Setting.Formatting.Vector">
		<label>Vectors</label>
		<info>How to format vectors</info>
	</data>
	<data name="Setting.Formatting.Vector.Mode">
		<label>Display mode</label>
		<info>Type of display of the direction or vector values</info>
	</data>
	<data name="Setting.Formatting.Vector.Mode.Values">
		<label>|Angle|Polar|X/Y/Z-values|X/Y values</label>
	</data>
	<data name="Setting.Formatting.Angle">
		<label>Angle</label>
		<info>How to format angular values</info>
	</data>
	<data name="Setting.Formatting.Angle.Mode">
		<label>Degree system</label>
		<info>Scaling system for angles</info>
	</data>
	<data name="Setting.Formatting.Angle.Mode.Values">
		<label>|Degree (decimal)|Degree (minutes)|Degree (minutes, seconds)|Radian measure</label>
	</data>
	<data name="Setting.Formatting.Angle.Digits">
		<label>Precision</label>
		<info>Number of decimal digits for angular values</info>
	</data>
	<data name="Setting.Formatting.Radius">
		<label>Radius/Diameter</label>
		<info>Circle/Arc-construction: Radius or Diameter input</info>
	</data>
	<data name="Setting.Formatting.Radius.Values">
		<label>|Radius|Diameter</label>
	</data>
	<data name="Text.LineAlignment">
		<label>Line alignment</label>
		<info>Line alignment relative to the reference point</info>
	</data>
	<data name="Text.LineAlignment.Values">
		<label>|Left justified|Centered|Right justified</label>
	</data>
	<data name="Text.Alignment">
		<label>Text alignment</label>
		<info>Text alignment relative to the reference point</info>
	</data>
	<data name="Text.Alignment.Values">
		<label>|Baseline|Bottom|Top|Middle</label>
	</data>
	<data name="Text.Default">
		<label>Enter text</label>
	</data>
	<data name="MenuId.Vector.ModifyWithMouse">
		<label>Modify with mouse</label>
		<info>Define the vector or direction with the mouse relative to the current base point</info>
	</data>
	<data name="MenuId.Vector.DirectionOfCurve">
		<label>Direction of a curve</label>
		<info>The direction of the selected object</info>
	</data>
	<data name="MenuId.Measure.Vector.DirectionOfCurve">
		<label>Direction of a curve</label>
		<info>The direction of the selected object</info>
	</data>
	<data name="MenuId.Vector.DirectionOfSurface">
		<label>Direction of a surface</label>
		<info>The direction of the selected surface in the cursor point</info>
	</data>
	<data name="MenuId.Measure.Vector.DirectionOfSurface">
		<label>Direction of a surface</label>
		<info>The direction of the selected surface in the cursor point</info>
	</data>
	<data name="MenuId.Vector.DirectionTwoPoints">
		<label>Direction between two points</label>
		<info>Direction between two points</info>
	</data>
	<data name="MenuId.Measure.Vector.DirectionTwoPoints">
		<label>Direction between two points</label>
		<info>Direction between two points</info>
	</data>
	<data name="MenuId.Vector.NameVariable">
		<label>Name vector</label>
		<info>Define a variable with the current vector or direction as its value</info>
	</data>
	<data name="MenuId.Vector.FormatSettings">
		<label>Formatting</label>
		<info>Select formatting settings for the vector</info>
	</data>
	<data name="Text.GlyphAngle">
		<label>Glyph angle</label>
		<info>The italic angle for the characters</info>
	</data>
	<data name="Text.LineDirection">
		<label>Line direction</label>
		<info>The direction of the base line of the text</info>
	</data>
	<data name="Text.GlyphDirection">
		<label>Glyph direction</label>
		<info>The direction of the letters (to make them italic)</info>
	</data>
	<data name="MenuId.Angle.TwoPoints">
		<label>Angle of two points</label>
		<info>The angle is determined by two points</info>
	</data>
	<data name="MenuId.Angle.TangentOfCurve">
		<label>Curve direction</label>
		<info>Curve direction</info>
	</data>
	<data name="MenuId.Angle.FormatSettings">
		<label>Formatting</label>
		<info>Select formatting settings for angular values</info>
	</data>
	<data name="MenuId.Point.FormatSettings">
		<label>Formatting</label>
		<info>Select formatting settings for point coordinates</info>
	</data>
	<data name="MenuId.Length.FormatSettings">
		<label>Formatting</label>
		<info>Select formatting settings for length or distance values</info>
	</data>
	<data name="Arc.EndAngle">
		<label>Ending angle</label>
		<info>Ending angle of the circular arc</info>
	</data>
	<data name="Arc.StartAngle">
		<label>Starting angle</label>
		<info>Starting angle of the circular arc</info>
	</data>
	<data name="Circle.Center">
		<label>Center</label>
		<info>Center of the circle</info>
	</data>
	<data name="Circle.Radius">
		<label>Radius</label>
		<info>Radius of the circle</info>
	</data>
	<data name="Circle.Diameter">
		<label>Diameter</label>
		<info>Diameter of the circle</info>
	</data>
	<data name="Menu.NotImplemented">
		<label>Function not yet implemented</label>
	</data>
	<data name="Error">
		<label>Error in CADability</label>
	</data>
	<data name="Select.TooManyObjects">
		<label>Too many objects ({0:##})</label>
		<info>Too many objects to display</info>
	</data>
	<data name="Ellipse.Center">
		<label>Center</label>
		<info>Ellipses center</info>
	</data>
	<data name="Ellipse.MajorRadius">
		<label>Major radius</label>
		<info>Major radius of the ellipse</info>
	</data>
	<data name="Ellipse.MinorRadius">
		<label>Minor radius</label>
		<info>Minor radius of the ellipse</info>
	</data>
	<data name="Ellipse.MajorAxis">
		<label>Major axis</label>
		<info>Major axis of the ellipse</info>
	</data>
	<data name="Ellipse.MinorAxis">
		<label>Minor axis</label>
		<info>Minor axis of the ellipse</info>
	</data>
	<data name="Ellipse.StartAngle">
		<label>Starting angle</label>
		<info>Starting angle of the ellipse</info>
	</data>
	<data name="Ellipse.EndAngle">
		<label>Ending angle</label>
		<info>Ending angle of the ellipse</info>
	</data>
	<data name="Ellipse.Direction">
		<label>Direction</label>
		<info>Direction of the ellipse</info>
	</data>
	<data name="Arc.Direction">
		<label>Direction</label>
		<info>Direction of the arc</info>
	</data>
	<data name="Arc.Direction.Values">
		<label>|Counter clockwise|Clockwise</label>
	</data>
	<data name="Rectangle.Location">
		<label>Location</label>
		<info>Location of the fixpoint of the rectangle</info>
	</data>
	<data name="Rectangle.Width">
		<label>Width</label>
		<info>Width of the rectangle in the sense of the basis direction</info>
	</data>
	<data name="Rectangle.Height">
		<label>Height</label>
		<info>Height of the rectangle perpendicularly to the basis direction</info>
	</data>
	<data name="Rectangle.Direction">
		<label>Basis direction</label>
		<info>Basis direction of the rectangle</info>
	</data>
	<data name="Polyline.Rectangle">
		<label>Rectangle</label>
		<info>Rectangle properties of the polyline, may be lost if individual vertices are modified</info>
	</data>
	<data name="Polyline.Parallel">
		<label>Parallelogram</label>
		<info>Parallelogram properties of the polyline, may be lost if individual vertices are modified</info>
	</data>
	<data name="Parallelogram.DirectionX">
		<label>Main direction</label>
		<info>Main direction of the parallelogram</info>
	</data>
	<data name="Parallelogram.DirectionY">
		<label>Secondary direction</label>
		<info>Secondary direction of the parallelogram</info>
	</data>
	<data name="MenuId.Reverse">
		<label>Reverse direction</label>
		<info>Reverse the direction of the curve</info>
	</data>
	<data name="MenuId.Explode">
		<label>Explode</label>
		<info>Explode the object into its parts (one level)</info>
	</data>
	<data name="Path.Object">
		<label>Path</label>
		<info>Properties of the path</info>
	</data>
	<data name="Path.Vertex">
		<label>Vertex</label>
		<info>Vertex point of the path</info>
	</data>
	<data name="Path.Length">
		<label>Length</label>
		<info>length of the path</info>
	</data>
	<data name="CircleArc.Object">
		<label>Circular arc</label>
		<info>Properties of the circular arc</info>
	</data>
	<data name="EllipseArc.Object">
		<label>Elliptical arc</label>
		<info>Properties of the elliptical arc</info>
	</data>
	<data name="DimensionStyle.Geometry">
		<label>Geometry</label>
		<info>Geometry of the dimension object</info>
	</data>
	<data name="DimensionStyle.Symbol">
		<label>Symbol</label>
		<info>Symbol of the dimension object</info>
	</data>
	<data name="DimensionStyle.DimText">
		<label>Text</label>
		<info>Text of the dimension object</info>
	</data>
	<data name="DimensionStyle.SecondText">
		<label>2nd Text</label>
		<info>2nd Text of the dimension object</info>
	</data>
	<data name="DimensionStyle.Tolerance">
		<label>Tolerance</label>
		<info>Tolerance data of the dimension object</info>
	</data>
	<data name="DimensionStyle.Valid">
		<label>Valid types</label>
		<info>Valid dimension types of this dimension style</info>
	</data>
	<data name="DimensionStyle.Colors">
		<label>Colors</label>
		<info>The colors and line width of the dimension object</info>
	</data>
	<data name="DimensionStyle.Options">
		<label>Options</label>
		<info>Further options</info>
	</data>
	<data name="DimensionStyle.Font">
		<label>Text font</label>
		<info>Text font of the dimensioning texts</info>
	</data>
	<data name="DimensionStyleList">
		<label>Dimension styles</label>
		<info>Table of dimension styles</info>
	</data>
	<data name="DimensionStyleList.DontRemoveLastItem">
		<label>The last dimension style cannot be removed</label>
	</data>
	<data name="DimensionStyleList.ItemIsUsed">
		<label>The dimension style is being used, remove anyway?</label>
	</data>
	<data name="DimensionStyleName">
		<label>Dimension style</label>
		<info>Define dimension style</info>
	</data>
	<data name="DimensionStyle.StandardName">
		<label>Standard</label>
	</data>
	<data name="DimensionStyle.DimNoExtLine">
		<label>Subsidiary lines</label>
		<info>Display of subsidiary lines</info>
	</data>
	<data name="DimensionStyle.DimNoExtLine.Values">
		<label>|Suppress|Display</label>
	</data>
	<data name="DimensionStyle.DimNoDimLine">
		<label>Dimension Line display</label>
		<info>Display of dimension lines</info>
	</data>
	<data name="DimensionStyle.DimNoDimLine.Values">
		<label>|Suppress|Display</label>
	</data>
	<data name="DimensionStyle.DimBreakDimLine">
		<label>Dimension line with text</label>
		<info>Display dimension line</info>
	</data>
	<data name="DimensionStyle.DimBreakDimLine.Values">
		<label>|Break if necessary|Continuous</label>
	</data>
	<data name="DimensionStyle.DimTxtRect">
		<label>Rectangle</label>
		<info>Rectangle framing the dimension text</info>
	</data>
	<data name="DimensionStyle.DimTxtRect.Values">
		<label>|Display|Suppress</label>
	</data>
	<data name="DimensionStyle.DimMultiLine">
		<label>Multi line dimensioning</label>
		<info>Use multi line dimensioning for reference dimension objects</info>
	</data>
	<data name="DimensionStyle.DimTextOutsideForceDimensionLine">
		<label>extend dim line to text</label>
		<info>extend dimension line when text is outside</info>
	</data>
	<data name="DimensionStyle.DimLineExtension">
		<label>Dimension line extension</label>
		<info>Extend the dimension line of the dimension object</info>
	</data>
	<data name="DimensionStyle.ExtLineExtension">
		<label>Subsidiary lines extension</label>
		<info>Extend the subsidiary lines of the dimension object</info>
	</data>
	<data name="DimensionStyle.ExtLineOffset">
		<label>Subsidiary lines distance</label>
		<info>Distance of subsidiary lines from the point of dimensioning</info>
	</data>
	<data name="DimensionStyle.LineIncrement">
		<label>Dimension line distance</label>
		<info>Default distance of dimension lines</info>
	</data>
	<data name="DimensionStyle.TextDist">
		<label>Text above dimension line</label>
		<info>Text distance above the dimension line</info>
	</data>
	<data name="DimensionStyle.DimensionLineGap">
		<label>Rectangle distance</label>
		<info>Distance of the framing rectangle to the text</info>
	</data>
	<data name="DimensionStyle.SymbolType">
		<label>Symbol</label>
		<info>Symbol used for the arrows at the ending point of the dimension line</info>
	</data>
	<data name="DimensionStyle.SymbolType.Values">
		<label>|Open arrow|Closed arrow|Solid arrow|Circle|Solid circle|Diagonal line|Symbol</label>
	</data>
	<data name="DimensionStyle.SymbolPlacement">
		<label>Placement</label>
		<info>Placement of the symbols</info>
	</data>
	<data name="DimensionStyle.SymbolPlacement.Values">
		<label>|Inside|Outside|Automatic</label>
	</data>
	<data name="DimensionStyle.SymbolSize">
		<label>Size</label>
		<info>Size of the symbols</info>
	</data>
	<data name="DimensionStyle.Precision">
		<label>Precision</label>
		<info>Precision of the dimension text</info>
	</data>
	<data name="DimensionStyle.Precision.Values">
		<label>|1.0|0.5|0.25|0.1|0.05|0.025|0.01|0.001|0.0001|0.00001|0.0 (i.e. maximum)|1/2|1/4|1/8|1/16|1/32|1/64|DIN Bau</label>
	</data>
	<data name="DimensionStyle.TextPrefix">
		<label>Text prefix</label>
		<info>Text prefix preceding the dimension text</info>
	</data>
	<data name="DimensionStyle.TextPostfix">
		<label>Text suffix</label>
		<info>Text suffix following the dimension text</info>
	</data>
	<data name="DimensionStyle.TextSize">
		<label>Size</label>
		<info>Size of the dimension text</info>
	</data>
	<data name="DimensionStyle.Scale">
		<label>Scaling factor</label>
		<info>Scaling factor for the dimension text</info>
	</data>
	<data name="DimensionStyle.DimTxtDialog">
		<label>Text input manually</label>
		<info>Always display a input dialog for the dimension text</info>
	</data>
	<data name="DimensionStyle.DimTxtOutside">
		<label>Text outside</label>
		<info>Place dimension text outside of the dimensioning</info>
	</data>
	<data name="DimensionStyle.DimTxtAutomatic">
		<label>Text automatic placement</label>
		<info>Place text automatically</info>
	</data>
	<data name="DimensionStyle.DimTxtRotate90">
		<label>Text rotate 90°</label>
		<info>Rotate text about 90° to the dimension line</info>
	</data>
	<data name="DimensionStyle.DimTxtRotate60">
		<label>Text rotate 60°</label>
		<info>Rotate text about 60° to the dimension line</info>
	</data>
	<data name="DimensionStyle.DimTxtRotateAutomatic">
		<label>Text rotate automatic</label>
		<info>Rotate text automatically if it doesn't fit inside</info>
	</data>
	<data name="DimensionStyle.DimTxtInsideHor">
		<label>Horizontal inner text</label>
		<info>Show inner text always horizontally</info>
	</data>
	<data name="DimensionStyle.DimTxtOutsideHor">
		<label>Horizontal outside text</label>
		<info>Show outside text always horizontally</info>
	</data>
	<data name="DimensionStyle.DimForceTrailingZero">
		<label>Trailing zeros</label>
		<info>Force the display of trailing zeros</info>
	</data>
	<data name="DimensionStyle.DimTxtAlt">
		<label>Use 2nd text</label>
		<info>Use 2nd text for dimension text</info>
	</data>
	<data name="DimensionStyle.TextPostfixAlt">
		<label>Alternate postfix</label>
		<info>Postfix for the alternate text</info>
	</data>
	<data name="DimensionStyle.ScaleAlt">
		<label>Alternate scaling factor</label>
		<info>Scaling factor for the alternate text</info>
	</data>
	<data name="DimensionStyle.ToleranceMode">
		<label>Tolerance mode</label>
		<info>Kind of tolerance</info>
	</data>
	<data name="DimensionStyle.ToleranceMode.Values">
		<label>|No tolerances|Plus/minus|Boundary</label>
	</data>
	<data name="DimensionStyle.PlusTolerance">
		<label>Plus tolerance</label>
		<info>Display this plus tolerance</info>
	</data>
	<data name="DimensionStyle.MinusTolerance">
		<label>Minus tolerance</label>
		<info>Display this minus tolerance</info>
	</data>
	<data name="DimensionStyle.TextSizeTol">
		<label>Text size</label>
		<info>Text size for tolerance</info>
	</data>
	<data name="DimensionStyle.DimPoints">
		<label>Point dimensioning</label>
		<info>This dimension style is valid for point dimensioning</info>
	</data>
	<data name="DimensionStyle.DimCoord">
		<label>Coordinate dimensioning</label>
		<info>This dimension style is valid for coordinate dimensioning</info>
	</data>
	<data name="DimensionStyle.DimAngle">
		<label>Angle dimensioning</label>
		<info>This dimension style is valid for angle dimensioning</info>
	</data>
	<data name="DimensionStyle.DimRadius">
		<label>Radius dimensioning</label>
		<info>This dimension style is valid for radius dimensioning</info>
	</data>
	<data name="DimensionStyle.DimDiameter">
		<label>Diameter dimensioning</label>
		<info>This dimension style is valid for diameter dimensioning</info>
	</data>
	<data name="DimensionStyle.DimLocation">
		<label>Coordinate dimensioning</label>
		<info>This dimension style is valid for labeling</info>
	</data>
	<data name="DimensionStyle.DimLineColor">
		<label>Dimension line</label>
		<info>Color of the dimension line</info>
	</data>
	<data name="DimensionStyle.ExtLineColor">
		<label>Subsidiary line</label>
		<info>Color of the subsidiary line</info>
	</data>
	<data name="DimensionStyle.FillColor">
		<label>Solid</label>
		<info>Color of the solid arrows</info>
	</data>
	<data name="DimensionStyle.DimLineWidth">
		<label>Dimension line weight</label>
		<info>The line strength of the dimension line</info>
	</data>
	<data name="DimensionStyle.ExtLineWidth">
		<label>Subsidiary line weight</label>
		<info>Line width of the subsidiary lines</info>
	</data>
	<data name="DimensionStyle.DimTxtAngle">
		<label>Angular dimensioning</label>
		<info>Formatting of the angular values</info>
	</data>
	<data name="DimensionStyle.DimTxtAngle.Values">
		<label>|Degree|Degree, minutes, seconds|Grade|Radian|Length of curve</label>
	</data>
	<data name="DimensionStyle.DimAngleBisection">
		<label>Bisector</label>
		<info>Dimensioning of halve angles</info>
	</data>
	<data name="DimensionStyle.DimRadiusBend">
		<label>Bending radius dimension</label>
		<info>Bend the subsidiary line of a radius dimension</info>
	</data>
	<data name="DimensionStyle.TextFont">
		<label>Text font</label>
		<info>Text font for dimension text</info>
	</data>
	<data name="DimensionStyle.FontColor">
		<label>Color</label>
		<info>Color of the dimension texts</info>
	</data>
	<data name="MenuId.DimStyleList.New">
		<label>New dimension style</label>
		<info>Create a new dimension style</info>
	</data>
	<data name="MenuId.DimStyleList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused dimension styles</info>
	</data>
	<data name="MenuId.DimStyleList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the dimension style table from all dimension styles used in the project</info>
	</data>
	<data name="MenuId.DimStyleList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the dimension style table from all dimension styles used in the global settings</info>
	</data>
	<data name="MenuId.DimStyleList.MakeGlobal">
		<label>Make global</label>
		<info>Use this dimension style table as the global dimension style table</info>
	</data>
	<data name="MenuId.DimStyleEntry.Clone">
		<label>Clone</label>
		<info>Clone the selected dimension style</info>
	</data>
	<data name="MenuId.DimStyleEntry.Delete">
		<label>Remove</label>
		<info>Remove this dimension style from the table</info>
	</data>
	<data name="MenuId.DimStyleEntry.Edit">
		<label>Rename</label>
		<info>Rename dimension style</info>
	</data>
	<data name="MenuId.DimStyleEntry.Current">
		<label>Default dimension style</label>
		<info>Select as default dimension style</info>
	</data>
	<data name="MenuId.LayerList.New">
		<label>New layer</label>
		<info>Add a new layer to the layer table</info>
	</data>
	<data name="MenuId.LayerList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused layers</info>
	</data>
	<data name="MenuId.LayerList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the layer table from all layers used in the project</info>
	</data>
	<data name="MenuId.LayerList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the layer table from all layers used in the global settings</info>
	</data>
	<data name="MenuId.LayerList.MakeGlobal">
		<label>Make global</label>
		<info>Use this layer table as the global layer table</info>
	</data>
	<data name="MenuId.StyleList.New">
		<label>New style</label>
		<info>Add a new style to the style table</info>
	</data>
	<data name="MenuId.StyleList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused styles</info>
	</data>
	<data name="MenuId.StyleList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the style table from all styles used in the project</info>
	</data>
	<data name="MenuId.StyleList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the style table from all styles used in the global settings</info>
	</data>
	<data name="MenuId.StyleList.MakeGlobal">
		<label>Make global</label>
		<info>Use this style table as the global style table</info>
	</data>
	<data name="MenuId.ColorList.New">
		<label>New color</label>
		<info>Add a new color to the color table</info>
	</data>
	<data name="MenuId.ColorList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused colors</info>
	</data>
	<data name="MenuId.ColorList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the color table from all colors used in the project</info>
	</data>
	<data name="MenuId.ColorList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the color table from all colors used in the global settings</info>
	</data>
	<data name="MenuId.ColorList.MakeGlobal">
		<label>Make global</label>
		<info>Use this color table as the global color table</info>
	</data>
	<data name="Dimension.DimPoints">
		<label>Point dimensioning</label>
		<info>Properties of the point dimensioning</info>
	</data>
	<data name="Dimension.DimCoord">
		<label>Reference dimensioning</label>
		<info>Properties of the reference dimensioning</info>
	</data>
	<data name="Dimension.DimAngle">
		<label>Angular dimensioning</label>
		<info>Properties of the angular dimensioning</info>
	</data>
	<data name="Dimension.DimRadius">
		<label>Radius dimensioning</label>
		<info>Properties of the radius dimensioning</info>
	</data>
	<data name="Dimension.DimDiameter">
		<label>Diameter dimensioning</label>
		<info>Properties of the diameter dimensioning</info>
	</data>
	<data name="Dimension.DimLocation">
		<label>Coordinate dimensioning</label>
		<info>Properties of the coordinate dimensioning</info>
	</data>
	<data name="Dimension.Points">
		<label>Points</label>
		<info>Dimensioned points</info>
	</data>
	<data name="Dimension.Points.Point">
		<label>Point</label>
		<info>A dimensioned point</info>
	</data>
	<data name="Dimension.DimLineRef">
		<label>Position</label>
		<info>Position of the dimension line</info>
	</data>
	<data name="Dimension.Direction">
		<label>Direction</label>
		<info>Direction of the dimension line</info>
	</data>
	<data name="Dimension.DimText">
		<label>Text</label>
		<info>Text of the dimension object</info>
	</data>
	<data name="Dimension.TolPlusText">
		<label>Plus tolerance</label>
		<info>Plus tolerance text</info>
	</data>
	<data name="Dimension.TolMinusText">
		<label>Minus tolerance</label>
		<info>Minus tolerance text</info>
	</data>
	<data name="Dimension.Prefix">
		<label>Prefix</label>
		<info>Prefix text preceding the dimension text</info>
	</data>
	<data name="Dimension.Postfix">
		<label>Postfix</label>
		<info>Postfix text following the dimension text</info>
	</data>
	<data name="Dimension.PostfixAlt">
		<label>Alternate postfix</label>
		<info>Alternate postfix text, following the alternate dimension text</info>
	</data>
	<data name="DimensionStyle.Selection">
		<label>Dimension style</label>
		<info>Select the dimension style</info>
	</data>
	<data name="Dimension.Radius">
		<label>Radius</label>
		<info>Radius for the dimensioning</info>
	</data>
	<data name="Dimension.Diameter">
		<label>Diameter</label>
		<info>Diameter for the dimensioning</info>
	</data>
	<data name="Dimension.Center">
		<label>Center</label>
		<info>Center for the dimensioning</info>
	</data>
	<data name="Dimension.TextPos">
		<label>Text position</label>
		<info>Position of the dimension text</info>
	</data>
	<data name="Dimension.Startangle">
		<label>Starting angle</label>
		<info>Starting angle of the angular dimensioning</info>
	</data>
	<data name="Dimension.Endangle">
		<label>Ending angle</label>
		<info>Ending angle of the angular dimensioning</info>
	</data>
	<data name="LineWidthList.Default">
		<label>|Thin:0.0D|0.7 mm:0.7L|0,3 mm:0.3W</label>
	</data>
	<data name="LinePatternList.Default">
		<label>|Continous|Dashed: 2.0 2.0|Dash-dotted: 4.0 2 0 0 0 2.0|Dotted: 0.0 2.0</label>
	</data>
	<data name="LineWidthList">
		<label>Line widths</label>
		<info>Manage the line width list</info>
	</data>
	<data name="LineWidthList.DontRemoveLastItem">
		<label>The last line width cannot be removed</label>
	</data>
	<data name="LineWidthList.ItemIsUsed">
		<label>The line width is being used, remove anyway?</label>
	</data>
	<data name="LineWidthName">
		<label>Line width</label>
		<info>Line width</info>
	</data>
	<data name="LineWidth.Scaling">
		<label>|Device|World|Layout</label>
	</data>
	<data name="LineWidth.Scale">
		<label>Scaling</label>
		<info>The scaling system of the line width</info>
	</data>
	<data name="MenuId.LineWidthList.New">
		<label>New line width</label>
		<info>Add a new line width to the line width table</info>
	</data>
	<data name="MenuId.LineWidthList.RemoveUnused">
		<label>Remove unused</label>
		<info>Remove unused line width</info>
	</data>
	<data name="MenuId.LineWidthList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the line width table from all line widths used in the project</info>
	</data>
	<data name="MenuId.LineWidthList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the line width table from all line widths used in the global settings</info>
	</data>
	<data name="MenuId.LineWidthList.MakeGlobal">
		<label>Make global</label>
		<info>Use this line width table as the global line width table</info>
	</data>
	<data name="MenuId.LineWidthEntry.Delete">
		<label>Remove</label>
		<info>Remove this line width from the table</info>
	</data>
	<data name="MenuId.LineWidthEntry.Edit">
		<label>Rename</label>
		<info>Rename line width</info>
	</data>
	<data name="MenuId.LineWidthEntry.Current">
		<label>Default line width</label>
		<info>Select as default line width</info>
	</data>
	<data name="LineWidthList.NewName">
		<label>Line width</label>
	</data>
	<data name="LineWidth.Selection">
		<label>Line width</label>
		<info>Line width of the object/s</info>
	</data>
	<data name="LinePatternList">
		<label>Line patterns</label>
		<info>Manage the line pattern list</info>
	</data>
	<data name="LinePatternName">
		<label>Line pattern</label>
		<info>Line pattern</info>
	</data>
	<data name="LinePatternList.DontRemoveLastItem">
		<label>The last line pattern cannot be removed</label>
	</data>
	<data name="LinePatternList.ItemIsUsed">
		<label>The line pattern is being used, remove anyway?</label>
	</data>
	<data name="LinePattern.Scaling">
		<label>|Device|World|Layout</label>
	</data>
	<data name="LinePattern.Scale">
		<label>Scaling</label>
		<info>The scaling system of the line pattern</info>
	</data>
	<data name="MenuId.LinePatternList.New">
		<label>New line width</label>
		<info>Add a new line pattern to the line pattern table</info>
	</data>
	<data name="MenuId.LinePatternList.RemoveUnused">
		<label>Remove unused</label>
		<info>In this project unused bar patterns are removed</info>
	</data>
	<data name="MenuId.LinePatternList.UpdateFromProject">
		<label>Update from project</label>
		<info>Update the line pattern table from all line patterns used in the project</info>
	</data>
	<data name="MenuId.LinePatternList.AddFromGlobal">
		<label>Update from global</label>
		<info>Update the line pattern table from all line patterns used in the global settings</info>
	</data>
	<data name="MenuId.LinePatternList.MakeGlobal">
		<label>Make global</label>
		<info>Use this line pattern table as the global line pattern table</info>
	</data>
	<data name="MenuId.LinePatternEntry.Delete">
		<label>Remove</label>
		<info>Remove this line pattern from the table</info>
	</data>
	<data name="MenuId.LinePatternEntry.Edit">
		<label>Rename</label>
		<info>Rename line pattern</info>
	</data>
	<data name="MenuId.LinePatternEntry.Current">
		<label>Default line pattern</label>
		<info>Select as default line pattern</info>
	</data>
	<data name="LinePatternList.NewName">
		<label>Line pattern</label>
	</data>
	<data name="LinePattern.Stroke">
		<label>Stroke</label>
		<info>Length of the stroke</info>
	</data>
	<data name="LinePattern.Gap">
		<label>Gap</label>
		<info>Length of the gap</info>
	</data>
	<data name="Style.Layer">
		<label>Layer</label>
		<info>Layer setting of this style</info>
	</data>
	<data name="Style.ColorDef">
		<label>Color</label>
		<info>Color setting of this style</info>
	</data>
	<data name="Style.LineWidth">
		<label>Line width</label>
		<info>Line width setting of this style</info>
	</data>
	<data name="Style.LinePattern">
		<label>Line pattern</label>
		<info>Line pattern setting of this style</info>
	</data>
	<data name="Style.HatchStyle">
		<label>Hatch style</label>
		<info>Hatch style setting of this style</info>
	</data>
	<data name="Style.DimensionStyle">
		<label>Dimension style</label>
		<info>Dimension style setting of this style</info>
	</data>
	<data name="Style.DefaultName">
		<label>Standard</label>
	</data>
	<data name="StyleList">
		<label>Styles</label>
		<info>Styles (set of other attributes)</info>
	</data>
	<data name="StyleList.DontRemoveLastItem">
		<label>The last style cannot be removed</label>
	</data>
	<data name="StyleList.ItemIsUsed">
		<label>The style is being used, remove anyway?</label>
	</data>
	<data name="StyleList.NewStyleName">
		<label>New style</label>
	</data>
	<data name="StyleName">
		<label>Style</label>
		<info>Style</info>
	</data>
	<data name="MenuId.IndexedPoint.InsertAfter">
		<label>Insert after</label>
		<info>Insert new point after this point</info>
	</data>
	<data name="MenuId.IndexedPoint.InsertBefore">
		<label>Insert before</label>
		<info>Insert new point before this point</info>
	</data>
	<data name="MenuId.IndexedPoint.Delete">
		<label>Delete</label>
		<info>Delete this point</info>
	</data>
	<data name="SymbolTreeview">
		<label>Symbol libraries</label>
		<info>List of the symbol libraries</info>
	</data>
	<data name="SymbolList">
		<label>Symbol library</label>
		<info>List of the symbols in the library</info>
	</data>
	<data name="SymbolList.NewSymbolName">
		<label>Symbol</label>
	</data>
	<data name="SymbolList.ThisProject">
		<label>This Project</label>
	</data>
	<data name="Select.Attributes">
		<label>Common properties</label>
		<info>Common properties of the selected objects</info>
	</data>
	<data name="Select.LinePattern">
		<label>Line pattern</label>
		<info>Line pattern of the selected objects. Changing the line pattern affects all selected objects</info>
	</data>
	<data name="Select.MultipleLinePattern">
		<label>Arbitrary</label>
	</data>
	<data name="Select.LineWidth">
		<label>Line width</label>
		<info>Line width of the selected objects. Changing the line width affects all selected objects</info>
	</data>
	<data name="Select.MultipleLineWidth">
		<label>Arbitrary</label>
	</data>
	<data name="Select.Layer">
		<label>Layer</label>
		<info>Layer of the selected objects. Changing the layer affects all selected objects</info>
	</data>
	<data name="Select.MultipleLayer">
		<label>Arbitrary</label>
	</data>
	<data name="Select.ColorDef">
		<label>Color</label>
		<info>Color of the selected objects. Changing the color affects all selected objects</info>
	</data>
	<data name="Select.MultipleColorDef">
		<label>Arbitrary</label>
	</data>
	<data name="Select.NumObjects">
		<label>Count</label>
		<info>Number of selected objects</info>
	</data>
	<data name="Setting.Action.RepeatConstruct">
		<label>Auto repeat</label>
		<info>Automatically repeat construct actions. Press ESC to stop construction</info>
	</data>
	<data name="Setting.Action.RepeatConstruct.Values">
		<label>|Repeat|Do not repeat</label>
	</data>
	<data name="Setting.Action.PopProperties">
		<label>Force visibility</label>
		<info>Automatically shows the input fields of the current action (construction/selection)</info>
	</data>
	<data name="Setting.Action.KeepStyle">
		<label>Keep style</label>
		<info>Keep style of attributes</info>
	</data>
	<data name="Action.Settings">
		<label>Actions</label>
		<info>Various settings of the actions</info>
	</data>
	<data name="Model.DefaultName">
		<label>Standard model</label>
	</data>
	<data name="ModelName">
		<label>Model</label>
		<info>Model</info>
	</data>
	<data name="Model.Unit">
		<label>Units</label>
		<info>Units of the model</info>
	</data>
	<data name="Model.Unit.Values">
		<label>|Millimeter|Centimeter|Meter|Kilometer|Inch|Foot</label>
	</data>
	<data name="Model.DefaultScale">
		<label>Default scale</label>
		<info>Default scale of this model</info>
	</data>
	<data name="Model.LineStyleScale">
		<label>Scaling line pattern</label>
		<info>Scaling line pattern in this model</info>
	</data>
	<data name="Project.Models">
		<label>Models</label>
		<info>Models in this project</info>
	</data>
	<data name="MenuId.DimStyleList.UpdateAllDimensions">
		<label>Update dimensions</label>
		<info>Update all dimensions to respect modifications of the dimension styles</info>
	</data>
	<data name="BlockRef.Object">
		<label>{0}(Reference)</label>
		<info>A block reference</info>
	</data>
	<data name="BlockRef.Position">
		<label>Position</label>
		<info>Position of the block</info>
	</data>
	<data name="ModelView.LineWidthMode">
		<label>Line width mode</label>
		<info>How to display line widths in this model</info>
	</data>
	<data name="ModelView.LineWidthMode.Values">
		<label>|Only thin lines|Use line width</label>
	</data>
	<data name="MenuId.View.Model">
		<label>Model views</label>
		<info>Select a model view or create a new one</info>
	</data>
	<data name="MenuId.View.Layout">
		<label>Layout</label>
		<info>Select a layout or create a new one</info>
	</data>
	<data name="MenuId.View.Layout.NewLayout">
		<label>New layout</label>
		<info>Define a new layout</info>
	</data>
	<data name="MenuId.View.Model.NewModelView">
		<label>New model view</label>
		<info>Define a new model view</info>
	</data>
	<data name="Layout.Default.Name">
		<label>Layout {0:##}</label>
	</data>
	<data name="ModelView.Default.Name">
		<label>Model view {0:##}</label>
	</data>
	<data name="MenuId.Layout.Scale.1To1">
		<label>1:1</label>
		<info>Set scale 1:1 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.1To5">
		<label>1:5</label>
		<info>Scale 1:5 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.1To10">
		<label>1:10</label>
		<info>Set scale 1:10 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.1To50">
		<label>1:50</label>
		<info>Set scale 1:50 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.1To100">
		<label>1:100</label>
		<info>Set scale 1:100 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.1To1000">
		<label>1:1000</label>
		<info>Set scale 1:1000 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.10To1">
		<label>10:1</label>
		<info>Set scale 10:1 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.100To1">
		<label>100:1</label>
		<info>Set scale 100:1 for this patch</info>
	</data>
	<data name="MenuId.Layout.Scale.Fit">
		<label>Fit</label>
		<info>Fit on this patch</info>
	</data>
	<data name="Layout.PaperWidth">
		<label>Paper width</label>
		<info>Paper width for this layout. Use "Page Setup" to automatically set the paper size according to the printer</info>
	</data>
	<data name="Layout.PaperHeight">
		<label>Paper height</label>
		<info>Paper height for this layout. Use "Page Setup" to automatically set the paper size according to the printer</info>
	</data>
	<data name="LayoutView">
		<label>Layout "{0}"</label>
		<info>Properties of a layout of this project</info>
	</data>
	<data name="Layout.Scale">
		<label>Scale</label>
		<info>Scale of the model for this patch</info>
	</data>
	<data name="MenuId.LayoutView.Show">
		<label>Display</label>
		<info>Show this layout in the active window</info>
	</data>
	<data name="MenuId.LayoutView.Print">
		<label>Print</label>
		<info>Print this layout</info>
	</data>
	<data name="MenuId.LayoutView.Print.Setup">
		<label>Page Setup</label>
		<info>Page setup for this layout.</info>
	</data>
	<data name="MenuId.ModelView.Show">
		<label>Show</label>
		<info>Show this model view in the active window</info>
	</data>
	<data name="MultiViewProperty">
		<label>Views</label>
		<info>Manage different views of this project, model views for interaction, layout view for printing</info>
	</data>
	<data name="ModelView.Projection.Direction">
		<label>Projection direction</label>
		<info>Projection direction for this model view</info>
	</data>
	<data name="DrawingPlane.DirectionX">
		<label>X-direction</label>
		<info>Direction of the X-axis of the drawing plane</info>
	</data>
	<data name="DrawingPlane.DirectionY">
		<label>Y-direction</label>
		<info>Direction of the Y-axis of the drawing plane</info>
	</data>
	<data name="SelectObjects.Settings">
		<label>Select</label>
		<info>Various setting for the selection of objects</info>
	</data>
	<data name="ImportedColor.Name">
		<label>Import Color</label>
	</data>
	<data name="Dimension.Importname">
		<label>Dimension Block</label>
	</data>
	<data name="CustomGeoObject.Importname">
		<label>Block from Custom object</label>
	</data>
	<data name="Grid.DisplayMode">
		<label>Display</label>
		<info>How to display the grid</info>
	</data>
	<data name="Grid.DisplayMode.Values">
		<label>|Invisible|Points|Crosses|Lines|Chessboard</label>
	</data>
	<data name="Grid.XDistance">
		<label>Horizontal distance</label>
		<info>Horizontal distance of the grid in the drawing plane</info>
	</data>
	<data name="Grid.YDistance">
		<label>Vertical distance</label>
		<info>Vertical distance of the grid in the drawing plane</info>
	</data>
	<data name="Grid">
		<label>Grid</label>
		<info>Properties of the grid</info>
	</data>
	<data name="Setting.Colors">
		<label>Color settings</label>
		<info>Color settings for various purposes</info>
	</data>
	<data name="Setting.Colors.Background">
		<label>Background color</label>
		<info>Background color of the model view</info>
	</data>
	<data name="Setting.Colors.Drawingplane">
		<label>Drawing plane color</label>
		<info>Drawing plane color of the model view</info>
	</data>
	<data name="Setting.Colors.ActiveFrame">
		<label>Active frame color</label>
		<info>Frame color of the active view</info>
	</data>
	<data name="Setting.Colors.Grid">
		<label>Grid color</label>
		<info>Color for the grid lines or secondary color for the grid chessboard</info>
	</data>
	<data name="Setting.Colors.Feedback">
		<label>Construction color</label>
		<info>Color for auxiliary objects of the construction</info>
	</data>
	<data name="Setting.Colors.Layout">
		<label>Layout color</label>
		<info>Color for the background of the layout select</info>
	</data>
	<data name="DrawingPlane.Constr.Offset">
		<label>Drawing plane</label>
		<info>Origin for drawing plane</info>
	</data>
	<data name="DrawingPlane.Offset">
		<label>Origin</label>
		<info>Origin for drawing plane</info>
	</data>
	<data name="MenuId.Projection.Direction.Vertical">
		<label>Vertical direction</label>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal">
		<label>Horizontal direction</label>
	</data>
	<data name="MenuId.Projection.Direction.Vertical.FromTop">
		<label>From Top</label>
		<info>View the model from top</info>
	</data>
	<data name="MenuId.Projection.Direction.Vertical.FromAboveGround">
		<label>From above</label>
		<info>View the model from above ground (45° latitude)</info>
	</data>
	<data name="MenuId.Projection.Direction.Vertical.FromGroundLevel">
		<label>From Front</label>
		<info>View the model from front (equator)</info>
	</data>
	<data name="MenuId.Projection.Direction.Vertical.FromBelowGround">
		<label>From below</label>
		<info>View the model from below ground (-45° latitude)</info>
	</data>
	<data name="MenuId.Projection.Direction.Vertical.FromBottom">
		<label>From bottom</label>
		<info>Projection direction (view) from down</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromFront">
		<label>From front</label>
		<info>View the model in direction of the Y-axis</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromFrontRight">
		<label>From right front</label>
		<info>View the model from the 4th quadrant</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromRight">
		<label>From right</label>
		<info>View the model against the direction of the X-axis</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromRightBack">
		<label>From right back</label>
		<info>View the model from the 1st quadrant</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromBack">
		<label>From back</label>
		<info>View the model against the direction of the Y-axis</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromBackLeft">
		<label>From back left</label>
		<info>View the model from the 2nd quadrant</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromLeft">
		<label>From left</label>
		<info>View the model in direction of the X-axis</info>
	</data>
	<data name="MenuId.Projection.Direction.Horizontal.FromLeftFront">
		<label>From left front</label>
		<info>View the model from the 3rd quadrant</info>
	</data>
	<data name="Error.Import.UnknownFileType">
		<label>Unknown file format</label>
	</data>
	<data name="Error.Import.Condor4">
		<label>Error importing Condor 4.x</label>
	</data>
	<data name="Errormessage.Import">
		<label>Error importing file</label>
	</data>
	<data name="MenuId.Approximate">
		<label>Approximate</label>
		<info>Approximate this curve by line/circular arcs (Precision see global settings)</info>
	</data>
	<data name="Layout.HorizontalPosition">
		<label>Left (model)</label>
		<info>Left-hand side of the model on the paper</info>
	</data>
	<data name="Layout.VerticalPosition">
		<label>Bottom (model)</label>
		<info>Lower edge of the model on the paper</info>
	</data>
	<data name="MenuId.Layout.Horizontal.Left">
		<label>Justify left</label>
		<info>Left justify model on the patch</info>
	</data>
	<data name="MenuId.Layout.Horizontal.Center">
		<label>Center horizontal</label>
		<info>Center model horizontally on the patch</info>
	</data>
	<data name="MenuId.Layout.Horizontal.Right">
		<label>Justify right</label>
		<info>Right justify model on the patch</info>
	</data>
	<data name="MenuId.Layout.Vertical.Bottom">
		<label>Justify bottom</label>
		<info>Bottom justify model on the patch</info>
	</data>
	<data name="MenuId.Layout.Vertical.Center">
		<label>Center vertical</label>
		<info>Vertically center model on the patch</info>
	</data>
	<data name="MenuId.Layout.Vertical.Top">
		<label>Justify top</label>
		<info>Top justify model on the patch</info>
	</data>
	<data name="Setting.Snap">
		<label>Snap options</label>
		<info>Snap options for the behavior of the snap operation</info>
	</data>
	<data name="Snap.Snap30">
		<label>30° points</label>
		<info>Snap points at 30° positions on the circumference of circles and ellipses (arcs)</info>
	</data>
	<data name="Snap.Snap45">
		<label>45° points</label>
		<info>Snap points at 45° positions on the circumference of circles and ellipses (arcs)</info>
	</data>
	<data name="YesNo.Values">
		<label>|Yes|No</label>
	</data>
	<data name="Constr.Polyline.OpenClosed">
		<label>Ending</label>
		<info>Open or closed</info>
	</data>
	<data name="Polyline.OpenClosed.Values">
		<label>|Closed|Open</label>
	</data>
	<data name="MenuId.Edit.SelectAll">
		<label>Select all</label>
		<info>Select all objects of the model</info>
	</data>
	<data name="Snap.SnapLocalOrigin">
		<label>Snap to local origin</label>
		<info>Use the local origin, the origin of the drawing plane as a snap point</info>
	</data>
	<data name="Snap.SnapGlobalOrigin">
		<label>Snap to global origin</label>
		<info>Use the global origin of the coordinate system as a snap point</info>
	</data>
	<data name="Construct.Plane.Origin">
		<label>Origin</label>
		<info>Origin of the drawing plane</info>
	</data>
	<data name="Construct.Plane.DirectionX">
		<label>X-direction</label>
		<info>Direction of the X-axis of the plane</info>
	</data>
	<data name="Construct.Plane.DirectionY">
		<label>Y-direction</label>
		<info>Direction of the Y-axis of the plane</info>
	</data>
	<data name="Construct.DrawingPlane">
		<label>Drawing plane</label>
		<info>Drawing plane, also defines the local coordinate system</info>
	</data>
	<data name="MenuId.Import.Dwg">
		<label>Import DXF/DWG</label>
		<info>Import DXF/DWG file</info>
	</data>
	<data name="Approximate.Mode">
		<label>Approximation</label>
		<info>Approximation mode</info>
	</data>
	<data name="Approximate.Mode.Values">
		<label>|Only lines|Circular arcs and lines</label>
	</data>
	<data name="Approximate.Precision">
		<label>Precision</label>
		<info>Precision, maximum derivation from the exact curve</info>
	</data>
	<data name="Approximate">
		<label>Approximate</label>
		<info>Mode and precision for approximation</info>
	</data>
	<data name="MenuId.Symbols.FileOpen">
		<label>Import symbols</label>
		<info>Import symbols from a file</info>
	</data>
	<data name="Symbol.PlaceHolder.ObjectText">
		<label>Drop new symbol here</label>
	</data>
	<data name="Symbol.PlaceHolder.SymbolName">
		<label>No symbols available</label>
	</data>
	<data name="MenuId.SymbolEntry.Remove">
		<label>Remove</label>
		<info>Remove this symbol from symbol list</info>
	</data>
	<data name="MenuId.SymbolEntry.Copy">
		<label>Copy</label>
		<info>Copy symbol into clipboard</info>
	</data>
	<data name="MenuId.SymbolEntry.Edit">
		<label>Rename</label>
		<info>Rename symbol</info>
	</data>
	<data name="MenuId.SymbolList.Remove">
		<label>Remove</label>
		<info>Remove from list</info>
	</data>
	<data name="MenuId.SymbolList.Paste">
		<label>Insert</label>
		<info>Insert symbol from clipboard</info>
	</data>
	<data name="MenuId.SymbolList.Autoload">
		<label>Always load</label>
		<info>Always load this file on startup</info>
	</data>
	<data name="MenuId.SelectedObject.Delete">
		<label>Delete</label>
		<info>Delete this object</info>
	</data>
	<data name="MenuId.SelectedObject.DontSelect">
		<label>Do not select</label>
		<info>Exclude this object from the set of selected objects</info>
	</data>
	<data name="MenuId.SelectedObject.SelectOnlyThis">
		<label>Select only this</label>
		<info>Select only this object, exclude all other objects from the selection set</info>
	</data>
	<data name="Path.Area">
		<label>Area</label>
		<info>Area enclosed by this path. An open path does not have a valid area</info>
	</data>
	<data name="ConstructAequidist.BaseCurve">
		<label>Base curve</label>
		<info>Base curve for the equidistant curve</info>
	</data>
	<data name="ConstructAequidist.Distance">
		<label>Distance</label>
		<info>Distance for the equidistant curve, negative distance: inside and/or left side, positive distance: outside and/or right side</info>
	</data>
	<data name="ConstructAequidist.ThroughPoint">
		<label>Through point</label>
		<info>The equidistant should pass through this point</info>
	</data>
	<data name="ConstructAequidist">
		<label>Equidistant</label>
		<info>Equidistant to a basis curve</info>
	</data>
	<data name="Measure">
		<label>Measure</label>
		<info>Various method for measuring positions (coordinates), lengths, angles and areas</info>
	</data>
	<data name="MeasurePoint">
		<label>Coordinate</label>
		<info>Measured coordinate</info>
	</data>
	<data name="MeasureLength">
		<label>Length</label>
		<info>Measure length</info>
	</data>
	<data name="MeasureDirection">
		<label>Direction</label>
		<info>Measure direction</info>
	</data>
	<data name="HatchStyleSolid.Color">
		<label>Color</label>
		<info>Color of the filled area</info>
	</data>
	<data name="HatchStyleContour.LineDistance">
		<label>Distance</label>
		<info>Distance of the equidistant lines</info>
	</data>
	<data name="HatchStyleContour.FirstDistance">
		<label>First distance</label>
		<info>Distance of the outermost line to the boundary</info>
	</data>
	<data name="HatchStyleContour.ExcludeHoles">
		<label>Holes</label>
		<info>Handling of holes</info>
	</data>
	<data name="HatchStyleContour.ExcludeHoles.Values">
		<label>|Circumscribe|Skip|Both </label>
	</data>
	<data name="HatchStyleContour.SpiralMode">
		<label>Spiral</label>
		<info>Handling of equidistant lines</info>
	</data>
	<data name="HatchStyleContour.SpiralMode.Values">
		<label>|Parallel|Spiral contour|Round spiral|Closed contour spiral</label>
	</data>
	<data name="Hatch.Area">
		<label>Area</label>
		<info>Size of the area without the holes</info>
	</data>
	<data name="NamedValues">
		<label>Values</label>
		<info>Defined values for use in input field or formulas</info>
	</data>
	<data name="NamedValues.NewGeoPoint.Prefix">
		<label>p</label>
	</data>
	<data name="NamedValues.NewGeoVector.Prefix">
		<label>v</label>
	</data>
	<data name="NamedValues.NewDouble.Prefix">
		<label>d</label>
	</data>
	<data name="MenuId.NamedValue.Remove">
		<label>Delete</label>
		<info>Delete this value from the list</info>
	</data>
	<data name="MenuId.NamedValue.EditName">
		<label>Rename</label>
		<info>Rename defined value</info>
	</data>
	<data name="MenuId.NamedValues.NewGeoPoint">
		<label>New point</label>
		<info>Define a new point variable</info>
	</data>
	<data name="MenuId.NamedValues.NewGeoVector">
		<label>New vector</label>
		<info>Define a new vector variable</info>
	</data>
	<data name="MenuId.NamedValues.NewDouble">
		<label>New double value</label>
		<info>Define a new double variable</info>
	</data>
	<data name="FilterList">
		<label>Filter</label>
		<info>Filter for object selection (only bold filters are in use)</info>
	</data>
	<data name="FilterName">
		<label>Filter</label>
		<info>A filter for selection objects</info>
	</data>
	<data name="CheckedAttribute.Entry">
		<label>Activate entry</label>
		<info>Activate or inactivate the selected attribute entry</info>
	</data>
	<data name="Filter.LayerList">
		<label>Layer filter</label>
		<info>Check those layers which should be accepted by the filter</info>
	</data>
	<data name="Filter.ColorList">
		<label>Color filter</label>
		<info>Check those colors which should be accepted by the filter</info>
	</data>
	<data name="Filter.LineWidthList">
		<label>Line width filter</label>
		<info>Check those line widths which should be accepted by the filter</info>
	</data>
	<data name="Filter.LinePatternList">
		<label>Line pattern filter</label>
		<info>Check those line patterns which should be accepted by the filter</info>
	</data>
	<data name="Filter.HatchStyleList">
		<label>Hatch style filter</label>
		<info>Check those hatch styles which should be accepted by the filter</info>
	</data>
	<data name="Filter.DimensionStyleList">
		<label>Dimension style filter</label>
		<info>Check those dimension styles which should be accepted by the filter</info>
	</data>
	<data name="Filter.NewFilter.Prefix">
		<label>Filter</label>
	</data>
	<data name="MenuId.FilterList.AddFilter">
		<label>New filter</label>
		<info>Add a new filter to the table of filters</info>
	</data>
	<data name="MenuId.FilterList.DeactivateAll">
		<label>Deactivate all</label>
		<info>Deactivate all filters, all objects may be selected</info>
	</data>
	<data name="MenuId.Filter.Active">
		<label>Is active</label>
		<info>this filter is active or inactive. Only active filters affect the selection</info>
	</data>
	<data name="MenuId.Filter.OnlyThis">
		<label>Only this filter</label>
		<info>This filter will be the only active filter</info>
	</data>
	<data name="MenuId.Filter.Rename">
		<label>Rename</label>
		<info>Rename this filter</info>
	</data>
	<data name="MenuId.Filter.Delete">
		<label>Delete</label>
		<info>Delete this filter</info>
	</data>
	<data name="MenuId.AttributeFilter.SelectAll">
		<label>Select all</label>
		<info>Select all attributes of this category</info>
	</data>
	<data name="MenuId.AttributeFilter.SelectNone">
		<label>Select none</label>
		<info>Select no attribute of this category</info>
	</data>
	<data name="MenuId.SelectedObjects.MakeFilter">
		<label>Make filter</label>
		<info>Create a new filter that accepts all selected objects</info>
	</data>
	<data name="MenuId.HatchStyleList.UpdateAllHatchs">
		<label>Update hatch</label>
		<info>Update all hatch objects to reflect modifications of the hatch styles</info>
	</data>
	<data name="LineWidth.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="LinePattern.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="HatchStyle.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="DimensionStyle.Undefined">
		<label>-Arbitrary-</label>
	</data>
	<data name="StyleSelection">
		<label>Style</label>
		<info>Style of the object</info>
	</data>
	<data name="MenuId.StyleList.UpdateAllObjects">
		<label>Update objects</label>
		<info>Update all objects to reflect modifications of the styles</info>
	</data>
	<data name="MenuId.StyleEntry.Delete">
		<label>Delete</label>
		<info>Delete this style</info>
	</data>
	<data name="MenuId.StyleEntry.Edit">
		<label>Rename</label>
		<info>Rename the style</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForCurves">
		<label>2D default</label>
		<info>Default style for 2D curves</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForSolids">
		<label>3D default</label>
		<info>Default style for 2D curves (solid, shell, face)</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForText">
		<label>Text default</label>
		<info>Default style for text objects</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForDimension">
		<label>Dimension default</label>
		<info>Default style for dimensioning</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForHiddenSolids">
		<label>3D default (hidden)</label>
		<info>Default for hidden 3D objects</info>
	</data>
	<data name="MenuId.StyleEntry.DefaultForAxis">
		<label>Default for Axis</label>
		<info>Default for Axis</info>
	</data>
	<data name="MenuId.VisibleLayer.SelectAll">
		<label>Select all</label>
		<info>Select all layers as visible layers</info>
	</data>
	<data name="MenuId.VisibleLayer.SelectNone">
		<label>Select none</label>
		<info>Select no layer as visible layers</info>
	</data>
	<data name="ModelView.VisibleLayers">
		<label>Visible layer</label>
		<info>Select visible layers for this model view</info>
	</data>
	<data name="VisibleLayer.Entry">
		<label>Visible layer</label>
		<info>Visibility of the selected layer</info>
	</data>
	<data name="MenuId.ModelView.Rename">
		<label>Rename</label>
		<info>Rename this model view</info>
	</data>
	<data name="MenuId.LayoutView.Rename">
		<label>Rename</label>
		<info>Rename this layout</info>
	</data>
	<data name="ModelSelection">
		<label>Model</label>
		<info>Selection of the model for this model view</info>
	</data>
	<data name="MenuId.LayoutPatch.Remove">
		<label>Remove</label>
		<info>Remove this patch from the layout</info>
	</data>
	<data name="MenuId.LayoutPatch.FillLayout">
		<label>Cover all</label>
		<info>Cover whole page</info>
	</data>
	<data name="MenuId.LayoutView.AddPatch">
		<label>New patch</label>
		<info>Add a new patch to the layout</info>
	</data>
	<data name="MenuId.LayoutPatch.Rename">
		<label>Rename</label>
		<info>Rename this patch</info>
	</data>
	<data name="MenuId.LayoutPatch.Center">
		<label>Center</label>
		<info>Center model in this patch</info>
	</data>
	<data name="Layout.Left">
		<label>Left (layout)</label>
		<info>Left-hand side of the patch on the layout</info>
	</data>
	<data name="Layout.Bottom">
		<label>Bottom (layout)</label>
		<info>Bottom edge of the patch on the layout</info>
	</data>
	<data name="Layout.Width">
		<label>Width (layout)</label>
		<info>Width of the patch on the layout</info>
	</data>
	<data name="Layout.Height">
		<label>Height (layout)</label>
		<info>Height of the patch on the layout</info>
	</data>
	<data name="Layout.Model">
		<label>Model</label>
		<info>Model to be displayed in this patch</info>
	</data>
	<data name="Layout.Projection">
		<label>Projection</label>
		<info>Projection for model in this patch</info>
	</data>
	<data name="Layout.Patch">
		<label>Patch {0}</label>
		<info>A patch of the layout</info>
	</data>
	<data name="MenuId.Models.Add">
		<label>New model</label>
		<info>Add a new model to the project</info>
	</data>
	<data name="MenuId.Models.Import">
		<label>Import model</label>
		<info>Import a model from another project</info>
	</data>
	<data name="Models">
		<label>Models</label>
		<info>Overview of the models and their properties in this project</info>
	</data>
	<data name="Model.Default.Name">
		<label>Model {0:##}</label>
	</data>
	<data name="MenuId.Model.Remove">
		<label>Remove</label>
		<info>Remove this model from the project</info>
	</data>
	<data name="MenuId.Model.Rename">
		<label>Rename</label>
		<info>Rename this model</info>
	</data>
	<data name="MenuId.LayoutView.Remove">
		<label>Remove</label>
		<info>Remove this layout</info>
	</data>
	<data name="MenuId.ModelView.Remove">
		<label>Delete</label>
		<info>Delete this model view</info>
	</data>
	<data name="Project.SaveModified">
		<label>The project has been modified. Save changes?</label>
	</data>
	<data name="MenuId.SelectedObjects.Approximate">
		<label>Approximate all</label>
		<info>Approximate all selected objects by line/circular arcs; Details like precision are adjustable in the global settings</info>
	</data>
	<data name="MenuId.SelectedObjects.SewFaces">
		<label>Connect faces</label>
		<info>Connect all selected faces or shells. Faces are connected to shells or solids</info>
	</data>
	<data name="Progress.ImportDWG">
		<label>Reading file "{0}"</label>
	</data>
	<data name="Layer.DisplayOrder">
		<label>Z-index</label>
		<info>Index for the display sequence</info>
	</data>
	<data name="Layer.Transparency">
		<label>Transparency</label>
		<info>Transparency of the objects in this layer (0 to 255)</info>
	</data>
	<data name="Error.MakePath.Impossible">
		<label>No connected objects found</label>
	</data>
	<data name="Error.MakePath.Title">
		<label>Make path</label>
	</data>
	<data name="Language.Selected">
		<label>Language</label>
		<info>Select the language of the user interface. Some entries may change their language only after restarting the program.</info>
	</data>
	<data name="Symbols.UseReferences">
		<label>Insert symbols</label>
		<info>Insert symbols as block references or as clones</info>
	</data>
	<data name="Symbols.UseReferences.Values">
		<label>|Reference to block|Cloned block</label>
	</data>
	<data name="ModelView.ShowHiddenLines">
		<label>Display mode</label>
		<info>Select display mode</info>
	</data>
	<data name="ModelView.ShowHiddenLines.Values">
		<label>|Shading|Wires</label>
	</data>
	<data name="SphericalSurface">
		<label>Spherical Surface</label>
		<info>Properties of the spherical surface</info>
	</data>
	<data name="SphericalSurface.Center">
		<label>Center</label>
		<info>Center of the spherical surface</info>
	</data>
	<data name="SphericalSurface.Radius">
		<label>Radius</label>
		<info>Radius of the spherical surface</info>
	</data>
	<data name="Shell.Object">
		<label>Shell</label>
		<info>Properties of the shell (which is a composition of faces)</info>
	</data>
	<data name="PlanarSurface">
		<label>Planar surface</label>
		<info>Properties of the planar surface</info>
	</data>
	<data name="PlanarSurface.Location">
		<label>Location</label>
		<info>Location of the planar surface</info>
	</data>
	<data name="PlanarSurface.DirectionX">
		<label>X-axis</label>
		<info>Direction of the X-axis of the planar surface</info>
	</data>
	<data name="PlanarSurface.DirectionY">
		<label>Y-axis</label>
		<info>Direction of the Y-axis of the planar surface</info>
	</data>
	<data name="RuledSurface">
		<label>Ruled Surface</label>
		<info>Properties of the Ruled Surface</info>
	</data>
	<data name="CylindricalSurface">
		<label>Cylindrical surface</label>
		<info>Properties of the cylindrical surface</info>
	</data>
	<data name="CylindricalSurface.Location">
		<label>Axis point</label>
		<info>Point on the axis of the cylindrical surface</info>
	</data>
	<data name="CylindricalSurface.DirectionX">
		<label>X-axis</label>
		<info>X-axis of the cylindrical surface</info>
	</data>
	<data name="CylindricalSurface.DirectionY">
		<label>Y-axis</label>
		<info>Y-axis of the cylindrical surface</info>
	</data>
	<data name="CylindricalSurface.Radius">
		<label>Radius</label>
		<info>Radius of the cylindrical surface</info>
	</data>
	<data name="MenuId.Constr.Face.ObjectExtrude">
		<label>Extrude objects</label>
		<info>Extrude objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="MenuId.Constr.Face.SelectedObjectExtrude">
		<label>Extrude selected</label>
		<info>Extrude selected objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="Constr.Face.PathExtrude">
		<label>Extrude objects</label>
		<info>Extrude objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="Constr.Face.PathExtrude.Path">
		<label>Object</label>
		<info>Select object to extrude</info>
	</data>
	<data name="Constr.Face.PathExtrude.Vector">
		<label>Direction</label>
		<info>Direction for the extrusion</info>
	</data>
	<data name="Constr.Face.PathExtrude.Height">
		<label>Height</label>
		<info>Height or thickness of extrusion</info>
	</data>
	<data name="Constr.Face.PathExtrude.VectorOffset">
		<label>Offset direction</label>
		<info>Direction of an optional offset from the selected object</info>
	</data>
	<data name="Constr.Face.PathExtrude.HeightOffset">
		<label>Offset distance</label>
		<info>Distance of an optional offset from the selected object</info>
	</data>
	<data name="Constr.Face.PathExtrude.Plane">
		<label>Plane of extrusion</label>
		<info>Specify plane for extrusion, the extrusion will be perpendicular to the plane</info>
	</data>
	<data name="Constr.Face.PathExtrude.Plane.Values">
		<label>|Plane of object|Drawing plane</label>
	</data>
	<data name="Ruler">
		<label>Ruler</label>
		<info>Properties of a ruler</info>
	</data>
	<data name="Ruler.Show">
		<label>Show</label>
		<info>Show the ruler</info>
	</data>
	<data name="Ruler.Show.Values">
		<label>|Hide|Show</label>
	</data>
	<data name="MenuId.Constr.Face.ObjectRotate">
		<label>Rotate objects</label>
		<info>Rotate objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="MenuId.Constr.Face.SelectedObjectRotate">
		<label>Rotate objects</label>
		<info>Rotate selected objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="Constr.Face.PathRotate">
		<label>Rotate objects</label>
		<info>Rotate objects to build a face. Objects may be paths, curves or connected curves</info>
	</data>
	<data name="Constr.Face.PathRotate.Path">
		<label>Object</label>
		<info>Object to be rotated</info>
	</data>
	<data name="Constr.Face.PathRotate.AxisLine">
		<label>Axis</label>
		<info>Specify a line as the axis of rotation</info>
	</data>
	<data name="Constr.Face.PathRotate.AxisVector">
		<label>Axis direction</label>
		<info>Specify the direction of the axis of rotation</info>
	</data>
	<data name="Constr.Face.PathRotate.AxisPoint">
		<label>Axis point</label>
		<info>Specify a point on the axis of rotation</info>
	</data>
	<data name="Constr.Face.PathRotate.Angle">
		<label>Angle</label>
		<info>Specify a sweep angle for the rotation</info>
	</data>
	<data name="Constr.Face.PathRotate.AngleOffset">
		<label>Offset</label>
		<info>Offset for the sweep angle of the rotation</info>
	</data>
	<data name="MenuId.Constr.Ellipse.2PointsDirections">
		<label>Two points two directions</label>
		<info>Ellipse: to points on the circumference and the tangential direction at these two points</info>
	</data>
	<data name="Constr.Ellipse.2PointsDirections">
		<label>Ellipse: Two points two directions</label>
		<info>Ellipse: to points on the circumference and the tangential direction at these two points</info>
	</data>
	<data name="Constr.Ellipse.2PointsDirections.Point1">
		<label>1st point</label>
		<info>1st point on the circumference of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.2PointsDirections.Direction1">
		<label>1st direction</label>
		<info>Tangential direction of the circumference at the first point</info>
	</data>
	<data name="Constr.Ellipse.2PointsDirections.Point2">
		<label>2nd point</label>
		<info>1st point on the circumference of the ellipse</info>
	</data>
	<data name="Constr.Ellipse.2PointsDirections.Direction2">
		<label>2nd direction</label>
		<info>Tangential direction of the circumference at the second point</info>
	</data>
	<data name="MenuId.Constr.Ellipsearc.2PointsDirections">
		<label>Two points two directions</label>
		<info>Elliptical arc: to points on the circumference and the tangential direction at these two points</info>
	</data>
	<data name="Constr.Ellipsearc.2PointsDirections">
		<label>Elliptical arc: Two points two directions</label>
		<info>Elliptical arc: to points on the circumference and the tangential direction at these two points</info>
	</data>
	<data name="MenuId.View.Toolbars">
		<label>Toolbars</label>
		<info>Show or Hide Toolbars</info>
	</data>
	<data name="MenuId.View.Toolbars.Contexthelp">
		<label>Context Help</label>
		<info>Show help window in control center</info>
	</data>
	<data name="MenuId.Contexthelp.Hide">
		<label>Hide Context Help</label>
		<info>Hide help window in control center</info>
	</data>
	<data name="MenuId.Constr.Solid.FaceExtrude">
		<label>Extrude face</label>
		<info>Make a solid by extruding a face or a closed curve</info>
	</data>
	<data name="MenuId.Constr.Solid.SelectedFaceExtrude">
		<label>Extrude face</label>
		<info>Make a solid by extruding a selected face or a closed curve</info>
	</data>
	<data name="Constr.Solid.FaceExtrude">
		<label>Extrude face</label>
		<info>Make a solid by extruding a selected face or a closed curve</info>
	</data>
	<data name="Constr.Solid.FaceExtrude.Path">
		<label>Object</label>
		<info>Face or closed curve to be extruded. Alternative use " Inner point" to define a face (with holes).</info>
	</data>
	<data name="Constr.Solid.FaceExtrude.InnerPoint">
		<label>Inner point</label>
		<info>Inner point defines a face to be extruded. Similar to hatch, face can have holes.</info>
	</data>
	<data name="MenuId.Constr.Solid.FaceRotate">
		<label>Rotate face</label>
		<info>Make a solid by rotating a face or a closed curve</info>
	</data>
	<data name="MenuId.Constr.Solid.SelectedFaceRotate">
		<label>Rotate face</label>
		<info>Make a solid by rotating a selected face or a closed curve</info>
	</data>
	<data name="Constr.Solid.FaceRotate">
		<label>Rotate face</label>
		<info>Make a solid by rotating a face or a closed curve</info>
	</data>
	<data name="Constr.Solid.FaceRotate.Path">
		<label>Object</label>
		<info>Face or closed curve to be rotated. Alternative use " Inner point" to define a face (with holes).</info>
	</data>
	<data name="Constr.Solid.FaceExtrude.InnerPoint">
		<label>Inner point</label>
		<info>Inner point defines a face to be rotated. Similar to hatch, face can have holes.</info>
	</data>
	<data name="MenuId.Export">
		<label>Export</label>
		<info>Export project</info>
	</data>
	<data name="MenuId.Export.All">
		<label>Export formats</label>
		<info>Export project in various formats</info>
	</data>
	<data name="DxfDwg">
		<label>Export Settings</label>
		<info>Settings for export</info>
	</data>
	<data name="DxfDwg.Format">
		<label>DXF/DWG Format</label>
		<info>Select DXF/DWG export format</info>
	</data>
	<data name="DxfDwg.Format.Values">
		<label>|DWG|DXF|DXB</label>
	</data>
	<data name="DxfDwg.Version">
		<label>DXF/DWG Version</label>
		<info>Select DXF/DWG export version</info>
	</data>
	<data name="DxfDwg.Version.Values">
		<label>|2.5|2.6|9|10|11/12|13|14|2000|2004|2007</label>
	</data>
	<data name="DxfDwg.Text">
		<label>DXF/DWG Text</label>
		<info>Text Export</info>
	</data>
	<data name="DxfDwg.Text.Values">
		<label>|Fit|Original</label>
	</data>
	<data name="DxfDwg.ImportDimension">
		<label>Import Dimension</label>
		<info>Way of import of DXF/DWG Dimension</info>
	</data>
	<data name="DxfDwg.ImportDimension.Values">
		<label>|As Block|As Dimension</label>
	</data>
	<data name="DxfDwg.ExportDimension">
		<label>Export Dimension</label>
		<info>Way of export of DXF/DWG Dimension</info>
	</data>
	<data name="DxfDwg.ExportDimension.Values">
		<label>|As Block|As Dimension</label>
	</data>
	<data name="MenuId.Export.Settings">
		<label>Settings export formats</label>
		<info>Select export format versions</info>
	</data>
	<data name="Face.Edge">
		<label>Edges</label>
		<info>Edges as three-dimensional curves (may not be modified)</info>
	</data>
	<data name="MenuId.Constr.Solid.SelectedRuledSolid">
		<label>Ruled solid</label>
		<info>Make a ruled solid out of two selected closed curves</info>
	</data>
	<data name="MenuId.Constr.Solid.RuledSolid">
		<label>Ruled solid</label>
		<info>Make a ruled solid out of two closed curves</info>
	</data>
	<data name="Constr.Solid.RuledSolid">
		<label>Ruled solid</label>
		<info>Make a ruled solid out of two closed curves</info>
	</data>
	<data name="Constr.Solid.RuledSolid.Path1">
		<label>1st path</label>
		<info>Objects for the first path. may be a circle, an ellipse, a closed path or a face</info>
	</data>
	<data name="Constr.Solid.RuledSolid.Path2">
		<label>2nd path</label>
		<info>Objects for the second path. may be a circle, an ellipse, a closed path or a face</info>
	</data>
	<data name="Constr.Solid.SolidInsertMode">
		<label>Insertion mode</label>
		<info>Mode which determines the operation that is applied when a solid is inserted into the model</info>
	</data>
	<data name="Constr.Solid.SolidInsertMode.Values">
		<label>|Unite|Subtract|Insert</label>
	</data>
	<data name="MenuId.Constr.Face">
		<label>Faces</label>
		<info>Various methods for the construction of faces</info>
	</data>
	<data name="MenuId.Constr.Solid">
		<label>Solids</label>
		<info>Various methods for the construction of solids</info>
	</data>
	<data name="MenuId.ConstrSelected.Face">
		<label>Faces</label>
		<info>Various methods for the construction of faces</info>
	</data>
	<data name="MenuId.ConstrSelected.Solid">
		<label>Solids</label>
		<info>Various methods for the construction of solids</info>
	</data>
	<data name="MenuId.ConstrToolbar.Solid">
		<label>Solids</label>
		<info>Various methods for the construction of solids</info>
	</data>
	<data name="MenuId.Constr.Solid.ModifyMode">
		<label>Mode</label>
		<info>Handling of overlapping solids</info>
	</data>
	<data name="MenuId.Constr.Solid.ModifyMode.Unite">
		<label>Unite</label>
		<info>Unite overlapping solids</info>
	</data>
	<data name="MenuId.Constr.Solid.ModifyMode.Subtract">
		<label>Subtract</label>
		<info>Subtract new solid from the solids already in the model</info>
	</data>
	<data name="MenuId.Object.Arrange">
		<label>Arrange</label>
		<info>Arrange selected objects. The last selected object is used as a reference</info>
	</data>
	<data name="MenuId.PlaneIntersection">
		<label>Planar intersection</label>
		<info>Planar intersection of solids, shells and faces</info>
	</data>
	<data name="Constr.PlaneIntersection">
		<label>Planar intersection</label>
		<info>Planar intersection of solids, shells and faces</info>
	</data>
	<data name="Constr.Plane">
		<label>Plane</label>
		<info>Define the plane for the planar intersection</info>
	</data>
	<data name="MenuId.Plane.2PointsDrawingPlane">
		<label>Perpendicular, two points</label>
		<info>Define a plane, which is perpendicular to the drawing plane and contains two points</info>
	</data>
	<data name="Construct.Plane.2PointsDrawingPlane">
		<label>Perpendicular, two points</label>
		<info>Define a plane, which is perpendicular to the drawing plane and contains two points</info>
	</data>
	<data name="Construct.Plane.2PointsDrawingPlane.Point2">
		<label>Point of direction</label>
		<info>Point of direction for the perpendicular plane</info>
	</data>
	<data name="MenuId.Plane.OriginNormalPoint">
		<label>Location and normal</label>
		<info>Define a plane by a location and a normal vector</info>
	</data>
	<data name="Construct.Plane.OriginNormalPoint">
		<label>Location and normal</label>
		<info>Define a plane by a location and a normal vector</info>
	</data>
	<data name="Construct.Plane.OriginNormalPoint.NormalPoint">
		<label>Normal vector</label>
		<info>Normal vector from the location to this point</info>
	</data>
	<data name="Construct.Plane.3Points">
		<label>By three points</label>
		<info>Define a plane by three points. The first point is the location, the X-axis goes from the first to the second point</info>
	</data>
	<data name="Constr.Face.PathExtrude.SeparatorHeight">
		<label>Height of extrusion</label>
		<info>Height of extrusion perpendicular to the extrusion plane. You can also specify an extrusion vector or curve</info>
	</data>
	<data name="Constr.Face.PathExtrude.SeparatorVector">
		<label>Direction of extrusion</label>
		<info>Direction of extrusion. You can also specify the height of extrusion or an extrusion curve</info>
	</data>
	<data name="Constr.Face.PathExtrude.SeparatorPipe">
		<label>Curve of extrusion</label>
		<info>Curve of extrusion. You can also specify the height of extrusion or an extrusion vector</info>
	</data>
	<data name="Constr.Face.PathExtrude.SeparatorInsert">
		<label>Insertion mode</label>
		<info>Specify the behavior of the system when the constructed solid overlaps with existing solids</info>
	</data>
	<data name="Constr.Face.PathExtrude.Pipe">
		<label>Extrusion path</label>
		<info>Specify path or curve of extrusion</info>
	</data>
	<data name="MenuId.Constr.Solid.Fuse">
		<label>Unite</label>
		<info>Unite or fuse all selected solids that overlap</info>
	</data>
	<data name="MenuId.Constr.Solid.ShellToSolid">
		<label>Shell to Solid</label>
		<info>Make a Solid out of the Shell with no open edges</info>
	</data>
	<data name="MenuId.Constr.Solid.Intersect">
		<label>Intersect</label>
		<info>Replace selected solids by their intersection</info>
	</data>
	<data name="MenuId.Constr.Solid.Difference">
		<label>Difference</label>
		<info>Remove 2nd selected solid from 1st selected solid</info>
	</data>
	<data name="Constr.Rotate.AxisLine">
		<label>Axis of rotation</label>
		<info>Specify the axis of rotation for 3dimensional rotation</info>
	</data>
	<data name="MenuId.Constr.Face.FromObject">
		<label>Face from object</label>
		<info>Single or connected curves or a path will be converted to a planar face</info>
	</data>
	<data name="MenuId.Constr.Face.FromSelectedObject">
		<label>Face from object</label>
		<info>Selected curves or a paths will be converted to a planar face</info>
	</data>
	<data name="Constr.Face.FromObject">
		<label>Face from object</label>
		<info>Single or connected curves or a path will be converted to a planar face</info>
	</data>
	<data name="Constr.Face.FromObject.Object">
		<label>Curve</label>
		<info>Specify a path, polyline or connected curves, must be closed</info>
	</data>
	<data name="Constr.Face.FromObject.InnerPoint">
		<label>Inner point</label>
		<info>Inner point defines a face (with holes) similar to hatch.</info>
	</data>
	<data name="MenuId.SelectedObjects.Mode">
		<label>Select Mode</label>
		<info>Change select mode</info>
	</data>
	<data name="MenuId.SelectedObjects.Mode.All">
		<label>Normal (all objects)</label>
		<info>All kinds of objects may be selected (normal mode)</info>
	</data>
	<data name="MenuId.SelectedObjects.Mode.FacesOnly">
		<label>Faces only</label>
		<info>Only faces may be selected, these faces may be part of a shell or a solid</info>
	</data>
	<data name="MenuId.SelectedObjects.Mode.EdgesOnly">
		<label>Edges only</label>
		<info>Only edges may be selected, these edges may be part of a face, shell or a solid</info>
	</data>
	<data name="ConstructAequidist.SharpCornerMinAngle">
		<label>Sharp corners from</label>
		<info>All connection angles greater then this generate sharp corners (0°: only sharp corners, 180°: no sharp corners)</info>
	</data>
	<data name="Constr.SplitCurve.Mode.Values">
		<label>|Percentage|Length</label>
	</data>
	<data name="Constr.SplitCurve.Curve">
		<label>Split curve</label>
		<info>Split curve into two or more segments</info>
	</data>
	<data name="Constr.SplitCurve.Count">
		<label>Number</label>
		<info>Number of segments</info>
	</data>
	<data name="Constr.SplitCurve.Mode">
		<label>Mode</label>
		<info>Mode of splitting</info>
	</data>
	<data name="MenuId.CurveSplit">
		<label>Split</label>
		<info>Split into two or more segments</info>
	</data>
	<data name="Constr.SplitCurve.Distances">
		<label>Segment lengths</label>
		<info>Length of the segments</info>
	</data>
	<data name="Constr.SplitCurve.Distance">
		<label>{0:##}. segment</label>
		<info>Length of the segment</info>
	</data>
	<data name="Constr.SplitCurve">
		<label>Split curve</label>
		<info>Split curve into two or more segments</info>
	</data>
	<data name="File.IGES.Filter">
		<label>IGES files (*.iges)|*.iges;*.igs</label>
	</data>
	<data name="File.All.Filter">
		<label>All files (*.*)|*.*</label>
	</data>
	<data name="File.Condor4Filter">
		<label>Condor 4.x files (*.drw)|*.drw</label>
	</data>
	<data name="File.Dxf.Filter">
		<label>DXF files (*.dxf)|*.dxf</label>
	</data>
	<data name="File.Dwg.Filter">
		<label>DWG files (*.dwg)|*.dwg</label>
	</data>
	<data name="File.Dxb.Filter">
		<label>DXB files (*.dxb)|*.dxb</label>
	</data>
	<data name="File.STEP.Filter">
		<label>STEP files (*.step,*.stp)|*.step;*.stp</label>
	</data>
	<data name="File.BREP.Filter">
		<label>BREP files (*.brep)|*.brep</label>
	</data>
	<data name="File.CADability.Filter.cdb">
		<label>CADability files (*.cdb)|*.cdb</label>
	</data>
	<data name="File.CADability.Filter.json">
		<label>CADability files (*.cdb.json)|*.cdb.json</label>
	</data>
	<data name="File.CADability.Filter">
		<label>CADability files (*.cdb,*.cdb.json)|*.cdb;*.cdb.json</label>
	</data>
	<data name="File.Symbolfiles.Filter">
		<label>CADability files (*.cdb,*.cdb.json)|*.cdb;*.cdb.json</label>
	</data>
	<data name="File.SAT.Filter">
		<label>ACIS files (*.sat)|*.sat</label>
	</data>
	<data name="File.XT.Filter">
		<label>Parasolid files (*.x_t)|*.x_t</label>
	</data>
	<data name="File.VRML.Filter">
		<label>VRML files (*.wrl)|*.wrl</label>
	</data>
	<data name="File.STL.Filter">
		<label>STL files (*.stl)|*.stl;*.stla;*.stlb</label>
	</data>
	<data name="Select.FrameColor">
		<label>Frame color</label>
		<info>Color of the selection frame (if enabled)</info>
	</data>
	<data name="Select.HandleColor">
		<label>Hotspot color</label>
		<info>Color of the hotspots or handles where selected objects may be manipulated</info>
	</data>
	<data name="Select.SelectColor">
		<label>Select color</label>
		<info>Color of the surrounding of the selected objects</info>
	</data>
	<data name="Select.FocusColor">
		<label>Focus color</label>
		<info>Color of the selected object that has the focus in the Control-Center</info>
	</data>
	<data name="Select.SelectWidth">
		<label>Selection width</label>
		<info>Width of the surrounding of the selected objects, 0: fast selection without rim</info>
	</data>
	<data name="Select.SelectTransparency">
		<label>Transparency</label>
		<info>Transparency of selected objects (1 to 255)</info>
	</data>
	<data name="Select.DragWidth">
		<label>Drag distance</label>
		<info>Mouse moving distance in pixel to start "Drag And Drop" action (to prevent unintended movements)</info>
	</data>
	<data name="Select.PickRadius">
		<label>Pickradius</label>
		<info>Maximum allowed distance for an object from the cursor to be selected.</info>
	</data>
	<data name="Constr.Line.Tangent.Position">
		<label>Position</label>
		<info>The position of the tangent point on the line (start point or middle)</info>
	</data>
	<data name="Constr.Line.Tangent.Position.Values">
		<label>|Middle|Start point</label>
	</data>
	<data name="MenuId.Fillet">
		<label>Fillet</label>
		<info>Make a fillet on edges of a shell or a solid</info>
	</data>
	<data name="MenuId.Chamfer">
		<label>Chamfer</label>
		<info>Make a chamfer on edges of a shell or a solid</info>
	</data>
	<data name="Constr.Fillet">
		<label>Fillet</label>
		<info>Make a fillet on edges of a shell or a solid</info>
	</data>
	<data name="Constr.Fillet.Edges">
		<label>Edges</label>
		<info>Click the edges to be replaced by a fillet</info>
	</data>
	<data name="Constr.Fillet.Faces">
		<label>Face-Edges</label>
		<info>Click a face for all its touched edges to be replaced by a fillet</info>
	</data>
	<data name="Constr.Fillet.Faces">
		<label>Solid-Edges</label>
		<info>Click a shell or solid for all its edges with common faces to be replaced by a fillet</info>
	</data>
	<data name="Constr.Fillet.Radius">
		<label>Radius</label>
		<info>Radius of the fillet</info>
	</data>
	<data name="Constr.Chamfer">
		<label>Chamfer</label>
		<info>Make a chamfer on edges of a shell or a solid</info>
	</data>
	<data name="Constr.Chamfer.Face">
		<label>Reference face</label>
		<info>Chamfer all or some edges of this face</info>
	</data>
	<data name="Constr.Chamfer.Edges">
		<label>Edges</label>
		<info>Click the edges to be replaced by a chamfer</info>
	</data>
	<data name="Constr.Chamfer.Dist1">
		<label>Distance 1</label>
		<info>Distance on the reference face</info>
	</data>
	<data name="Constr.Chamfer.Dist2">
		<label>Distance 2</label>
		<info>Distance on the other face</info>
	</data>
	<data name="Error.FileNotFound">
		<label>File "{0}" not found</label>
	</data>
	<data name="MenuId.ViewPoint">
		<label>View direction</label>
		<info>Set the view direction</info>
	</data>
	<data name="MenuId.ViewFixPoint">
		<label>View Fixed Point</label>
		<info>Specify fixed point for the view. The view rotates around this point.</info>
	</data>
	<data name="MenuId.Scroll">
		<label>Scroll</label>
		<info>Scroll the view</info>
	</data>
	<data name="MenuId.Zoom">
		<label>Zoom</label>
		<info>Scale the view</info>
	</data>
	<data name="MenuId.ZAxisUp">
		<label>Z-axis always up</label>
		<info>Z-axis should always point up</info>
	</data>
	<data name="MenuId.Projection.Direction">
		<label>Orthogonal view direction</label>
		<info>Choose a orthogonal view direction</info>
	</data>
	<data name="MenuId.Projection.Direction.FromTop">
		<label>From top</label>
		<info>View from top</info>
	</data>
	<data name="MenuId.Projection.Direction.FromFront">
		<label>From front</label>
		<info>View from front</info>
	</data>
	<data name="MenuId.Projection.Direction.FromBack">
		<label>From back</label>
		<info>View from back</info>
	</data>
	<data name="MenuId.Projection.Direction.FromLeft">
		<label>From left</label>
		<info>View from left</info>
	</data>
	<data name="MenuId.Projection.Direction.FromRight">
		<label>From right</label>
		<info>View from right</info>
	</data>
	<data name="MenuId.Projection.Direction.FromBottom">
		<label>From bottom</label>
		<info>View from bottom</info>
	</data>
	<data name="MenuId.Projection.Direction.Orthogonal">
		<label>Orthogonal (Drawingplane)</label>
		<info>Perpendicular to the drawing plane</info>
	</data>
	<data name="MenuId.Construct.Finish">
		<label>Finish</label>
		<info>Finish this construction</info>
	</data>
	<data name="MenuId.Construct.Abort">
		<label>Abort</label>
		<info>Abort this construction</info>
	</data>
	<data name="Construct.Solution">
		<label>Solution {0}</label>
	</data>
	<data name="Projection.Default">
		<label>|Top|Right|Front|Perspective</label>
	</data>
	<data name="Language.ChangeMessage">
		<label>Not all items will change their language immediately. Restart the program for correct display.</label>
	</data>
	<data name="Shortcut.Ctrl">
		<label>Ctrl</label>
	</data>
	<data name="Shortcut.Shift">
		<label>Shift</label>
	</data>
	<data name="Shortcut.Alt">
		<label>Alt</label>
	</data>
	<data name="Shortcut.Setting">
		<label>Shortcuts</label>
		<info>Define shortcuts for the menus</info>
	</data>
	<data name="Shortcut.MainMenu">
		<label>Main menu</label>
		<info>All entries of the main menu</info>
	</data>
	<data name="Shortcut.ContextMenu">
		<label>Context menus</label>
		<info>All entries of the context menus</info>
	</data>
	<data name="MenuId.SelectedObjects">
		<label>Selected Objects</label>
		<info>Various methods to manipulate the selected objects</info>
	</data>
	<data name="MenuId.DrawingPlane">
		<label>Drawing Plane</label>
		<info>Functions to define the drawing plane</info>
	</data>
	<data name="MenuId.IntersectionPlane">
		<label>Intersection Plane</label>
		<info>Functions to define the intersection plane</info>
	</data>
	<data name="MenuId.Angle">
		<label>Angle Input</label>
		<info>Various methods to define angles</info>
	</data>
	<data name="MenuId.Point">
		<label>Point Input</label>
		<info>Various methods to define points or coordinates</info>
	</data>
	<data name="MenuId.IndexedPoint">
		<label>Multiple Point Input</label>
		<info>Various methods to define multiple points or coordinates</info>
	</data>
	<data name="MenuId.Vector">
		<label>Vector Input</label>
		<info>Various methods to define multiple vectors or directions</info>
	</data>
	<data name="MenuId.Length">
		<label>Length Input</label>
		<info>Various methods to define multiple lengths or distances</info>
	</data>
	<data name="MenuId.SelectedObject">
		<label>Selected Object</label>
		<info>How to proceed with the selected object</info>
	</data>
	<data name="Solid.NamedObject">
		<label>Solid ({0})</label>
	</data>
	<data name="Select.Style">
		<label>Style</label>
		<info>Style of the selected objects. Changing the style affects all selected objects</info>
	</data>
	<data name="HatchStyleLines.MarginOffset">
		<label>Margin</label>
		<info>Margin offset, distance between bounding curves and hatch lines</info>
	</data>
	<data name="Solid.Volume">
		<label>Volume</label>
		<info>Volume of the solid</info>
	</data>
	<data name="SurfaceOfLinearExtrusion">
		<label>Linear extrusion</label>
		<info>Surface of linear extrusion</info>
	</data>
	<data name="SurfaceOfRevolution">
		<label>Revolution</label>
		<info>Surface of revolution</info>
	</data>
	<data name="ConicalSurface">
		<label>Conical surface</label>
		<info>Conical surface</info>
	</data>
	<data name="ConicalSurface.Location">
		<label>Axis point</label>
		<info>Point on the axis</info>
	</data>
	<data name="ConicalSurface.DirectionX">
		<label>X-Axis</label>
		<info>Direction for the x-axis of the conical surface</info>
	</data>
	<data name="ConicalSurface.DirectionY">
		<label>Y-Axis</label>
		<info>Direction for the y-axis of the conical surface</info>
	</data>
	<data name="ConicalSurface.OpeningAngle">
		<label>Opening angle</label>
		<info>Opening Angle of the conical surface</info>
	</data>
	<data name="MenuId.Constr.Face.SelectedRuledFace">
		<label>Ruled face</label>
		<info>Make a ruled face out of two selected curves</info>
	</data>
	<data name="MenuId.Constr.Face.RuledFace">
		<label>Ruled face</label>
		<info>Make a ruled face out of two curves</info>
	</data>
	<data name="Constr.Face.RuledFace">
		<label>Ruled face</label>
		<info>Make a ruled face out of two curves</info>
	</data>
	<data name="Constr.Face.RuledFace.Path1">
		<label>1st path</label>
		<info>Objects for the first path. may be a circle, an ellipse, a path</info>
	</data>
	<data name="Constr.Face.RuledFace.Path2">
		<label>2nd path</label>
		<info>Objects for the second path. may be a circle, an ellipse, a path</info>
	</data>
	<data name="ToroidalSurface">
		<label>Toroidal Surface</label>
		<info>Properties of the toroidal surface</info>
	</data>
	<data name="ToroidalSurface.Location">
		<label>Center</label>
		<info>Center of the toroidal surface</info>
	</data>
	<data name="ToroidalSurface.DirectionX">
		<label>X-Axis</label>
		<info>Direction for the x-axis of the toroidal surface</info>
	</data>
	<data name="ToroidalSurface.DirectionY">
		<label>Y-Axis</label>
		<info>Direction for the y-axis of the toroidal surface</info>
	</data>
	<data name="ToroidalSurface.MajorRadius">
		<label>Orbit Radius</label>
		<info>Orbit radius of the toroidal surface</info>
	</data>
	<data name="ToroidalSurface.MinorRadius">
		<label>Ring Radius</label>
		<info>Ring radius of the toroidal surface</info>
	</data>
	<data name="NurbsSurface">
		<label>Nurbs surface</label>
		<info>Nurbs surface</info>
	</data>
	<data name="Path">
		<label>Paths</label>
		<info>Details for the path generation</info>
	</data>
	<data name="Path.MaxGap">
		<label>Max. Gap</label>
		<info>Maximum gap distance which is accepted when creating a path</info>
	</data>
	<data name="MenuId.Outline">
		<label>To outline</label>
		<info>Changes text into its outline</info>
	</data>
	<data name="ReadFile.Progress">
		<label>Reading file "{0}"</label>
	</data>
	<data name="MenuId.Projection.Direction.Isometric">
		<label>Isometric</label>
		<info>Isometric view (from right, back, top)</info>
	</data>
	<data name="MenuId.Constr.3DObjects">
		<label>3D Objects</label>
		<info>Construction of 3D objects</info>
	</data>
	<data name="MenuId.Constr.Box">
		<label>Box</label>
		<info>Construction of a box with length, width, height or alternative directions</info>
	</data>
	<data name="Constr.Box">
		<label>Box</label>
		<info>Construction of a box with length, width, height or alternative directions</info>
	</data>
	<data name="Constr.Box.StartPoint">
		<label>Start point</label>
		<info>Construction of the start point of the box. All lengths and directions refer to this point.</info>
	</data>
	<data name="Constr.Box.SeparatorLengths">
		<label>Box lengths</label>
		<info>Construction of the lengths of the box (referring to start point). Optional: Select free directions.</info>
	</data>
	<data name="Constr.Box.Length">
		<label>Length</label>
		<info>Construction of the length (x-Axis) of the box (referring to start point). Optional: Select free X-direction.</info>
	</data>
	<data name="Constr.Box.Width">
		<label>Width</label>
		<info>Construction of the width (y-Axis) of the box (referring to start point). Optional: Select free Y-direction.</info>
	</data>
	<data name="Constr.Box.Height">
		<label>Height</label>
		<info>Construction of the height (z-Axis) of the box (referring to start point). Optional: Select free Z-direction.</info>
	</data>
	<data name="Constr.Box.SeparatorDirections">
		<label>Box directions</label>
		<info>Construction of the directions (and lengths) of the box. The directions refer to the start point of the box.</info>
	</data>
	<data name="Constr.Box.X-Direction">
		<label>X-Direction</label>
		<info>Construction of the X-Axis direction of the box. The direction refers to the start point of the box.</info>
	</data>
	<data name="Constr.Box.Y-Direction">
		<label>Y-Direction</label>
		<info>Construction of the Y-Axis direction of the box. The direction refers to the start point of the box.</info>
	</data>
	<data name="Constr.Box.Z-Direction">
		<label>Z-Direction</label>
		<info>Construction of the Z-Axis direction of the box. The direction refers to the start point of the box.</info>
	</data>
	<data name="MenuId.Constr.Cylinder">
		<label>Cylinder</label>
		<info>Construction of a cylinder with axis and radius or radius and height</info>
	</data>
	<data name="Constr.Cylinder">
		<label>Cylinder</label>
		<info>Construction of a cylinder with axis and radius or radius and height</info>
	</data>
	<data name="Constr.Cylinder.StartPoint">
		<label>Center point</label>
		<info>Construction of the center point of the cylinder. Axis direction, radius and height refer to this point.</info>
	</data>
	<data name="Constr.Cylinder.EndPoint">
		<label>Axis point</label>
		<info>Construction of the axis point for direction and height of the cylinder. Alternative: Construct radius for cylinder upright on drawing plane. Optional: Please define differing height.</info>
	</data>
	<data name="Constr.Cylinder.Radius">
		<label>Radius</label>
		<info>Construction of the cylinder-radius (referring to the cylinder-axis).</info>
	</data>
	<data name="Constr.Cylinder.Height">
		<label>Height</label>
		<info>Construction of the cylinder height (z-axis), referring to the cylinder center point.</info>
	</data>
	<data name="MenuId.Constr.Cone">
		<label>Cone</label>
		<info>Construction of a cone with axis and radii or radius and height</info>
	</data>
	<data name="Constr.Cone">
		<label>Cone</label>
		<info>Construction of a cone with axis and radii or radius and height</info>
	</data>
	<data name="Constr.Cone.StartPoint">
		<label>Center point</label>
		<info>Construction of the center point of the cone. Axis direction, 1. radius and height refer to this point.</info>
	</data>
	<data name="Constr.Cone.EndPoint">
		<label>Axis point</label>
		<info>Construction of the axis point for direction and height of the cone. Alternative: Construct a radius for cylinder upright on drawing plane. Optional: Please define differing height.</info>
	</data>
	<data name="Constr.Cone.Radius1">
		<label>1. radius</label>
		<info>Construction of the first cylinder-radius (referring to the cylinder-axis).</info>
	</data>
	<data name="Constr.Cone.Radius2">
		<label>2. radius</label>
		<info>Construction of the second cylinder-radius (referring to the cylinder-axis). May be zero</info>
	</data>
	<data name="Constr.Cone.Height">
		<label>Height</label>
		<info>Construction of the cone height (z-axis), referring to the cone center point.</info>
	</data>
	<data name="MenuId.Constr.Sphere">
		<label>Sphere</label>
		<info>Construction of a sphere with center and radius</info>
	</data>
	<data name="Constr.Sphere">
		<label>Sphere</label>
		<info>Construction of a sphere with center and radius</info>
	</data>
	<data name="Constr.Sphere.Center">
		<label>Center point</label>
		<info>Construction of the center point of the sphere. The radius refers to this point.</info>
	</data>
	<data name="Constr.Sphere.Radius">
		<label>Radius</label>
		<info>Construction of the sphere radius (referring to the center).</info>
	</data>
	<data name="MenuId.Constr.Torus">
		<label>Torus</label>
		<info>Construction of a torus with center, orbit radius and ring radius. Optional differing axis by definition of axis point.</info>
	</data>
	<data name="Constr.Torus">
		<label>Torus</label>
		<info>Construction of a torus with center, orbit radius and ring radius. Optional differing axis by definition of axis point.</info>
	</data>
	<data name="Constr.Torus.Center">
		<label>Center point</label>
		<info>Construction of the center point of the torus. Orbit radius and axis direction refer to this point.</info>
	</data>
	<data name="Constr.Torus.EndPoint">
		<label>Axis point</label>
		<info>Construction of the axis point for axis direction  of the torus. Without this optional input: Torus upright on drawing plane.</info>
	</data>
	<data name="Constr.Torus.Radius1">
		<label>Orbit radius</label>
		<info>Construction of the orbit radius (referring to the torus-axis).</info>
	</data>
	<data name="Constr.Torus.Radius2">
		<label>Ring radius</label>
		<info>Construction of the ring radius (referring to the orbit radius).</info>
	</data>
	<data name="HatchStyleContour.CounterClock">
		<label>Orientation</label>
		<info>Orientation of the curves</info>
	</data>
	<data name="HatchStyleContour.CounterClock.Values">
		<label>|Counterclockwise|Clockwise</label>
	</data>
	<data name="HatchStyleContour.Inbound">
		<label>Direction</label>
		<info>Direction of the curves</info>
	</data>
	<data name="HatchStyleContour.Inbound.Values">
		<label>|Inbound|Outbound</label>
	</data>
	<data name="HatchStyleLines.OffsetNumber">
		<label>Number of steps</label>
		<info>Number of hatches with different angles</info>
	</data>
	<data name="HatchStyleLines.Offset">
		<label>Step angle</label>
		<info>Step angle for multiple hatches</info>
	</data>
	<data name="HatchStyleLines.Alternate">
		<label>Alternating</label>
		<info>Alternating the direction of adjacent lines</info>
	</data>
	<data name="HatchStyleLines.Alternate.Values">
		<label>|Alternating direction|Same direction</label>
	</data>
	<data name="MenuId.DrawingPlane.Tangential">
		<label>Plane in Model</label>
		<info>Select a planar face in the model</info>
	</data>
	<data name="MenuId.DrawingPlane.Show">
		<label>Show</label>
		<info>Show the drawing plane</info>
	</data>
	<data name="Construct.Plane.Tangential">
		<label>Plane in model</label>
		<info>Select a planar face in the model</info>
	</data>
	<data name="Construct.Plane.Tangential.Face">
		<label>Planar surface</label>
		<info>Select a planar face in the model</info>
	</data>
	<data name="General.Curve">
		<label>General Curve</label>
		<info>General curve without modifiable properties</info>
	</data>
	<data name="DriveList.NewLinearDriveName">
		<label>Linear</label>
	</data>
	<data name="DriveList.NewDualcurveDriveName">
		<label>Coupled curves</label>
	</data>
	<data name="AnimatedView">
		<label>Animated View</label>
		<info>Display of an animated view with the facility to define drives and programs</info>
	</data>
	<data name="DriveList">
		<label>Drives</label>
		<info>List of all drives for the animation</info>
	</data>
	<data name="CurveDrive">
		<label>Curve Drive</label>
		<info>Drive along a curve (linear or curved)</info>
	</data>
	<data name="CurveDrive.Curve">
		<label>Curve</label>
		<info>Curve for the drive, drag a curve onto this area</info>
	</data>
	<data name="MenuId.AnimatedView.Show">
		<label>Show</label>
		<info>Show this animated view</info>
	</data>
	<data name="MenuId.AnimatedView.Start">
		<label>Start</label>
		<info>Start the animation using the current program</info>
	</data>
	<data name="MenuId.AnimatedView.Stop">
		<label>Stop</label>
		<info>Stop this animation</info>
	</data>
	<data name="MenuId.DriveList.NewLinear">
		<label>New Curve Drive</label>
		<info>Define a new linear or curve drive</info>
	</data>
	<data name="MenuId.DriveList.NewAxis">
		<label>New Axis Drive</label>
		<info>Define a new axis drive (rotation)</info>
	</data>
	<data name="MenuId.DriveList.NewDualcurve">
		<label>New coupled curves</label>
		<info>Define new coupled curves</info>
	</data>
	<data name="MenuId.CurveDrive.Remove">
		<label>Remove</label>
		<info>Remove this drive</info>
	</data>
	<data name="MenuId.CurveDrive.Rename">
		<label>Rename</label>
		<info>Rename this drive</info>
	</data>
	<data name="Drive.NullPosition">
		<label>Starting position</label>
		<info>Position of the object at the beginning (when defined)</info>
	</data>
	<data name="Drive.MovedObjects">
		<label>Moved Objects</label>
		<info>List of the moved objects. Drag any object to be move onto this area</info>
	</data>
	<data name="CurveDrive.Independent">
		<label>- Not moved -</label>
	</data>
	<data name="CurveDrive.DependsOn">
		<label>Moved by</label>
		<info>This drive is moved by another drive (if specified)</info>
	</data>
	<data name="Position.Drive">
		<label>Drive</label>
		<info>For this drive</info>
	</data>
	<data name="Drive.Time">
		<label>Point of Time</label>
		<info>Point of Time of this entry</info>
	</data>
	<data name="Drive.Position">
		<label>Position</label>
		<info>Position of this entry</info>
	</data>
	<data name="Schedule">
		<label>Program</label>
		<info>Program, schedule or timetable</info>
	</data>
	<data name="MenuId.DrivePosition.Remove">
		<label>Remove</label>
		<info>Remove this entry</info>
	</data>
	<data name="MenuId.Schedule.NewPosition">
		<label>New Entry</label>
		<info>Define a new entry for this program or schedule</info>
	</data>
	<data name="MenuId.Schedule.Sort">
		<label>Sort</label>
		<info>Sort the entries according to drive and time</info>
	</data>
	<data name="Drive.Position.Undefined">
		<label>- Undefined -</label>
	</data>
	<data name="Schedule.List">
		<label>Programs</label>
		<info>All programs or schedules of this model, chose an active program</info>
	</data>
	<data name="ScheduleList.NewScheduleName">
		<label>Program</label>
	</data>
	<data name="AnimatedView.VisibleLayers">
		<label>Visible Layers</label>
		<info>Define the visible layers</info>
	</data>
	<data name="Error.Schedules.NoActiveSchedule">
		<label>There is no active program</label>
	</data>
	<data name="Errormessage.Title.Schedules">
		<label>Programs</label>
	</data>
	<data name="MenuId.Schedule.MakeCurrent">
		<label>Active Program</label>
		<info>Make this program the active program</info>
	</data>
	<data name="MenuId.Schedule.Remove">
		<label>Remove</label>
		<info>Remove this program</info>
	</data>
	<data name="MenuId.ScheduleList.NewSchedule">
		<label>New Program</label>
		<info>Define a new program or schedule</info>
	</data>
	<data name="CurveDrive.Tangential">
		<label>Tangential</label>
		<info>Objects will be moved tangential to the curve</info>
	</data>
	<data name="CurveDrive.Tangential.Values">
		<label>|Tangential|Fixed</label>
	</data>
	<data name="Font.DisplayMode">
		<label>Display Mode</label>
		<info>Choose display mode</info>
	</data>
	<data name="Font.DisplayMode.Values">
		<label>|Solid|Outline</label>
	</data>
	<data name="Font.Precision">
		<label>Precision</label>
		<info>Choose precision</info>
	</data>
	<data name="Font.Precision.Values">
		<label>|Raw|Medium|Smooth</label>
	</data>
	<data name="Font">
		<label>Font Display</label>
		<info>Settings for the display of text fonts</info>
	</data>
	<data name="Error.HatchObjects.Impossible">
		<label>No connected outline found for filling</label>
	</data>
	<data name="Error.HatchObjects.Title">
		<label>Hatch</label>
	</data>
	<data name="ModelView.Projection.Distance">
		<label>Distance</label>
		<info>Distance of the viewpoint to the fixpoint of the view (0.0: orthogonal projection)</info>
	</data>
	<data name="MenuId.Projection.Direction.Perspective">
		<label>Perspective</label>
		<info>Perspective projection (central projection)</info>
	</data>
	<data name="ViewFixPoint.Point">
		<label>View Fixed Point</label>
		<info>Specify fixed point for the view. The view rotates around this point.</info>
	</data>
	<data name="Construct.DirectionOfSurface">
		<label>Direction of a surface</label>
		<info>Direction of a point on a surface, optionally select point and orientation</info>
	</data>
	<data name="Construct.DirectionOfSurface.Object">
		<label>Surface</label>
		<info>Selection of the surface point, that defines the direction</info>
	</data>
	<data name="Construct.DirectionOfSurface.DirOffset">
		<label>Reverse</label>
		<info>Selection of the orientation of the surface direction</info>
	</data>
	<data name="Construct.DirectionOfSurface.DirOffset.Values">
		<label>|Original|Reverse</label>
	</data>
	<data name="GeneralCurve.StartPoint">
		<label>Start point</label>
		<info>Start point of the curve</info>
	</data>
	<data name="GeneralCurve.EndPoint">
		<label>End point</label>
		<info>End point of the curve</info>
	</data>
	<data name="Face.Description">
		<label>Face</label>
	</data>
	<data name="Printing">
		<label>Printing</label>
		<info>Printing settings</info>
	</data>
	<data name="Printing.Mode">
		<label>Way of printing</label>
		<info>Select way of printing</info>
	</data>
	<data name="Printing.Mode.Values">
		<label>|OpenGL|GDI</label>
	</data>
	<data name="CADability.GeoObject.Line.FilterType">
		<label>Line</label>
	</data>
	<data name="CADability.GeoObject.Point.FilterType">
		<label>Point</label>
	</data>
	<data name="CADability.GeoObject.Block.FilterType">
		<label>Block</label>
	</data>
	<data name="CADability.GeoObject.Hatch.FilterType">
		<label>Hatch</label>
	</data>
	<data name="CADability.GeoObject.Text.FilterType">
		<label>Text</label>
	</data>
	<data name="CADability.GeoObject.GeneralCurve.FilterType">
		<label>Curve</label>
	</data>
	<data name="CADability.GeoObject.PHCurve.FilterType">
		<label>-</label>
	</data>
	<data name="CADability.GeoObject.PHOffsetCurve.FilterType">
		<label>-</label>
	</data>
	<data name="CADability.GeoObject.BSpline.FilterType">
		<label>Spline</label>
	</data>
	<data name="CADability.InterpolatedDualSurfaceCurve.FilterType">
		<label>-</label>
	</data>
	<data name="CADability.RuledSurface+IntermediateCurve.FilterType">
		<label>-</label>
	</data>
	<data name="CADability.GeoObject.Shell.FilterType">
		<label>Shell</label>
	</data>
	<data name="CADability.GeoObject.Face.FilterType">
		<label>Face</label>
	</data>
	<data name="CADability.GeoObject.Solid.FilterType">
		<label>Solid</label>
	</data>
	<data name="CADability.GeoObject.Polyline.FilterType">
		<label>Polyline</label>
	</data>
	<data name="CADability.GeoObject.Path.FilterType">
		<label>Path</label>
	</data>
	<data name="CADability.GeoObject.BlockRef.FilterType">
		<label>Block Reference</label>
	</data>
	<data name="CADability.GeoObject.Dimension.FilterType">
		<label>Dimension</label>
	</data>
	<data name="CADability.GeoObject.Ellipse.FilterType">
		<label>Circle/Ellipse</label>
	</data>
	<data name="Filter.ObjectType">
		<label>Object types</label>
		<info>Specify object types that are passed through this filter (nothing selected: all objects)</info>
	</data>
	<data name="MeasureLengthx">
		<label>Length, x-axis:</label>
		<info>Measure length in x-axis direction</info>
	</data>
	<data name="MeasureLengthy">
		<label>Length, y-axis:</label>
		<info>Measure length in y-axis direction</info>
	</data>
	<data name="MeasureLengthz">
		<label>Length, z-axis:</label>
		<info>Measure length in z-axis direction</info>
	</data>
	<data name="Constr.Picture">
		<label>Bitmap</label>
		<info>Select bitmap and construct position</info>
	</data>
	<data name="Constr.Picture.RefPoint2Directions">
		<label>Fixpoint, 2 directions</label>
		<info>Construct a bitmap by fixpoint, width direction, height direction</info>
	</data>
	<data name="Constr.Picture.RefPointWidthHeight">
		<label>Fixpoint, width, height</label>
		<info>Construct a bitmap by fixpoint, width, height</info>
	</data>
	<data name="MenuId.Picture.Path.Open">
		<label>Open</label>
		<info>Open bitmap file</info>
	</data>
	<data name="MenuId.Picture.Path.Reload">
		<label>Reload</label>
		<info>Reload bitmap file</info>
	</data>
	<data name="Picture.Object">
		<label>Picture</label>
		<info>Rectangular picture object</info>
	</data>
	<data name="Picture.Location">
		<label>Location</label>
		<info>Location of the lower left point of the bitmap</info>
	</data>
	<data name="Picture.Scale">
		<label>Scale</label>
		<info>Scale factor of the picture</info>
	</data>
	<data name="Picture.Width">
		<label>Width</label>
		<info>Width of the picture</info>
	</data>
	<data name="Picture.Height">
		<label>Height</label>
		<info>Height of the picture</info>
	</data>
	<data name="Picture.DirWidth">
		<label>Base line direction</label>
		<info>Direction of the base line of the bitmap</info>
	</data>
	<data name="Picture.DirHeight">
		<label>Left side direction</label>
		<info>Direction of the left side of the bitmap</info>
	</data>
	<data name="Picture.Direction">
		<label>Base line angle</label>
		<info>Angle of the base line of the bitmap</info>
	</data>
	<data name="Picture.Path">
		<label>Filename</label>
		<info>Filename of the bitmap file</info>
	</data>
	<data name="Picture.KeepAspectRatio">
		<label>Keep aspect ratio</label>
		<info>Keep aspect ratio of the bitmap</info>
	</data>
	<data name="Picture.Rectangular">
		<label>Rectangular</label>
		<info>Force rectangularity of the bitmap</info>
	</data>
	<data name="Picture.Open.Filter">
		<label>Bitmap files|*.bmp;*.gif;*.exig;*.jpg;*.png;*.tiff|All files (*.*)|*.*</label>
	</data>
	<data name="UnscaledGeoObject.Location">
		<label>Position</label>
		<info>Position of the object</info>
	</data>
	<data name="UnscaledGeoObject.Object">
		<label>Unscaled object</label>
		<info>Unscaled object</info>
	</data>
	<data name="Arc.StartPoint">
		<label>Starting point</label>
		<info>Starting point of the arc</info>
	</data>
	<data name="Arc.EndPoint">
		<label>Ending point</label>
		<info>Ending point of the arc</info>
	</data>
	<data name="Ellipse.StartPoint">
		<label>Starting point</label>
		<info>Starting point of the elliptical arc</info>
	</data>
	<data name="Ellipse.EndPoint">
		<label>Ending point</label>
		<info>Ending point of the elliptical arc</info>
	</data>
	<data name="MenuId.OpenFileDialog.Show">
		<label>File...</label>
		<info>Select file</info>
	</data>
	<data name="MenuId.View.NewAnimatedView">
		<label>New animation view</label>
		<info>Define a new view for animation</info>
	</data>
	<data name="MenuId.View.NewGDIView">
		<label>New GDI 2D-view</label>
		<info>Define a new 2D view based on GDI</info>
	</data>
	<data name="MenuId.GDI2DView.Show">
		<label>Show</label>
		<info>Show this 2D view</info>
	</data>
	<data name="MenuId.GDI2DView.Rename">
		<label>Rename</label>
		<info>Rename this 2D view</info>
	</data>
	<data name="MenuId.GDI2DView.Remove">
		<label>Remove</label>
		<info>Remove this 2D view</info>
	</data>
	<data name="GDI2DView">
		<label>GDI 2D-View</label>
		<info>GDI 2D-View (without OpenGL): Properties</info>
	</data>
	<data name="MenuId.SelectedObject.ToBackground">
		<label>To Background</label>
		<info>Move this object to the background</info>
	</data>
	<data name="MenuId.SelectedObject.ToForeground">
		<label>To Foreground</label>
		<info>Move this object to the foreground</info>
	</data>
	<data name="Printing.GDIShading">
		<label>GDI Shading</label>
		<info>Use shading when printing on GDI</info>
	</data>
	<data name="Printing.GDIBitmap">
		<label>GDI Bitmapprinting</label>
		<info>GDI-Printing via bitmap, slowly, but maybe better areas</info>
	</data>
	<data name="Printing.GDICoverage">
		<label>GDI Coverage</label>
		<info>GDI-Printing with respecting coverage(slower)</info>
	</data>
	<data name="Printing.UseZOrder">
		<label>Display Order</label>
		<info>GDI-Printing with respecting of layer display order</info>
	</data>
	<data name="GDI2DView.Default.Name">
		<label>GDI View {0:##}</label>
	</data>
	<data name="AnimatedView.Default.Name">
		<label>AnimatedView {0:##}</label>
	</data>
	<data name="MenuId.CurveDriveCurve.Show">
		<label>Show</label>
		<info>Show the curve of this drive</info>
	</data>
	<data name="MenuId.CurveDriveCurve.Set">
		<label>Set Curve</label>
		<info>Set the curve of this drive to the selected curve</info>
	</data>
	<data name="MenuId.GDI2DView.Print">
		<label>Print</label>
		<info>Print this view. Select paper settings first.</info>
	</data>
	<data name="GDI2DView.PaperSettings">
		<label>Paper Settings</label>
		<info>Settings for paper size (page size)</info>
	</data>
	<data name="GDI2DView.PaperSettings.PaperWidth">
		<label>Width</label>
		<info>Width of the page in mm</info>
	</data>
	<data name="GDI2DView.PaperSettings.PaperHeight">
		<label>Height</label>
		<info>Height of the page in mm</info>
	</data>
	<data name="GDI2DView.PaperSettings.ShowPaper">
		<label>Show Page</label>
		<info>Show the page bounds in background</info>
	</data>
	<data name="GDI2DView.PaperSettings.ShowPaperValues">
		<label>|Show|Don't show</label>
	</data>
	<data name="GDI2DView.UseDisplayOrder">
		<label>Use Z-Index</label>
		<info>Display in the order of the Z-indices of the layers (slower)</info>
	</data>
	<data name="GDI2DView.UseDisplayOrderValues">
		<label>|use|don't use</label>
	</data>
	<data name="DualCurveDrive">
		<label>Coupled Curve Drive</label>
		<info>Drive simultaneous along two coupled curves</info>
	</data>
	<data name="DualCurveDrive.Curve1">
		<label>1. coupled curve</label>
		<info>Define 1. coupled curve for movement base</info>
	</data>
	<data name="DualCurveDrive.Curve2">
		<label>2. coupled curve</label>
		<info>Define 1. coupled curve for base of orientation in space</info>
	</data>
	<data name="DualCurveDrive.Stretch">
		<label>Coupled curves: Adjust</label>
		<info>Adjust moved object by stretching/crushing between the curves</info>
	</data>
	<data name="DualCurveDrive.StretchValues">
		<label>|Original|Adjust</label>
	</data>
	<data name="MenuId.Reduce">
		<label>Reduce</label>
		<info>Reduce path, connect lines and arcs when appropriate</info>
	</data>
	<data name="Circle.ArcLength">
		<label>Arc Length</label>
		<info>Length of the arc</info>
	</data>
	<data name="MenuId.Path.Vertex.StartWithMe">
		<label>start here</label>
		<info>Makes the path to start with this vertex</info>
	</data>
	<data name="Select.FastFeedback">
		<label>Fast Feedback</label>
		<info>Color objects when mouse is hovering over objects</info>
	</data>
	<data name="Select.FastFeedback.Values">
		<label>|Use|Don't use</label>
	</data>
	<data name="Select.FeedbackColor">
		<label>Feedback Color</label>
		<info>Color for objects under hovering cursor</info>
	</data>
	<data name="ToolsExpand.Distance">
		<label>distance</label>
		<info>additional distance: positiv: longer, negativ: shorter</info>
	</data>
	<data name="MenuId.XAxis">
		<label>X-Axis</label>
		<info>X-Axis</info>
	</data>
	<data name="MenuId.YAxis">
		<label>Y-Axis</label>
		<info>Y-Axis</info>
	</data>
	<data name="MenuId.ZAxis">
		<label>Z-Axis</label>
		<info>Z-Axis</info>
	</data>
	<data name="MenuId.LayoutView.Print.SelectPrinter">
		<label>Select Printer</label>
		<info>Select on which printer to print</info>
	</data>
	<data name="Constr.Rotate.SourcePlane">
		<label>Source plane</label>
		<info>rotate from this plane</info>
	</data>
	<data name="Constr.Rotate.TargetPlane">
		<label>Target plane</label>
		<info>rotate source plane to this plane</info>
	</data>
	<data name="Constr.Rotate.Offset">
		<label>offset</label>
		<info>additional offset by 0°, 90°, 180° or 270°(-90°)</info>
	</data>
	<data name="Constr.Rotate.Offset.Values">
		<label>|0°|90°|180°|270°(-90°)</label>
	</data>
	<data name="MenuId.Parametrics.DistanceTo">
		<label>change distance to...</label>
		<info>change the distance to another object of this solid or shell</info>
	</data>
	<data name="MenuId.Edge">
		<label>Edge</label>
		<info>submenu for the edge</info>
	</data>
	<data name="MenuId.Face">
		<label>Face</label>
		<info>submenu for the face</info>
	</data>
	<data name="MenuId.Shell">
		<label>Shell</label>
		<info>submenu for the shell</info>
	</data>
	<data name="MenuId.Solid">
		<label>Solid</label>
		<info>submenu for the solid</info>
	</data>
	<data name="DistanceTo.Mode">
		<label>Direction</label>
		<info>direction of the change</info>
	</data>
	<data name="DistanceTo.Mode.Values">
		<label>|forward|symmetric|backward</label>
	</data>
	<data name="DistanceTo.Distance">
		<label>Distance</label>
		<info>distance to the other object</info>
	</data>
	<data name="DistanceTo.ToObject">
		<label>Select target object</label>
		<info>select other object (vertex, edge or face) for the distance</info>
	</data>
	<data name="DistanceTo.FeatureObject">
		<label>Select feature object</label>
		<info>select other object (vertex, edge or face) for the distance</info>
	</data>
	<data name="DistanceTo.FromObject">
		<label>Select source object</label>
		<info>select other object (vertex, edge or face) for the distance</info>
	</data>
	<data name="DistanceTo.MoreForwardObjects">
		<label>More objects (forward)</label>
		<info>select more objects to be moved in forward direction</info>
	</data>
	<data name="DistanceTo.MoreBackwardObjects">
		<label>More objects (backward)</label>
		<info>select more objects to be moved in backward direction</info>
	</data>
	<data name="DistanceTo.AssociateParametric">
		<label>Associate parameter with solid</label>
		<info>Associate this parameter with the solid by th eprovided name</info>
	</data>
	<data name="DistanceTo.ParametricsName">
		<label>Parameter name</label>
		<info>Name for the parameter, no association if empty</info>
	</data>
	<data name="Constr.Parametrics.DistanceTo">
		<label>Change the distance between two parts of a solid</label>
	</data>
	<data name="StepImport">
		<label>STEP file import</label>
		<info>Settings for STEP file import</info>
	</data>
	<data name="StepImport.Parallel">
		<label>Multi threading</label>
		<info>use multi threading when importing</info>
	</data>
	<data name="StepImport.CombineFaces">
		<label>Combine similar faces</label>
		<info>combine adjacent faces with the same surface to a single face</info>
	</data>
	<data name="StepImport.Blocks">
		<label>Compose Blocks</label>
		<info>Compose assemblies and products to blocks</info>
	</data>
	<data name="StepImport.PreferNonPeriodic">
		<label>Prefer non-periodic surfaces</label>
		<info>Prefer non-periodic surfaces when importing faces</info>
	</data>
	<data name="Experimental">
		<label>Experimental settings</label>
		<info>Settings for experimental implementations</info>
	</data>
	<data name="Experimental.TestNewContextMenu">
		<label>Test parametrics context menu</label>
		<info>Test parametrics context menu</info>
	</data>
	<data name="MenuId.EdgeDistance">
		<label>Distance</label>
		<info>Distance between edges</info>
	</data>
	<data name="MenuId.Show">
		<label>Show</label>
		<info>
		</info>
	</data>
	<data name="MenuId.ShowHidden">
		<label>Show hidden objects</label>
		<info>Show hidden objects</info>
	</data>
	<data name="MenuId.ShowAxis">
		<label>Show axis</label>
		<info>Show axis of holes or round items</info>
	</data>
	<data name="MenuId.Fillet">
		<label>Fillet</label>
		<info>
		</info>
	</data>
	<data name="MenuId.Fillet.ChangeRadius">
		<label>Change radius</label>
		<info>Change radius of fillet</info>
	</data>
	<data name="MenuId.Fillet.Remove">
		<label>Remove</label>
		<info>Remove fillet</info>
	</data>
	<data name="MenuId.FeatureDiameter">
		<label>Diameter</label>
		<info>Change diameter of fillet</info>
	</data>
	<data name="MenuId.AxisPosition">
		<label>Axis position</label>
		<info>Modify position of axis</info>
	</data>
	<data name="MenuId.MakeTransparent">
		<label>Make transparent</label>
		<info>Display this object tranparent</info>
	</data>
	<data name="MenuId.Solid.Hide">
		<label>Hide</label>
		<info>Hide this solid</info>
	</data>
	<data name="MenuId.Selection.Set">
		<label>Set as selected</label>
		<info>Set this object as the only selected object</info>
	</data>
	<data name="MenuId.Selection.Add">
		<label>Add to selection</label>
		<info>Add this object to the selected objects</info>
	</data>
	<data name="MenuId.Remove">
		<label>Remove this object</label>
		<info>Remove this object from the model</info>
	</data>
	<data name="MenuId.AddToSelection">
		<label>Add to selection</label>
		<info>Add this object to the selected objects</info>
	</data>
	<data name="MenuId.More">
		<label>More</label>
	</data>
	<data name="MenuId.SelectMoreEdges">
		<label>Select more edges</label>
		<info>Select more edges for various tasks</info>
	</data>
	<data name="MenuId.SelectMoreFaces">
		<label>Select more faces</label>
		<info>Select more faces for various tasks</info>
	</data>
	<data name="MenuId.Gauge">
		<label>Gauge (Thickness)</label>
		<info>Change gauge of the solid</info>
	</data>
	<data name="MenuId.ParametricProperty.Remove">
		<label>Remove property</label>
		<info>Remove this parametric property from the shell</info>
	</data>
	<data name="Solid.ParametricProperties">
		<label>Parametrics</label>
		<info>The parametric entries of the shell</info>
	</data>
	<data name="MenuId.FaceDistance">
		<label>Distance to Face</label>
		<info>Distance to another face</info>
	</data>
	<data name="Solid.NewFeatureName">
		<label>Feature</label>
	</data>
	<data name="MenuId.Feature">
		<label>Feature</label>
	</data>
	<data name="MenuId.Feature.Position">
		<label>Position</label>
	</data>
	<data name="MenuId.Feature.Name">
		<label>Name</label>
	</data>
	<data name="MenuId.Feature.Remove">
		<label>Remove</label>
	</data>
	<data name="MenuId.SplitByPlane">
		<label>Split by plane</label>
	</data>
	<data name="MenuId.Axis">
		<label>Axis</label>
	</data>
	<data name="MenuId.Offset">
		<label>Offset Shell</label>
	</data>
	<data name="MenuId.ThickShell">
		<label>Thick Shell</label>
	</data>
	<data name="MenuId.Solid.ShellToSolid">
		<label>Shell to Solid</label>
	</data>
	<data name="MenuId.MakeOpaque">
		<label>Make Opaque</label>
		<info>Display this object opaque (non-tranparent)</info>
	</data>
	<data name="MenuId.Solid.RemoveFrom">
		<label>Subtract from Solid (Specify)</label>
		<info>This solid will be subtracted from another solid you will specify in the next step</info>
	</data>
	<data name="MenuId.Solid.RemoveFromAll">
		<label>Subtract from Overlapping</label>
		<info>Subtracts this solid from all overlapping or intersecting solids</info>
	</data>
	<data name="MenuId.Solid.RemoveAll">
		<label>Subtract Overlapping</label>
		<info>Subtracts all overlapping or intersecting solids from this solid</info>
	</data>
	<data name="MenuId.Solid.UniteWith">
		<label>Unite this solid with ...</label>
	</data>
	<data name="MenuId.Solid.UniteWithAll">
		<label>Unite with overlapping</label>
		<info>Unites this solid with all overlapping or intersecting solids into a single body</info>
	</data>
	<data name="MenuId.Solid.IntersectWith">
		<label>Intersect with Solid (Specify)</label>
		<info>Creates a new solid from the overlapping volume of this solid another solid to be specified</info>
	</data>
	<data name="MenuId.Solid.IntersectWith">
		<label>Intersect with Overlapping</label>
		<info>Creates a new solid from the overlapping volume of this solid and all intersecting solids</info>
	</data>
	<data name="MenuId.Solid.SplitWith">
		<label>Split with Solid (Specify)</label>
		<info>Splits this solids with a solid to specify into separate parts, creating individual bodies for the overlapping and non-overlapping regions</info>
	</data>
	<data name="MenuId.Solid.SplitWithAll">
		<label>Split with overlapping</label>
		<info>Splits intersecting solids into separate parts, creating individual bodies for the overlapping and non-overlapping regions</info>
	</data>
	<data name="MenuId.Parametrics.Cylinder.Radius">
		<label>Change radius</label>
		<info>Change radius of cylindrical features</info>
	</data>
	<data name="MenuId.Parametrics.Cylinder.Diameter">
		<label>Change radius</label>
		<info>Change radius of cylindrical features</info>
	</data>
	<data name="Constr.Parametrics.Cylinder.Radius">
		<label>Change radius</label>
		<info>Change radius of cylindrical features</info>
	</data>
	<data name="Constr.Parametrics.Cylinder.Diameter">
		<label>Change diameter</label>
		<info>Change diameter of cylindrical features</info>
	</data>
	<data name="Parametrics.Cylinder.Radius">
		<label>Radius</label>
		<info>Change radius of this feature</info>
	</data>
	<data name="Parametrics.Cylinder.Diameter">
		<label>Diameter</label>
		<info>Change diameter of this feature</info>
	</data>
	<data name="Parametrics.AssociateParametric">
		<label>Use as parameter for the solid</label>
	</data>
	<data name="Parametrics.AssociateParametric">
		<label>Use as parameter for the solid</label>
	</data>
	<data name="Parametrics.ParametricsName">
		<label>Name</label>
		<info>Name for the parameter. If provided, this will be a property of the solid</info>
	</data>
	<data name="Parametrics.PreserveValue">
		<label>Preserve Value</label>
		<info>If enabled, the parameter's value will remain unchanged when other parameters of the solid are modified</info>
	</data>
	<data name="MenuId.ParametricProperty.Preserve">
		<label>Preserve Value</label>
		<info>If enabled, the parameter's value will remain unchanged when other parameters of the solid are modified</info>
	</data>
	<data name="TextToValue.Failed">
		<label>Invalid input</label>
	</data>
	<data name="Parametrics.InvalidPropertyValue">
		<label>Ensure the value is within valid limits to maintain design integrity</label>
	</data>
	<data name="MenuId.ExtrusionLength">
		<label>Dimension</label>
		<info>Set the length or width dimension of an extrusion in this direction</info>
	</data>
	<data name="Extrude.Distance">
		<label>Extrusion Dimension</label>
		<info>Set the length or width dimension of an extrusion in this direction</info>
	</data>
	<data name="Extrude.MeassureForwardObject">
		<label>Meassure to</label>
		<info>Meassuer to this object</info>
	</data>
	<data name="Extrude.MeassureBackwardObject">
		<label>Meassure from</label>
		<info>Meassure from this object</info>
	</data>
	<data name="Vertex.Displayname">
		<label>Vertex</label>
		<info>A vertex of this shape</info>
	</data>
	<data name="Edge.Displayname">
		<label>Edge</label>
		<info>An edge of this shape</info>
	</data>
	<data name="Face.Displayname">
		<label>Face</label>
		<info>A face of this shape</info>
	</data>
	<data name="MenuId.Plane.OfCurve">
		<label>Plane of Curve</label>
		<info>Plane of planar curve, e.g. a circular arc</info>
	</data>
	<data name="MenuId.SetDrawingPlane">
		<label>Set Drawing Plane</label>
		<info>Use the surface of this face as the drawing plane</info>
	</data>
	<!--
	-->
</root>